{"id":"d28610ea73fdff991a6be6d030f03d5a","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n *\n * NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n * that can be minted.\n *\n * CAUTION: This extension should not be added in an upgrade to an already deployed contract.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 id => uint256) private _totalSupply;\n    uint256 private _totalSupplyAll;\n\n    /**\n     * @dev Total value of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Total value of tokens.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupplyAll;\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_update}.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override {\n        super._update(from, to, ids, values);\n\n        if (from == address(0)) {\n            uint256 totalMintValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values[i];\n                // Overflow check required: The rest of the code assumes that totalSupply never overflows\n                _totalSupply[ids[i]] += value;\n                totalMintValue += value;\n            }\n            // Overflow check required: The rest of the code assumes that totalSupplyAll never overflows\n            _totalSupplyAll += totalMintValue;\n        }\n\n        if (to == address(0)) {\n            uint256 totalBurnValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values[i];\n\n                unchecked {\n                    // Overflow not possible: values[i] <= balanceOf(from, ids[i]) <= totalSupply(ids[i])\n                    _totalSupply[ids[i]] -= value;\n                    // Overflow not possible: sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                    totalBurnValue += value;\n                }\n            }\n            unchecked {\n                // Overflow not possible: totalBurnValue = sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                _totalSupplyAll -= totalBurnValue;\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/AvaxGods.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.16;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\r\n\r\n/// @title AVAXGods\r\n/// @notice This contract handles the token management and battle logic for the AVAXGods game\r\n/// @notice Version 1.0.0\r\n/// @author Ava-Labs\r\n/// @author Julian Martinez\r\n/// @author Gabriel Cardona\r\n/// @author Raj Ranjan\r\n\r\ncontract AVAXGods is ERC1155, Ownable(msg.sender), ERC1155Supply {\r\n    string public baseURI; // baseURI where token metadata is stored\r\n    uint256 public totalTokenMinted; // Total number of tokens minted\r\n    uint256 public constant DEVIL = 0;\r\n    uint256 public constant GRIFFIN = 1;\r\n    uint256 public constant FIREBIRD = 2;\r\n    uint256 public constant KAMO = 3;\r\n    uint256 public constant KUKULKAN = 4;\r\n    uint256 public constant CELESTION = 5;\r\n    uint256 public constant MAX_ATTACK_DEFEND_STRENGTH = 10;\r\n\r\n    Player[] public players; // Array of players\r\n    GameToken[] public gameTokens; // Array of game tokens\r\n    Battle[] public battles; // Array of battles\r\n\r\n    function _update(\r\n        address,\r\n        address,\r\n        uint256[] memory ids,\r\n        uint256[] memory values\r\n    ) internal override(ERC1155, ERC1155Supply) {\r\n        // Add your custom implementation here or choose one of the base contract implementations\r\n        if (ids.length != values.length) {\r\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\r\n        }\r\n    }\r\n\r\n    enum BattleStatus {\r\n        PENDING,\r\n        STARTED,\r\n        ENDED\r\n    }\r\n\r\n    /// @dev GameToken struct to store player token info\r\n    struct GameToken {\r\n        string name; /// @param name battle card name; set by player\r\n        uint256 id; /// @param id battle card token id; will be randomly generated\r\n        uint256 attackStrength; /// @param attackStrength battle card attack; generated randomly\r\n        uint256 defenseStrength; /// @param defenseStrength battle card defense; generated randomly\r\n    }\r\n\r\n    /// @dev Player struct to store player info\r\n    struct Player {\r\n        address playerAddress; /// @param playerAddress player wallet address\r\n        string playerName; /// @param playerName player name; set by player during registration\r\n        uint256 playerMana; /// @param playerMana player mana; affected by battle results\r\n        uint256 playerHealth; /// @param playerHealth player health; affected by battle results\r\n        bool inBattle; /// @param inBattle boolean to indicate if a player is in battle\r\n    }\r\n\r\n    /// @dev Battle struct to store battle info\r\n    struct Battle {\r\n        BattleStatus battleStatus; /// @param battleStatus enum to indicate battle status\r\n        bytes32 battleHash; /// @param battleHash a hash of the battle name\r\n        string name; /// @param name battle name; set by player who creates battle\r\n        address[2] players; /// @param players address array representing players in this battle\r\n        uint8[2] moves; /// @param moves uint array representing players' move\r\n        address winner; /// @param winner winner address\r\n    }\r\n\r\n    mapping(address => uint256) playerInfo; // Mapping of player addresses to player index in the players array\r\n    mapping(address => uint256) playerTokenInfo; // Mapping of player addresses to player token index in the gameTokens array\r\n    mapping(string => uint256) battleInfo; // Mapping of battle name to battle index in the battles array\r\n\r\n    function isPlayer(address addr) public view returns (bool) {\r\n        if (playerInfo[addr] == 0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function getPlayer(address addr) public view returns (Player memory) {\r\n        require(isPlayer(addr), \"Player doesn't exist!\");\r\n        return players[playerInfo[addr]];\r\n    }\r\n\r\n    function getAllPlayers() public view returns (Player[] memory) {\r\n        return players;\r\n    }\r\n\r\n    function isPlayerToken(address addr) public view returns (bool) {\r\n        if (playerTokenInfo[addr] == 0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function getPlayerToken(\r\n        address addr\r\n    ) public view returns (GameToken memory) {\r\n        require(isPlayerToken(addr), \"Game token doesn't exist!\");\r\n        return gameTokens[playerTokenInfo[addr]];\r\n    }\r\n\r\n    function getAllPlayerTokens() public view returns (GameToken[] memory) {\r\n        return gameTokens;\r\n    }\r\n\r\n    // Battle getter function\r\n    function isBattle(string memory _name) public view returns (bool) {\r\n        if (battleInfo[_name] == 0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function getBattle(\r\n        string memory _name\r\n    ) public view returns (Battle memory) {\r\n        require(isBattle(_name), \"Battle doesn't exist!\");\r\n        return battles[battleInfo[_name]];\r\n    }\r\n\r\n    function getAllBattles() public view returns (Battle[] memory) {\r\n        return battles;\r\n    }\r\n\r\n    function updateBattle(\r\n        string memory _name,\r\n        Battle memory _newBattle\r\n    ) private {\r\n        require(isBattle(_name), \"Battle doesn't exist\");\r\n        battles[battleInfo[_name]] = _newBattle;\r\n    }\r\n\r\n    // Events\r\n    event NewPlayer(address indexed owner, string name);\r\n    event NewBattle(\r\n        string battleName,\r\n        address indexed player1,\r\n        address indexed player2\r\n    );\r\n    event BattleEnded(\r\n        string battleName,\r\n        address indexed winner,\r\n        address indexed loser\r\n    );\r\n    event BattleMove(string indexed battleName, bool indexed isFirstMove);\r\n    event NewGameToken(\r\n        address indexed owner,\r\n        uint256 id,\r\n        uint256 attackStrength,\r\n        uint256 defenseStrength\r\n    );\r\n    event RoundEnded(address[2] damagedPlayers);\r\n\r\n    /// @dev Initializes the contract by setting a `metadataURI` to the token collection\r\n    /// @param _metadataURI baseURI where token metadata is stored\r\n    constructor(string memory _metadataURI) ERC1155(_metadataURI) {\r\n        baseURI = _metadataURI; // Set baseURI\r\n        initialize();\r\n    }\r\n\r\n    function setURI(string memory newuri) public onlyOwner {\r\n        _setURI(newuri);\r\n    }\r\n\r\n    function initialize() private {\r\n        gameTokens.push(GameToken(\"\", 0, 0, 0));\r\n        players.push(Player(address(0), \"\", 0, 0, false));\r\n        battles.push(\r\n            Battle(\r\n                BattleStatus.PENDING,\r\n                bytes32(0),\r\n                \"\",\r\n                [address(0), address(0)],\r\n                [0, 0],\r\n                address(0)\r\n            )\r\n        );\r\n    }\r\n\r\n    /// @dev Registers a player\r\n    /// @param _name player name; set by player\r\n    function registerPlayer(\r\n        string memory _name,\r\n        string memory _gameTokenName\r\n    ) external {\r\n        require(!isPlayer(msg.sender), \"Player already registered\"); // Require that player is not already registered\r\n\r\n        uint256 _id = players.length;\r\n        players.push(Player(msg.sender, _name, 10, 25, false)); // Adds player to players array\r\n        playerInfo[msg.sender] = _id; // Creates player info mapping\r\n\r\n        createRandomGameToken(_gameTokenName);\r\n\r\n        emit NewPlayer(msg.sender, _name); // Emits NewPlayer event\r\n    }\r\n\r\n    /// @dev internal function to generate random number; used for Battle Card Attack and Defense Strength\r\n    function _createRandomNum(\r\n        uint256 _max,\r\n        address _sender\r\n    ) internal view returns (uint256 randomValue) {\r\n        uint256 randomNum = uint256(\r\n            keccak256(\r\n                abi.encodePacked(block.prevrandao, block.timestamp, _sender)\r\n            )\r\n        );\r\n\r\n        randomValue = randomNum % _max;\r\n        if (randomValue == 0) {\r\n            randomValue = _max / 2;\r\n        }\r\n\r\n        return randomValue;\r\n    }\r\n\r\n    /// @dev internal function to create a new Battle Card\r\n    function _createGameToken(\r\n        string memory _name\r\n    ) internal returns (GameToken memory) {\r\n        uint256 randAttackStrength = _createRandomNum(\r\n            MAX_ATTACK_DEFEND_STRENGTH,\r\n            msg.sender\r\n        );\r\n        uint256 randDefenseStrength = MAX_ATTACK_DEFEND_STRENGTH -\r\n            randAttackStrength;\r\n\r\n        uint8 randId = uint8(\r\n            uint256(keccak256(abi.encodePacked(block.timestamp, msg.sender))) %\r\n                100\r\n        );\r\n        randId = randId % 6;\r\n        if (randId == 0) {\r\n            randId++;\r\n        }\r\n\r\n        GameToken memory newGameToken = GameToken(\r\n            _name,\r\n            randId,\r\n            randAttackStrength,\r\n            randDefenseStrength\r\n        );\r\n\r\n        uint256 _id = gameTokens.length;\r\n        gameTokens.push(newGameToken);\r\n        playerTokenInfo[msg.sender] = _id;\r\n\r\n        _mint(msg.sender, randId, 1, \"0x0\");\r\n        totalTokenMinted++;\r\n\r\n        emit NewGameToken(\r\n            msg.sender,\r\n            randId,\r\n            randAttackStrength,\r\n            randDefenseStrength\r\n        );\r\n        return newGameToken;\r\n    }\r\n\r\n    /// @dev Creates a new game token\r\n    /// @param _name game token name; set by player\r\n    function createRandomGameToken(string memory _name) public {\r\n        require(!getPlayer(msg.sender).inBattle, \"Player is in a battle\"); // Require that player is not already in a battle\r\n        require(isPlayer(msg.sender), \"Please Register Player First\"); // Require that the player is registered\r\n\r\n        _createGameToken(_name); // Creates game token\r\n    }\r\n\r\n    function getTotalSupply() external view returns (uint256) {\r\n        return totalTokenMinted;\r\n    }\r\n\r\n    /// @dev Creates a new battle\r\n    /// @param _name battle name; set by player\r\n    function createBattle(\r\n        string memory _name\r\n    ) external returns (Battle memory) {\r\n        require(isPlayer(msg.sender), \"Please Register Player First\"); // Require that the player is registered\r\n        require(!isBattle(_name), \"Battle already exists!\"); // Require battle with same name should not exist\r\n\r\n        bytes32 battleHash = keccak256(abi.encode(_name));\r\n\r\n        Battle memory _battle = Battle(\r\n            BattleStatus.PENDING, // Battle pending\r\n            battleHash, // Battle hash\r\n            _name, // Battle name\r\n            [msg.sender, address(0)], // player addresses; player 2 empty until they joins battle\r\n            [0, 0], // moves for each player\r\n            address(0) // winner address; empty until battle ends\r\n        );\r\n\r\n        uint256 _id = battles.length;\r\n        battleInfo[_name] = _id;\r\n        battles.push(_battle);\r\n\r\n        return _battle;\r\n    }\r\n\r\n    /// @dev Player joins battle\r\n    /// @param _name battle name; name of battle player wants to join\r\n    function joinBattle(string memory _name) external returns (Battle memory) {\r\n        Battle memory _battle = getBattle(_name);\r\n\r\n        require(\r\n            _battle.battleStatus == BattleStatus.PENDING,\r\n            \"Battle already started!\"\r\n        ); // Require that battle has not started\r\n        require(\r\n            _battle.players[0] != msg.sender,\r\n            \"Only player two can join a battle\"\r\n        ); // Require that player 2 is joining the battle\r\n        require(!getPlayer(msg.sender).inBattle, \"Already in battle\"); // Require that player is not already in a battle\r\n\r\n        _battle.battleStatus = BattleStatus.STARTED;\r\n        _battle.players[1] = msg.sender;\r\n        updateBattle(_name, _battle);\r\n\r\n        players[playerInfo[_battle.players[0]]].inBattle = true;\r\n        players[playerInfo[_battle.players[1]]].inBattle = true;\r\n\r\n        emit NewBattle(_battle.name, _battle.players[0], msg.sender); // Emits NewBattle event\r\n        return _battle;\r\n    }\r\n\r\n    // Read battle move info for player 1 and player 2\r\n    function getBattleMoves(\r\n        string memory _battleName\r\n    ) public view returns (uint256 P1Move, uint256 P2Move) {\r\n        Battle memory _battle = getBattle(_battleName);\r\n\r\n        P1Move = _battle.moves[0];\r\n        P2Move = _battle.moves[1];\r\n\r\n        return (P1Move, P2Move);\r\n    }\r\n\r\n    function _registerPlayerMove(\r\n        uint256 _player,\r\n        uint8 _choice,\r\n        string memory _battleName\r\n    ) internal {\r\n        require(\r\n            _choice == 1 || _choice == 2,\r\n            \"Choice should be either 1 or 2!\"\r\n        );\r\n        require(\r\n            _choice == 1 ? getPlayer(msg.sender).playerMana >= 3 : true,\r\n            \"Mana not sufficient for attacking!\"\r\n        );\r\n        battles[battleInfo[_battleName]].moves[_player] = _choice;\r\n    }\r\n\r\n    // User chooses attack or defense move for battle card\r\n    function attackOrDefendChoice(\r\n        uint8 _choice,\r\n        string memory _battleName\r\n    ) external {\r\n        Battle memory _battle = getBattle(_battleName);\r\n\r\n        require(\r\n            _battle.battleStatus == BattleStatus.STARTED,\r\n            \"Battle not started. Please tell another player to join the battle\"\r\n        ); // Require that battle has started\r\n        require(\r\n            _battle.battleStatus != BattleStatus.ENDED,\r\n            \"Battle has already ended\"\r\n        ); // Require that battle has not ended\r\n        require(\r\n            msg.sender == _battle.players[0] ||\r\n                msg.sender == _battle.players[1],\r\n            \"You are not in this battle\"\r\n        ); // Require that player is in the battle\r\n\r\n        require(\r\n            _battle.moves[_battle.players[0] == msg.sender ? 0 : 1] == 0,\r\n            \"You have already made a move!\"\r\n        );\r\n\r\n        _registerPlayerMove(\r\n            _battle.players[0] == msg.sender ? 0 : 1,\r\n            _choice,\r\n            _battleName\r\n        );\r\n\r\n        _battle = getBattle(_battleName);\r\n        uint _movesLeft = 2 -\r\n            (_battle.moves[0] == 0 ? 0 : 1) -\r\n            (_battle.moves[1] == 0 ? 0 : 1);\r\n        emit BattleMove(_battleName, _movesLeft == 1 ? true : false);\r\n\r\n        if (_movesLeft == 0) {\r\n            _awaitBattleResults(_battleName);\r\n        }\r\n    }\r\n\r\n    // Awaits battle results\r\n    function _awaitBattleResults(string memory _battleName) internal {\r\n        Battle memory _battle = getBattle(_battleName);\r\n\r\n        require(\r\n            msg.sender == _battle.players[0] ||\r\n                msg.sender == _battle.players[1],\r\n            \"Only players in this battle can make a move\"\r\n        );\r\n\r\n        require(\r\n            _battle.moves[0] != 0 && _battle.moves[1] != 0,\r\n            \"Players still need to make a move\"\r\n        );\r\n\r\n        _resolveBattle(_battle);\r\n    }\r\n\r\n    struct P {\r\n        uint index;\r\n        uint move;\r\n        uint health;\r\n        uint attack;\r\n        uint defense;\r\n    }\r\n\r\n    /// @dev Resolve battle function to determine winner and loser of battle\r\n    /// @param _battle battle; battle to resolve\r\n    function _resolveBattle(Battle memory _battle) internal {\r\n        P memory p1 = P(\r\n            playerInfo[_battle.players[0]],\r\n            _battle.moves[0],\r\n            getPlayer(_battle.players[0]).playerHealth,\r\n            getPlayerToken(_battle.players[0]).attackStrength,\r\n            getPlayerToken(_battle.players[0]).defenseStrength\r\n        );\r\n\r\n        P memory p2 = P(\r\n            playerInfo[_battle.players[1]],\r\n            _battle.moves[1],\r\n            getPlayer(_battle.players[1]).playerHealth,\r\n            getPlayerToken(_battle.players[1]).attackStrength,\r\n            getPlayerToken(_battle.players[1]).defenseStrength\r\n        );\r\n\r\n        address[2] memory _damagedPlayers = [address(0), address(0)];\r\n\r\n        if (p1.move == 1 && p2.move == 1) {\r\n            if (p1.attack >= p2.health) {\r\n                _endBattle(_battle.players[0], _battle);\r\n            } else if (p2.attack >= p1.health) {\r\n                _endBattle(_battle.players[1], _battle);\r\n            } else {\r\n                players[p1.index].playerHealth -= p2.attack;\r\n                players[p2.index].playerHealth -= p1.attack;\r\n\r\n                players[p1.index].playerMana -= 3;\r\n                players[p2.index].playerMana -= 3;\r\n\r\n                // Both player's health damaged\r\n                _damagedPlayers = _battle.players;\r\n            }\r\n        } else if (p1.move == 1 && p2.move == 2) {\r\n            uint256 PHAD = p2.health + p2.defense;\r\n            if (p1.attack >= PHAD) {\r\n                _endBattle(_battle.players[0], _battle);\r\n            } else {\r\n                uint256 healthAfterAttack;\r\n\r\n                if (p2.defense > p1.attack) {\r\n                    healthAfterAttack = p2.health;\r\n                } else {\r\n                    healthAfterAttack = PHAD - p1.attack;\r\n\r\n                    // Player 2 health damaged\r\n                    _damagedPlayers[0] = _battle.players[1];\r\n                }\r\n\r\n                players[p2.index].playerHealth = healthAfterAttack;\r\n\r\n                players[p1.index].playerMana -= 3;\r\n                players[p2.index].playerMana += 3;\r\n            }\r\n        } else if (p1.move == 2 && p2.move == 1) {\r\n            uint256 PHAD = p1.health + p1.defense;\r\n            if (p2.attack >= PHAD) {\r\n                _endBattle(_battle.players[1], _battle);\r\n            } else {\r\n                uint256 healthAfterAttack;\r\n\r\n                if (p1.defense > p2.attack) {\r\n                    healthAfterAttack = p1.health;\r\n                } else {\r\n                    healthAfterAttack = PHAD - p2.attack;\r\n\r\n                    // Player 1 health damaged\r\n                    _damagedPlayers[0] = _battle.players[0];\r\n                }\r\n\r\n                players[p1.index].playerHealth = healthAfterAttack;\r\n\r\n                players[p1.index].playerMana += 3;\r\n                players[p2.index].playerMana -= 3;\r\n            }\r\n        } else if (p1.move == 2 && p2.move == 2) {\r\n            players[p1.index].playerMana += 3;\r\n            players[p2.index].playerMana += 3;\r\n        }\r\n\r\n        emit RoundEnded(_damagedPlayers);\r\n\r\n        // Reset moves to 0\r\n        _battle.moves[0] = 0;\r\n        _battle.moves[1] = 0;\r\n        updateBattle(_battle.name, _battle);\r\n\r\n        // Reset random attack and defense strength\r\n        uint256 _randomAttackStrengthPlayer1 = _createRandomNum(\r\n            MAX_ATTACK_DEFEND_STRENGTH,\r\n            _battle.players[0]\r\n        );\r\n        gameTokens[playerTokenInfo[_battle.players[0]]]\r\n            .attackStrength = _randomAttackStrengthPlayer1;\r\n        gameTokens[playerTokenInfo[_battle.players[0]]].defenseStrength =\r\n            MAX_ATTACK_DEFEND_STRENGTH -\r\n            _randomAttackStrengthPlayer1;\r\n\r\n        uint256 _randomAttackStrengthPlayer2 = _createRandomNum(\r\n            MAX_ATTACK_DEFEND_STRENGTH,\r\n            _battle.players[1]\r\n        );\r\n        gameTokens[playerTokenInfo[_battle.players[1]]]\r\n            .attackStrength = _randomAttackStrengthPlayer2;\r\n        gameTokens[playerTokenInfo[_battle.players[1]]].defenseStrength =\r\n            MAX_ATTACK_DEFEND_STRENGTH -\r\n            _randomAttackStrengthPlayer2;\r\n    }\r\n\r\n    function quitBattle(string memory _battleName) public {\r\n        Battle memory _battle = getBattle(_battleName);\r\n        require(\r\n            _battle.players[0] == msg.sender ||\r\n                _battle.players[1] == msg.sender,\r\n            \"You are not in this battle!\"\r\n        );\r\n\r\n        _battle.players[0] == msg.sender\r\n            ? _endBattle(_battle.players[1], _battle)\r\n            : _endBattle(_battle.players[0], _battle);\r\n    }\r\n\r\n    /// @dev internal function to end the battle\r\n    /// @param battleEnder winner address\r\n    /// @param _battle battle; taken from attackOrDefend function\r\n    function _endBattle(\r\n        address battleEnder,\r\n        Battle memory _battle\r\n    ) internal returns (Battle memory) {\r\n        require(\r\n            _battle.battleStatus != BattleStatus.ENDED,\r\n            \"Battle already ended\"\r\n        ); // Require that battle has not ended\r\n\r\n        _battle.battleStatus = BattleStatus.ENDED;\r\n        _battle.winner = battleEnder;\r\n        updateBattle(_battle.name, _battle);\r\n\r\n        uint p1 = playerInfo[_battle.players[0]];\r\n        uint p2 = playerInfo[_battle.players[1]];\r\n\r\n        players[p1].inBattle = false;\r\n        players[p1].playerHealth = 25;\r\n        players[p1].playerMana = 10;\r\n\r\n        players[p2].inBattle = false;\r\n        players[p2].playerHealth = 25;\r\n        players[p2].playerMana = 10;\r\n\r\n        address _battleLoser = battleEnder == _battle.players[0]\r\n            ? _battle.players[1]\r\n            : _battle.players[0];\r\n\r\n        emit BattleEnded(_battle.name, battleEnder, _battleLoser); // Emits BattleEnded event\r\n\r\n        return _battle;\r\n    }\r\n\r\n    // Turns uint256 into string\r\n    function uintToStr(\r\n        uint256 _i\r\n    ) internal pure returns (string memory _uintAsString) {\r\n        if (_i == 0) {\r\n            return \"0\";\r\n        }\r\n        uint256 j = _i;\r\n        uint256 len;\r\n        while (j != 0) {\r\n            len++;\r\n            j /= 10;\r\n        }\r\n        bytes memory bstr = new bytes(len);\r\n        uint256 k = len;\r\n        while (_i != 0) {\r\n            k = k - 1;\r\n            uint8 temp = (48 + uint8(_i - (_i / 10) * 10));\r\n            bytes1 b1 = bytes1(temp);\r\n            bstr[k] = b1;\r\n            _i /= 10;\r\n        }\r\n        return string(bstr);\r\n    }\r\n\r\n    // Token URI getter function\r\n    function tokenURI(uint256 tokenId) public view returns (string memory) {\r\n        return\r\n            string(abi.encodePacked(baseURI, \"/\", uintToStr(tokenId), \".json\"));\r\n    }\r\n\r\n    // The following functions are overrides required by Solidity.\r\n    function _beforeTokenTransfer(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts,\r\n        bytes memory data\r\n    ) internal {\r\n        //super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\r\n    }\r\n}\r\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":100},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/AvaxGods.sol:32:5:\n   |\n32 |     function _update(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":1600,"file":"contracts/AvaxGods.sol","start":1197},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1901],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1902,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1901],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:139:1","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"288:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"307:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"627:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"660:6:1","nodeType":"VariableDeclaration","scope":159,"src":"652:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"676:7:1","nodeType":"VariableDeclaration","scope":159,"src":"668:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"693:6:1","nodeType":"VariableDeclaration","scope":159,"src":"685:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:1"},"src":"621:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"707:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"870:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"897:6:1","nodeType":"VariableDeclaration","scope":164,"src":"889:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:1"},"src":"864:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"911:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1102:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:1"},"src":"1075:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1126:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1517:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1509:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1526:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1553:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1545:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:1"},"src":"1476:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1567:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1752:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1781:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1773:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:1"},"src":"1746:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1797:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2003:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2031:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:1"},"src":"1997:43:1"}],"scope":285,"src":"278:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2044:141:1","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2196:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2216:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2446:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2473:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2465:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:1"},"src":"2440:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2486:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2629:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2652:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:1"},"src":"2623:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2675:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3004:6:1","nodeType":"VariableDeclaration","scope":209,"src":"2996:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3037:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3029:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:1"},"src":"2969:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3050:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3213:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3241:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3233:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:1"},"src":"3207:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3255:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3447:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:1"},"src":"3419:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3471:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3764:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3756:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3774:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:1"},"src":"3723:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3797:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3982:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4012:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4004:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:1"},"src":"3976:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4028:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4236:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4266:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4258:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:1"},"src":"4230:46:1"}],"scope":285,"src":"2186:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4280:143:1","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4434:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4455:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4862:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4854:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4878:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4870:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4895:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4887:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4903:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:1"},"src":"4821:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4926:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5089:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5118:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5110:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:1"},"src":"5083:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5132:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5325:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:1"},"src":"5296:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5349:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5653:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5645:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5671:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5663:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:1"},"src":"5610:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5684:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5900:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5892:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:1"},"src":"5863:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5916:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6155:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:1"},"src":"6118:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6171:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6488:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6507:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:1"},"src":"6456:73:1"}],"scope":285,"src":"4424:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6420:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[1871],"Context":[1901],"ERC1155":[1335],"ERC165":[2035],"IERC1155":[1458],"IERC1155Errors":[284],"IERC1155MetadataURI":[1688],"IERC1155Receiver":[1500],"IERC165":[2047]},"id":1336,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1459,"src":"135:40:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"./IERC1155Receiver.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1501,"src":"176:56:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"184:16:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1689,"src":"233:73:2","symbolAliases":[{"foreign":{"id":291,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"241:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1902,"src":"307:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"315:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":2036,"src":"356:69:2","symbolAliases":[{"foreign":{"id":295,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"364:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":296,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"373:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":1872,"src":"426:46:2","symbolAliases":[{"foreign":{"id":298,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"434:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1336,"sourceUnit":285,"src":"473:67:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"481:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["756:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"756:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"756:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["765:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2035,"src":"765:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"765:6:2"},{"baseName":{"id":307,"name":"IERC1155","nameLocations":["773:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1458,"src":"773:8:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"773:8:2"},{"baseName":{"id":309,"name":"IERC1155MetadataURI","nameLocations":["783:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1688,"src":"783:19:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"783:19:2"},{"baseName":{"id":311,"name":"IERC1155Errors","nameLocations":["804:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"804:14:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"804:14:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"542:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1335,"linearizedBaseContracts":[1335,284,1688,1458,2035,2047,1901],"name":"ERC1155","nameLocation":"745:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":316,"libraryName":{"id":313,"name":"Arrays","nameLocations":["831:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1871,"src":"831:6:2"},"nodeType":"UsingForDirective","src":"825:27:2","typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"842:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":320,"libraryName":{"id":317,"name":"Arrays","nameLocations":["863:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1871,"src":"863:6:2"},"nodeType":"UsingForDirective","src":"857:27:2","typeName":{"baseType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"874:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ArrayTypeName","src":"874:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":326,"mutability":"mutable","name":"_balances","nameLocation":"957:9:2","nodeType":"VariableDeclaration","scope":1335,"src":"890:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":325,"keyName":"id","keyNameLocation":"906:2:2","keyType":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"890:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":324,"keyName":"account","keyNameLocation":"928:7:2","keyType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"912:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1043:18:2","nodeType":"VariableDeclaration","scope":1335,"src":"973:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"989:7:2","keyType":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"981:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"973:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"keyName":"operator","keyNameLocation":"1016:8:2","keyType":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1008:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1000:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"1028:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_uri","nameLocation":"1197:4:2","nodeType":"VariableDeclaration","scope":1335,"src":"1182:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1182:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":344,"nodeType":"Block","src":"1283:30:2","statements":[{"expression":{"arguments":[{"id":341,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1301:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":340,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"1293:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1293:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"1293:13:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"1208:38:2","text":" @dev See {_setURI}."},"id":345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"uri_","nameLocation":"1277:4:2","nodeType":"VariableDeclaration","scope":345,"src":"1263:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"1263:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1262:20:2"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"1283:0:2"},"scope":1335,"src":"1251:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2034,2046],"body":{"id":375,"nodeType":"Block","src":"1488:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1517:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":358,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1537:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1458_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1458_$","typeString":"type(contract IERC1155)"}],"id":357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1532:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1458","typeString":"type(contract IERC1155)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1547:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1532:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1517:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1574:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":364,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"1594:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1688_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1688_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1589:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1589:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1688","typeString":"type(contract IERC1155MetadataURI)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1615:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1589:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1574:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1517:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1666:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":369,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1642:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1335_$","typeString":"type(contract super ERC1155)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1648:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2034,"src":"1642:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1517:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":374,"nodeType":"Return","src":"1498:180:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1319:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1389:17:2","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[{"id":350,"name":"ERC165","nameLocations":["1456:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2035,"src":"1456:6:2"},{"id":351,"name":"IERC165","nameLocations":["1464:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"1464:7:2"}],"src":"1447:25:2"},"parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"interfaceId","nameLocation":"1414:11:2","nodeType":"VariableDeclaration","scope":376,"src":"1407:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1407:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1406:20:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1482:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1482:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1481:6:2"},"scope":1335,"src":"1380:305:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1687],"body":{"id":386,"nodeType":"Block","src":"2159:28:2","statements":[{"expression":{"id":384,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2176:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2169:11:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1691:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2093:3:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2097:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2096:18:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2144:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2144:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2143:15:2"},"scope":1335,"src":"2084:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1396],"body":{"id":403,"nodeType":"Block","src":"2333:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":397,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2350:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":399,"indexExpression":{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2360:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2350:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2364:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2350:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":402,"nodeType":"Return","src":"2343:29:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2193:49:2","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2256:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"2274:7:2","nodeType":"VariableDeclaration","scope":404,"src":"2266:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"id","nameLocation":"2291:2:2","nodeType":"VariableDeclaration","scope":404,"src":"2283:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2283:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2265:29:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2324:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2323:9:2"},"scope":1335,"src":"2247:132:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1409],"body":{"id":473,"nodeType":"Block","src":"2678:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":417,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2692:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2701:6:2","memberName":"length","nodeType":"MemberAccess","src":"2692:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":419,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2711:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2715:6:2","memberName":"length","nodeType":"MemberAccess","src":"2711:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2692:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"2688:121:2","trueBody":{"id":429,"nodeType":"Block","src":"2723:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":423,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2770:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2774:6:2","memberName":"length","nodeType":"MemberAccess","src":"2770:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":425,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2782:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2791:6:2","memberName":"length","nodeType":"MemberAccess","src":"2782:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2744:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"2737:61:2"}]}},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"batchBalances","nameLocation":"2836:13:2","nodeType":"VariableDeclaration","scope":473,"src":"2819:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2819:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"id":439,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2866:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2875:6:2","memberName":"length","nodeType":"MemberAccess","src":"2866:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2852:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2856:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2856:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2819:63:2"},{"body":{"id":469,"nodeType":"Block","src":"2939:112:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2953:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"indexExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2967:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2953:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3010:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":458,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2982:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2991:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1870,"src":"2982:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2982:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3037:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":462,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3014:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"3014:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2972:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2953:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"2953:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2913:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":448,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2917:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2926:6:2","memberName":"length","nodeType":"MemberAccess","src":"2917:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2913:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2906:1:2","nodeType":"VariableDeclaration","scope":470,"src":"2898:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2910:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2898:13:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2934:3:2","subExpression":{"id":451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2936:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2934:3:2"},"nodeType":"ForStatement","src":"2893:158:2"},{"expression":{"id":471,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3068:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":416,"id":472,"nodeType":"Return","src":"3061:20:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2385:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2545:14:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"accounts","nameLocation":"2586:8:2","nodeType":"VariableDeclaration","scope":474,"src":"2569:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ArrayTypeName","src":"2569:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"ids","nameLocation":"2621:3:2","nodeType":"VariableDeclaration","scope":474,"src":"2604:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2604:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ArrayTypeName","src":"2604:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2559:71:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2660:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2660:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"2660:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2659:18:2"},"scope":1335,"src":"2536:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1417],"body":{"id":489,"nodeType":"Block","src":"3231:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3260:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3260:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3274:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3284:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":482,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"3241:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3241:52:2"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3094:57:2","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3165:17:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"operator","nameLocation":"3191:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3183:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"3183:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"approved","nameLocation":"3206:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3201:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"3201:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3182:33:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3231:0:2"},"scope":1335,"src":"3156:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1427],"body":{"id":506,"nodeType":"Block","src":"3463:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":500,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3480:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3499:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3480:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":504,"indexExpression":{"id":503,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3508:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3480:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"3473:44:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3306:56:2","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3376:16:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"3401:7:2","nodeType":"VariableDeclaration","scope":507,"src":"3393:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"3393:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"operator","nameLocation":"3418:8:2","nodeType":"VariableDeclaration","scope":507,"src":"3410:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3410:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3392:35:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"3457:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"3457:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3456:6:2"},"scope":1335,"src":"3367:157:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1441],"body":{"id":550,"nodeType":"Block","src":"3704:238:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"3722:6:2","nodeType":"VariableDeclaration","scope":550,"src":"3714:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3714:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":523,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3731:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3714:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3757:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3765:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3757:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3775:31:2","subExpression":{"arguments":[{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3793:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3799:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3776:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3776:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3757:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"3753:129:2","trueBody":{"id":540,"nodeType":"Block","src":"3808:74:2","statements":[{"errorCall":{"arguments":[{"id":536,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3858:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3866:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3829:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3829:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"RevertStatement","src":"3822:49:2"}]}},{"expression":{"arguments":[{"id":543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3909:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3915:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3919:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3923:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3930:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":542,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"3891:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3891:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3891:44:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"3530:56:2","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3600:16:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"3625:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3617:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3617:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3639:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3631:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3631:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"3651:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3643:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3643:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"3663:5:2","nodeType":"VariableDeclaration","scope":551,"src":"3655:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3655:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"data","nameLocation":"3683:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3670:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3670:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3616:72:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3704:0:2"},"scope":1335,"src":"3591:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1457],"body":{"id":596,"nodeType":"Block","src":"4198:245:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"sender","nameLocation":"4216:6:2","nodeType":"VariableDeclaration","scope":596,"src":"4208:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4208:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"4225:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4225:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4208:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4251:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4259:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4251:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4269:31:2","subExpression":{"arguments":[{"id":576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4287:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4293:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4270:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4251:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"4247:129:2","trueBody":{"id":586,"nodeType":"Block","src":"4302:74:2","statements":[{"errorCall":{"arguments":[{"id":582,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4352:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4323:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4323:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"RevertStatement","src":"4316:49:2"}]}},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4408:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4414:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4418:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":592,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4423:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4431:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4385:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4385:51:2"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"3948:61:2","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4023:21:2","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"from","nameLocation":"4062:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4054:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"4054:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"to","nameLocation":"4084:2:2","nodeType":"VariableDeclaration","scope":597,"src":"4076:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"4076:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"ids","nameLocation":"4113:3:2","nodeType":"VariableDeclaration","scope":597,"src":"4096:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ArrayTypeName","src":"4096:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"values","nameLocation":"4143:6:2","nodeType":"VariableDeclaration","scope":597,"src":"4126:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"4126:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"nodeType":"ArrayTypeName","src":"4126:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"4172:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4159:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4159:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4044:138:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"4198:0:2"},"scope":1335,"src":"4014:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"5251:1174:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5265:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5269:6:2","memberName":"length","nodeType":"MemberAccess","src":"5265:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":613,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5279:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5286:6:2","memberName":"length","nodeType":"MemberAccess","src":"5279:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5265:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"5261:117:2","trueBody":{"id":623,"nodeType":"Block","src":"5294:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":617,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5341:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5345:6:2","memberName":"length","nodeType":"MemberAccess","src":"5341:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":619,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5353:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5360:6:2","memberName":"length","nodeType":"MemberAccess","src":"5353:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5315:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5315:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"RevertStatement","src":"5308:59:2"}]}},{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"5396:8:2","nodeType":"VariableDeclaration","scope":749,"src":"5388:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"5407:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5388:31:2"},{"body":{"id":710,"nodeType":"Block","src":"5471:650:2","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"5493:2:2","nodeType":"VariableDeclaration","scope":710,"src":"5485:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5485:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5521:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5498:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5502:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"5498:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5485:38:2"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"5545:5:2","nodeType":"VariableDeclaration","scope":710,"src":"5537:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5537:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5579:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5553:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5560:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"5553:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5553:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5537:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5600:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5616:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5608:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5608:7:2","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5608:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5600:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"5596:420:2","trueBody":{"id":692,"nodeType":"Block","src":"5620:396:2","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"fromBalance","nameLocation":"5646:11:2","nodeType":"VariableDeclaration","scope":692,"src":"5638:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5638:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5660:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":665,"indexExpression":{"id":664,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5670:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5660:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5660:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5638:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5701:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5715:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5701:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"5697:129:2","trueBody":{"id":679,"nodeType":"Block","src":"5722:104:2","statements":[{"errorCall":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5778:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5784:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5797:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":676,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5804:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5751:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5751:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"RevertStatement","src":"5744:63:2"}]}},{"id":691,"nodeType":"UncheckedBlock","src":"5843:159:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5942:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":684,"indexExpression":{"id":682,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5952:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5942:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5956:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5942:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5964:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5978:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5964:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5942:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"5942:41:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6034:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6048:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6040:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6040:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6034:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"6030:81:2","trueBody":{"id":708,"nodeType":"Block","src":"6052:59:2","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6070:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":703,"indexExpression":{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6080:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6070:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":704,"indexExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6084:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6070:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6091:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6070:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"6070:26:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5450:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5454:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5458:6:2","memberName":"length","nodeType":"MemberAccess","src":"5454:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5450:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"initializationExpression":{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"i","nameLocation":"5443:1:2","nodeType":"VariableDeclaration","scope":711,"src":"5435:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5447:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5435:13:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5466:3:2","subExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5468:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"5466:3:2"},"nodeType":"ForStatement","src":"5430:691:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6135:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6139:6:2","memberName":"length","nodeType":"MemberAccess","src":"6135:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6149:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6135:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":747,"nodeType":"Block","src":"6343:76:2","statements":[{"eventCall":{"arguments":[{"id":740,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6376:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6386:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6392:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6396:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":744,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6401:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":739,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"6362:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6362:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"6357:51:2"}]},"id":748,"nodeType":"IfStatement","src":"6131:288:2","trueBody":{"id":738,"nodeType":"Block","src":"6152:185:2","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"id","nameLocation":"6174:2:2","nodeType":"VariableDeclaration","scope":738,"src":"6166:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"6166:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6179:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6183:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"6179:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6179:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6166:38:2"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"6226:5:2","nodeType":"VariableDeclaration","scope":738,"src":"6218:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6218:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6260:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":725,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6234:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6241:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"6234:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6234:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6218:44:2"},{"eventCall":{"arguments":[{"id":731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6296:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6306:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6312:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6316:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6320:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"6281:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6281:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"EmitStatement","src":"6276:50:2"}]}}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4449:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5153:7:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5169:4:2","nodeType":"VariableDeclaration","scope":750,"src":"5161:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5161:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5183:2:2","nodeType":"VariableDeclaration","scope":750,"src":"5175:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5175:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"ids","nameLocation":"5204:3:2","nodeType":"VariableDeclaration","scope":750,"src":"5187:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5187:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"5187:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"values","nameLocation":"5226:6:2","nodeType":"VariableDeclaration","scope":750,"src":"5209:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5209:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ArrayTypeName","src":"5209:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5160:73:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5251:0:2"},"scope":1335,"src":"5144:1281:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":825,"nodeType":"Block","src":"7195:499:2","statements":[{"expression":{"arguments":[{"id":767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7213:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7219:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7223:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":770,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7228:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":766,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7205:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7205:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"7205:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7249:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7263:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7255:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7255:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7255:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7249:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":824,"nodeType":"IfStatement","src":"7245:443:2","trueBody":{"id":823,"nodeType":"Block","src":"7267:421:2","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"7289:8:2","nodeType":"VariableDeclaration","scope":823,"src":"7281:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7281:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"7300:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7300:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7281:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":784,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7330:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7334:6:2","memberName":"length","nodeType":"MemberAccess","src":"7330:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7344:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7330:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":821,"nodeType":"Block","src":"7571:107:2","statements":[{"expression":{"arguments":[{"id":813,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7625:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7635:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7641:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7645:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":817,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7650:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":818,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7658:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":812,"name":"_doSafeBatchTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"7589:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7589:74:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"7589:74:2"}]},"id":822,"nodeType":"IfStatement","src":"7326:352:2","trueBody":{"id":811,"nodeType":"Block","src":"7347:218:2","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"id","nameLocation":"7373:2:2","nodeType":"VariableDeclaration","scope":811,"src":"7365:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7365:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"initialValue":{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7401:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":790,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7378:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7382:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"7378:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7378:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7365:38:2"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"value","nameLocation":"7429:5:2","nodeType":"VariableDeclaration","scope":811,"src":"7421:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7421:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7463:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":797,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7437:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7444:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":1857,"src":"7437:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7437:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7421:44:2"},{"expression":{"arguments":[{"id":803,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7514:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7524:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":805,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7530:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7534:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7538:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":808,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7545:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":802,"name":"_doSafeTransferAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"7483:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7483:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"7483:67:2"}]}}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"6431:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":826,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7013:26:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"7057:4:2","nodeType":"VariableDeclaration","scope":826,"src":"7049:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7049:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"7079:2:2","nodeType":"VariableDeclaration","scope":826,"src":"7071:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"7071:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"ids","nameLocation":"7108:3:2","nodeType":"VariableDeclaration","scope":826,"src":"7091:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7091:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ArrayTypeName","src":"7091:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"values","nameLocation":"7138:6:2","nodeType":"VariableDeclaration","scope":826,"src":"7121:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ArrayTypeName","src":"7121:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"data","nameLocation":"7167:4:2","nodeType":"VariableDeclaration","scope":826,"src":"7154:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7154:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7039:138:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7195:0:2"},"scope":1335,"src":"7004:690:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":891,"nodeType":"Block","src":"8259:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8273:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8287:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8279:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"8279:7:2","typeDescriptions":{}}},"id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8279:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8273:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":854,"nodeType":"IfStatement","src":"8269:88:2","trueBody":{"id":853,"nodeType":"Block","src":"8291:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8343:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8335:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"8335:7:2","typeDescriptions":{}}},"id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8335:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":846,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8312:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"RevertStatement","src":"8305:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":855,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"8370:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8386:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8378:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"8378:7:2","typeDescriptions":{}}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8378:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8370:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":869,"nodeType":"IfStatement","src":"8366:88:2","trueBody":{"id":868,"nodeType":"Block","src":"8390:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8440:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8432:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"8432:7:2","typeDescriptions":{}}},"id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8432:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":861,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8411:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"RevertStatement","src":"8404:39:2"}]}},{"assignments":[874,877],"declarations":[{"constant":false,"id":874,"mutability":"mutable","name":"ids","nameLocation":"8481:3:2","nodeType":"VariableDeclaration","scope":891,"src":"8464:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"8464:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":873,"nodeType":"ArrayTypeName","src":"8464:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"values","nameLocation":"8503:6:2","nodeType":"VariableDeclaration","scope":891,"src":"8486:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"8486:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":876,"nodeType":"ArrayTypeName","src":"8486:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":882,"initialValue":{"arguments":[{"id":879,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8532:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8536:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"8513:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8513:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8463:79:2"},{"expression":{"arguments":[{"id":884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"8579:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"8585:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"8589:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":887,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8594:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":888,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8602:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":883,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"8552:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8552:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"8552:55:2"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"7700:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":892,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8160:17:2","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"from","nameLocation":"8186:4:2","nodeType":"VariableDeclaration","scope":892,"src":"8178:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"8178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"to","nameLocation":"8200:2:2","nodeType":"VariableDeclaration","scope":892,"src":"8192:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"8192:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"id","nameLocation":"8212:2:2","nodeType":"VariableDeclaration","scope":892,"src":"8204:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"8204:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"value","nameLocation":"8224:5:2","nodeType":"VariableDeclaration","scope":892,"src":"8216:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"8216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"data","nameLocation":"8244:4:2","nodeType":"VariableDeclaration","scope":892,"src":"8231:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":836,"name":"bytes","nodeType":"ElementaryTypeName","src":"8231:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8177:72:2"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"8259:0:2"},"scope":1335,"src":"8151:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":946,"nodeType":"Block","src":"9194:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9208:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9222:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9214:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"9214:7:2","typeDescriptions":{}}},"id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9208:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":922,"nodeType":"IfStatement","src":"9204:88:2","trueBody":{"id":921,"nodeType":"Block","src":"9226:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9278:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9270:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"9270:7:2","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9270:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":914,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9247:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9247:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"RevertStatement","src":"9240:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9305:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9321:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9313:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"9313:7:2","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9313:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9305:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":937,"nodeType":"IfStatement","src":"9301:88:2","trueBody":{"id":936,"nodeType":"Block","src":"9325:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9375:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9367:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"9367:7:2","typeDescriptions":{}}},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9367:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":929,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9346:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9346:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":935,"nodeType":"RevertStatement","src":"9339:39:2"}]}},{"expression":{"arguments":[{"id":939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"9425:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":940,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"9431:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9435:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":942,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"9440:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":943,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"9448:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":938,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"9398:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9398:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"9398:55:2"}]},"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"8620:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":947,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9024:22:2","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"from","nameLocation":"9064:4:2","nodeType":"VariableDeclaration","scope":947,"src":"9056:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"9056:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"to","nameLocation":"9086:2:2","nodeType":"VariableDeclaration","scope":947,"src":"9078:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"9078:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"ids","nameLocation":"9115:3:2","nodeType":"VariableDeclaration","scope":947,"src":"9098:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"9098:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":899,"nodeType":"ArrayTypeName","src":"9098:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"values","nameLocation":"9145:6:2","nodeType":"VariableDeclaration","scope":947,"src":"9128:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"9128:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":902,"nodeType":"ArrayTypeName","src":"9128:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"data","nameLocation":"9174:4:2","nodeType":"VariableDeclaration","scope":947,"src":"9161:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":904,"name":"bytes","nodeType":"ElementaryTypeName","src":"9161:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9046:138:2"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"9194:0:2"},"scope":1335,"src":"9015:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":957,"nodeType":"Block","src":"10338:30:2","statements":[{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":953,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"10348:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":954,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10355:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10348:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":956,"nodeType":"ExpressionStatement","src":"10348:13:2"}]},"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"9466:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":958,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10291:7:2","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"newuri","nameLocation":"10313:6:2","nodeType":"VariableDeclaration","scope":958,"src":"10299:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":949,"name":"string","nodeType":"ElementaryTypeName","src":"10299:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10298:22:2"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"10338:0:2"},"scope":1335,"src":"10282:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1009,"nodeType":"Block","src":"10828:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"10842:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10848:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"10848:7:2","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10842:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":984,"nodeType":"IfStatement","src":"10838:88:2","trueBody":{"id":983,"nodeType":"Block","src":"10860:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10912:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10904:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":977,"name":"address","nodeType":"ElementaryTypeName","src":"10904:7:2","typeDescriptions":{}}},"id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10904:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":976,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10881:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10881:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"RevertStatement","src":"10874:41:2"}]}},{"assignments":[989,992],"declarations":[{"constant":false,"id":989,"mutability":"mutable","name":"ids","nameLocation":"10953:3:2","nodeType":"VariableDeclaration","scope":1009,"src":"10936:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":987,"name":"uint256","nodeType":"ElementaryTypeName","src":"10936:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ArrayTypeName","src":"10936:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"values","nameLocation":"10975:6:2","nodeType":"VariableDeclaration","scope":1009,"src":"10958:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"10958:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ArrayTypeName","src":"10958:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":997,"initialValue":{"arguments":[{"id":994,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"11004:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11008:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10985:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10985:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10935:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11059:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11051:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"11051:7:2","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11051:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"11063:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"11067:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1005,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"11072:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1006,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11080:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":998,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"11024:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11024:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"11024:61:2"}]},"documentation":{"id":959,"nodeType":"StructuredDocumentation","src":"10374:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10755:5:2","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":961,"mutability":"mutable","name":"to","nameLocation":"10769:2:2","nodeType":"VariableDeclaration","scope":1010,"src":"10761:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"10761:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":963,"mutability":"mutable","name":"id","nameLocation":"10781:2:2","nodeType":"VariableDeclaration","scope":1010,"src":"10773:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"10773:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"value","nameLocation":"10793:5:2","nodeType":"VariableDeclaration","scope":1010,"src":"10785:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"10785:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"data","nameLocation":"10813:4:2","nodeType":"VariableDeclaration","scope":1010,"src":"10800:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"10800:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10760:58:2"},"returnParameters":{"id":969,"nodeType":"ParameterList","parameters":[],"src":"10828:0:2"},"scope":1335,"src":"10746:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1050,"nodeType":"Block","src":"11630:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11644:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11658:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"11650:7:2","typeDescriptions":{}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11650:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11644:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1038,"nodeType":"IfStatement","src":"11640:88:2","trueBody":{"id":1037,"nodeType":"Block","src":"11662:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11714:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11706:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"11706:7:2","typeDescriptions":{}}},"id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11706:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1030,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11683:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11683:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"RevertStatement","src":"11676:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11772:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11764:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"11764:7:2","typeDescriptions":{}}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11764:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11776:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1045,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"11780:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1046,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11785:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1047,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"11793:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1039,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"11737:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11737:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1049,"nodeType":"ExpressionStatement","src":"11737:61:2"}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"11098:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1051,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11532:10:2","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"to","nameLocation":"11551:2:2","nodeType":"VariableDeclaration","scope":1051,"src":"11543:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"11543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"ids","nameLocation":"11572:3:2","nodeType":"VariableDeclaration","scope":1051,"src":"11555:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1014,"name":"uint256","nodeType":"ElementaryTypeName","src":"11555:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1015,"nodeType":"ArrayTypeName","src":"11555:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"values","nameLocation":"11594:6:2","nodeType":"VariableDeclaration","scope":1051,"src":"11577:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1017,"name":"uint256","nodeType":"ElementaryTypeName","src":"11577:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1018,"nodeType":"ArrayTypeName","src":"11577:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"data","nameLocation":"11615:4:2","nodeType":"VariableDeclaration","scope":1051,"src":"11602:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1020,"name":"bytes","nodeType":"ElementaryTypeName","src":"11602:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11542:78:2"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[],"src":"11630:0:2"},"scope":1335,"src":"11523:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"12164:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"12178:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12194:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12186:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"12186:7:2","typeDescriptions":{}}},"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12186:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12178:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1075,"nodeType":"IfStatement","src":"12174:88:2","trueBody":{"id":1074,"nodeType":"Block","src":"12198:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12248:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12240:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1068,"name":"address","nodeType":"ElementaryTypeName","src":"12240:7:2","typeDescriptions":{}}},"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12240:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1067,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12219:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12219:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"RevertStatement","src":"12212:39:2"}]}},{"assignments":[1080,1083],"declarations":[{"constant":false,"id":1080,"mutability":"mutable","name":"ids","nameLocation":"12289:3:2","nodeType":"VariableDeclaration","scope":1100,"src":"12272:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"12272:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1079,"nodeType":"ArrayTypeName","src":"12272:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"values","nameLocation":"12311:6:2","nodeType":"VariableDeclaration","scope":1100,"src":"12294:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"12294:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1082,"nodeType":"ArrayTypeName","src":"12294:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1088,"initialValue":{"arguments":[{"id":1085,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"12340:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12344:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1084,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"12321:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12321:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12271:79:2"},{"expression":{"arguments":[{"id":1090,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"12387:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12401:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12393:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1091,"name":"address","nodeType":"ElementaryTypeName","src":"12393:7:2","typeDescriptions":{}}},"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12393:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1095,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12405:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1096,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"12410:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12418:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1089,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"12360:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12360:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"12360:61:2"}]},"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"11811:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12108:5:2","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1054,"mutability":"mutable","name":"from","nameLocation":"12122:4:2","nodeType":"VariableDeclaration","scope":1101,"src":"12114:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"12114:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1056,"mutability":"mutable","name":"id","nameLocation":"12136:2:2","nodeType":"VariableDeclaration","scope":1101,"src":"12128:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"12128:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"value","nameLocation":"12148:5:2","nodeType":"VariableDeclaration","scope":1101,"src":"12140:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"12140:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12113:41:2"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"12164:0:2"},"scope":1335,"src":"12099:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"12874:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"12888:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12904:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12896:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"12896:7:2","typeDescriptions":{}}},"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12896:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12888:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1127,"nodeType":"IfStatement","src":"12884:88:2","trueBody":{"id":1126,"nodeType":"Block","src":"12908:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12958:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12950:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"12950:7:2","typeDescriptions":{}}},"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12950:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1119,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12929:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12929:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1125,"nodeType":"RevertStatement","src":"12922:39:2"}]}},{"expression":{"arguments":[{"id":1129,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"13008:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13022:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13014:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1130,"name":"address","nodeType":"ElementaryTypeName","src":"13014:7:2","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13014:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"13026:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1135,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"13031:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1128,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"12981:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"12981:61:2"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"12434:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12793:10:2","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"from","nameLocation":"12812:4:2","nodeType":"VariableDeclaration","scope":1140,"src":"12804:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"12804:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"ids","nameLocation":"12835:3:2","nodeType":"VariableDeclaration","scope":1140,"src":"12818:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"12818:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1106,"nodeType":"ArrayTypeName","src":"12818:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"values","nameLocation":"12857:6:2","nodeType":"VariableDeclaration","scope":1140,"src":"12840:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"12840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1109,"nodeType":"ArrayTypeName","src":"12840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12803:61:2"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"12874:0:2"},"scope":1335,"src":"12784:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1179,"nodeType":"Block","src":"13361:222:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1150,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"13375:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13395:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"13387:7:2","typeDescriptions":{}}},"id":1154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13387:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13375:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"13371:94:2","trueBody":{"id":1163,"nodeType":"Block","src":"13399:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13451:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13443:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"13443:7:2","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13443:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1156,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"13420:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13420:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"RevertStatement","src":"13413:41:2"}]}},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1165,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13474:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1168,"indexExpression":{"id":1166,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"13493:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13474:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1169,"indexExpression":{"id":1167,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"13500:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13474:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13512:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13474:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1172,"nodeType":"ExpressionStatement","src":"13474:46:2"},{"eventCall":{"arguments":[{"id":1174,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"13550:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"13557:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13567:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1173,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"13535:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13535:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1178,"nodeType":"EmitStatement","src":"13530:46:2"}]},"documentation":{"id":1141,"nodeType":"StructuredDocumentation","src":"13055:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1180,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13277:18:2","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"owner","nameLocation":"13304:5:2","nodeType":"VariableDeclaration","scope":1180,"src":"13296:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"13296:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"operator","nameLocation":"13319:8:2","nodeType":"VariableDeclaration","scope":1180,"src":"13311:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"13311:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"approved","nameLocation":"13334:8:2","nodeType":"VariableDeclaration","scope":1180,"src":"13329:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1146,"name":"bool","nodeType":"ElementaryTypeName","src":"13329:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13295:48:2"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[],"src":"13361:0:2"},"scope":1335,"src":"13268:315:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1247,"nodeType":"Block","src":"13953:782:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1196,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"13967:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13970:4:2","memberName":"code","nodeType":"MemberAccess","src":"13967:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13975:6:2","memberName":"length","nodeType":"MemberAccess","src":"13967:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13984:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13967:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1246,"nodeType":"IfStatement","src":"13963:766:2","trueBody":{"id":1245,"nodeType":"Block","src":"13987:742:2","statements":[{"clauses":[{"block":{"id":1225,"nodeType":"Block","src":"14103:206:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1214,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"14125:8:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1215,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"14137:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1500_$","typeString":"type(contract IERC1155Receiver)"}},"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14154:17:2","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1481,"src":"14137:34:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14172:8:2","memberName":"selector","nodeType":"MemberAccess","src":"14137:43:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14125:55:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"14121:174:2","trueBody":{"id":1223,"nodeType":"Block","src":"14182:113:2","statements":[{"errorCall":{"arguments":[{"id":1220,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"14273:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1219,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"14250:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14250:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"RevertStatement","src":"14243:33:2"}]}}]},"errorName":"","id":1226,"nodeType":"TryCatchClause","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"response","nameLocation":"14093:8:2","nodeType":"VariableDeclaration","scope":1226,"src":"14086:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1211,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14086:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14085:17:2"},"src":"14077:232:2"},{"block":{"id":1242,"nodeType":"Block","src":"14338:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1230,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"14360:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14367:6:2","memberName":"length","nodeType":"MemberAccess","src":"14360:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14377:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14360:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1240,"nodeType":"Block","src":"14515:190:2","statements":[{"AST":{"nativeSrc":"14601:86:2","nodeType":"YulBlock","src":"14601:86:2","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14638:2:2","nodeType":"YulLiteral","src":"14638:2:2","type":"","value":"32"},{"name":"reason","nativeSrc":"14642:6:2","nodeType":"YulIdentifier","src":"14642:6:2"}],"functionName":{"name":"add","nativeSrc":"14634:3:2","nodeType":"YulIdentifier","src":"14634:3:2"},"nativeSrc":"14634:15:2","nodeType":"YulFunctionCall","src":"14634:15:2"},{"arguments":[{"name":"reason","nativeSrc":"14657:6:2","nodeType":"YulIdentifier","src":"14657:6:2"}],"functionName":{"name":"mload","nativeSrc":"14651:5:2","nodeType":"YulIdentifier","src":"14651:5:2"},"nativeSrc":"14651:13:2","nodeType":"YulFunctionCall","src":"14651:13:2"}],"functionName":{"name":"revert","nativeSrc":"14627:6:2","nodeType":"YulIdentifier","src":"14627:6:2"},"nativeSrc":"14627:38:2","nodeType":"YulFunctionCall","src":"14627:38:2"},"nativeSrc":"14627:38:2","nodeType":"YulExpressionStatement","src":"14627:38:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1228,"isOffset":false,"isSlot":false,"src":"14642:6:2","valueSize":1},{"declaration":1228,"isOffset":false,"isSlot":false,"src":"14657:6:2","valueSize":1}],"id":1239,"nodeType":"InlineAssembly","src":"14592:95:2"}]},"id":1241,"nodeType":"IfStatement","src":"14356:349:2","trueBody":{"id":1238,"nodeType":"Block","src":"14380:129:2","statements":[{"errorCall":{"arguments":[{"id":1235,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"14487:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1234,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"14464:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14464:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"RevertStatement","src":"14457:33:2"}]}}]},"errorName":"","id":1243,"nodeType":"TryCatchClause","parameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"reason","nameLocation":"14330:6:2","nodeType":"VariableDeclaration","scope":1243,"src":"14317:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1227,"name":"bytes","nodeType":"ElementaryTypeName","src":"14317:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14316:21:2"},"src":"14310:409:2"}],"externalCall":{"arguments":[{"id":1205,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1183,"src":"14044:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"14054:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"14060:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"14064:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1209,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"14071:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"14022:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1201,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"14005:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1500_$","typeString":"type(contract IERC1155Receiver)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14005:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1500","typeString":"contract IERC1155Receiver"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14026:17:2","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1481,"src":"14005:38:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14005:71:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1244,"nodeType":"TryStatement","src":"14001:718:2"}]}}]},"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"13589:167:2","text":" @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeTransferAcceptanceCheck","nameLocation":"13770:30:2","nodeType":"FunctionDefinition","parameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"operator","nameLocation":"13818:8:2","nodeType":"VariableDeclaration","scope":1248,"src":"13810:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"13810:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"from","nameLocation":"13844:4:2","nodeType":"VariableDeclaration","scope":1248,"src":"13836:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"13836:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"to","nameLocation":"13866:2:2","nodeType":"VariableDeclaration","scope":1248,"src":"13858:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"13858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"id","nameLocation":"13886:2:2","nodeType":"VariableDeclaration","scope":1248,"src":"13878:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13878:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"value","nameLocation":"13906:5:2","nodeType":"VariableDeclaration","scope":1248,"src":"13898:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"13898:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"data","nameLocation":"13934:4:2","nodeType":"VariableDeclaration","scope":1248,"src":"13921:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"13921:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13800:144:2"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"13953:0:2"},"scope":1335,"src":"13761:974:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1317,"nodeType":"Block","src":"15140:824:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1266,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15154:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15157:4:2","memberName":"code","nodeType":"MemberAccess","src":"15154:7:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15162:6:2","memberName":"length","nodeType":"MemberAccess","src":"15154:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15171:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15154:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1316,"nodeType":"IfStatement","src":"15150:808:2","trueBody":{"id":1315,"nodeType":"Block","src":"15174:784:2","statements":[{"clauses":[{"block":{"id":1295,"nodeType":"Block","src":"15327:211:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1284,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"15349:8:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1285,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"15361:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1500_$","typeString":"type(contract IERC1155Receiver)"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15378:22:2","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"15361:39:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15401:8:2","memberName":"selector","nodeType":"MemberAccess","src":"15361:48:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"15349:60:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1294,"nodeType":"IfStatement","src":"15345:179:2","trueBody":{"id":1293,"nodeType":"Block","src":"15411:113:2","statements":[{"errorCall":{"arguments":[{"id":1290,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15502:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1289,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"15479:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15479:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"RevertStatement","src":"15472:33:2"}]}}]},"errorName":"","id":1296,"nodeType":"TryCatchClause","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"response","nameLocation":"15304:8:2","nodeType":"VariableDeclaration","scope":1296,"src":"15297:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1281,"name":"bytes4","nodeType":"ElementaryTypeName","src":"15297:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"15279:47:2"},"src":"15271:267:2"},{"block":{"id":1312,"nodeType":"Block","src":"15567:381:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1300,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"15589:6:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15596:6:2","memberName":"length","nodeType":"MemberAccess","src":"15589:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15606:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15589:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1310,"nodeType":"Block","src":"15744:190:2","statements":[{"AST":{"nativeSrc":"15830:86:2","nodeType":"YulBlock","src":"15830:86:2","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15867:2:2","nodeType":"YulLiteral","src":"15867:2:2","type":"","value":"32"},{"name":"reason","nativeSrc":"15871:6:2","nodeType":"YulIdentifier","src":"15871:6:2"}],"functionName":{"name":"add","nativeSrc":"15863:3:2","nodeType":"YulIdentifier","src":"15863:3:2"},"nativeSrc":"15863:15:2","nodeType":"YulFunctionCall","src":"15863:15:2"},{"arguments":[{"name":"reason","nativeSrc":"15886:6:2","nodeType":"YulIdentifier","src":"15886:6:2"}],"functionName":{"name":"mload","nativeSrc":"15880:5:2","nodeType":"YulIdentifier","src":"15880:5:2"},"nativeSrc":"15880:13:2","nodeType":"YulFunctionCall","src":"15880:13:2"}],"functionName":{"name":"revert","nativeSrc":"15856:6:2","nodeType":"YulIdentifier","src":"15856:6:2"},"nativeSrc":"15856:38:2","nodeType":"YulFunctionCall","src":"15856:38:2"},"nativeSrc":"15856:38:2","nodeType":"YulExpressionStatement","src":"15856:38:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1298,"isOffset":false,"isSlot":false,"src":"15871:6:2","valueSize":1},{"declaration":1298,"isOffset":false,"isSlot":false,"src":"15886:6:2","valueSize":1}],"id":1309,"nodeType":"InlineAssembly","src":"15821:95:2"}]},"id":1311,"nodeType":"IfStatement","src":"15585:349:2","trueBody":{"id":1308,"nodeType":"Block","src":"15609:129:2","statements":[{"errorCall":{"arguments":[{"id":1305,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15716:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1304,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"15693:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15693:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"RevertStatement","src":"15686:33:2"}]}}]},"errorName":"","id":1313,"nodeType":"TryCatchClause","parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"reason","nameLocation":"15559:6:2","nodeType":"VariableDeclaration","scope":1313,"src":"15546:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1297,"name":"bytes","nodeType":"ElementaryTypeName","src":"15546:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15545:21:2"},"src":"15539:409:2"}],"externalCall":{"arguments":[{"id":1275,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"15236:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1276,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"15246:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1277,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"15252:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1278,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"15257:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1279,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"15265:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1272,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"15209:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1271,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"15192:16:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1500_$","typeString":"type(contract IERC1155Receiver)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15192:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1500","typeString":"contract IERC1155Receiver"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15213:22:2","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1499,"src":"15192:43:2","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15192:78:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1314,"nodeType":"TryStatement","src":"15188:760:2"}]}}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"14741:177:2","text":" @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."},"id":1318,"implemented":true,"kind":"function","modifiers":[],"name":"_doSafeBatchTransferAcceptanceCheck","nameLocation":"14932:35:2","nodeType":"FunctionDefinition","parameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"operator","nameLocation":"14985:8:2","nodeType":"VariableDeclaration","scope":1318,"src":"14977:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"14977:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"from","nameLocation":"15011:4:2","nodeType":"VariableDeclaration","scope":1318,"src":"15003:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"15003:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"to","nameLocation":"15033:2:2","nodeType":"VariableDeclaration","scope":1318,"src":"15025:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"15025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"ids","nameLocation":"15062:3:2","nodeType":"VariableDeclaration","scope":1318,"src":"15045:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"15045:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1257,"nodeType":"ArrayTypeName","src":"15045:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"values","nameLocation":"15092:6:2","nodeType":"VariableDeclaration","scope":1318,"src":"15075:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"15075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1260,"nodeType":"ArrayTypeName","src":"15075:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"data","nameLocation":"15121:4:2","nodeType":"VariableDeclaration","scope":1318,"src":"15108:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1262,"name":"bytes","nodeType":"ElementaryTypeName","src":"15108:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14967:164:2"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[],"src":"15140:0:2"},"scope":1335,"src":"14923:1041:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1333,"nodeType":"Block","src":"16238:691:2","statements":[{"AST":{"nativeSrc":"16300:623:2","nodeType":"YulBlock","src":"16300:623:2","statements":[{"nativeSrc":"16358:21:2","nodeType":"YulAssignment","src":"16358:21:2","value":{"arguments":[{"kind":"number","nativeSrc":"16374:4:2","nodeType":"YulLiteral","src":"16374:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"16368:5:2","nodeType":"YulIdentifier","src":"16368:5:2"},"nativeSrc":"16368:11:2","nodeType":"YulFunctionCall","src":"16368:11:2"},"variableNames":[{"name":"array1","nativeSrc":"16358:6:2","nodeType":"YulIdentifier","src":"16358:6:2"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"16436:6:2","nodeType":"YulIdentifier","src":"16436:6:2"},{"kind":"number","nativeSrc":"16444:1:2","nodeType":"YulLiteral","src":"16444:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"16429:6:2","nodeType":"YulIdentifier","src":"16429:6:2"},"nativeSrc":"16429:17:2","nodeType":"YulFunctionCall","src":"16429:17:2"},"nativeSrc":"16429:17:2","nodeType":"YulExpressionStatement","src":"16429:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"16567:6:2","nodeType":"YulIdentifier","src":"16567:6:2"},{"kind":"number","nativeSrc":"16575:4:2","nodeType":"YulLiteral","src":"16575:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16563:3:2","nodeType":"YulIdentifier","src":"16563:3:2"},"nativeSrc":"16563:17:2","nodeType":"YulFunctionCall","src":"16563:17:2"},{"name":"element1","nativeSrc":"16582:8:2","nodeType":"YulIdentifier","src":"16582:8:2"}],"functionName":{"name":"mstore","nativeSrc":"16556:6:2","nodeType":"YulIdentifier","src":"16556:6:2"},"nativeSrc":"16556:35:2","nodeType":"YulFunctionCall","src":"16556:35:2"},"nativeSrc":"16556:35:2","nodeType":"YulExpressionStatement","src":"16556:35:2"},{"nativeSrc":"16682:27:2","nodeType":"YulAssignment","src":"16682:27:2","value":{"arguments":[{"name":"array1","nativeSrc":"16696:6:2","nodeType":"YulIdentifier","src":"16696:6:2"},{"kind":"number","nativeSrc":"16704:4:2","nodeType":"YulLiteral","src":"16704:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"16692:3:2","nodeType":"YulIdentifier","src":"16692:3:2"},"nativeSrc":"16692:17:2","nodeType":"YulFunctionCall","src":"16692:17:2"},"variableNames":[{"name":"array2","nativeSrc":"16682:6:2","nodeType":"YulIdentifier","src":"16682:6:2"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"16729:6:2","nodeType":"YulIdentifier","src":"16729:6:2"},{"kind":"number","nativeSrc":"16737:1:2","nodeType":"YulLiteral","src":"16737:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"16722:6:2","nodeType":"YulIdentifier","src":"16722:6:2"},"nativeSrc":"16722:17:2","nodeType":"YulFunctionCall","src":"16722:17:2"},"nativeSrc":"16722:17:2","nodeType":"YulExpressionStatement","src":"16722:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"16763:6:2","nodeType":"YulIdentifier","src":"16763:6:2"},{"kind":"number","nativeSrc":"16771:4:2","nodeType":"YulLiteral","src":"16771:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16759:3:2","nodeType":"YulIdentifier","src":"16759:3:2"},"nativeSrc":"16759:17:2","nodeType":"YulFunctionCall","src":"16759:17:2"},{"name":"element2","nativeSrc":"16778:8:2","nodeType":"YulIdentifier","src":"16778:8:2"}],"functionName":{"name":"mstore","nativeSrc":"16752:6:2","nodeType":"YulIdentifier","src":"16752:6:2"},"nativeSrc":"16752:35:2","nodeType":"YulFunctionCall","src":"16752:35:2"},"nativeSrc":"16752:35:2","nodeType":"YulExpressionStatement","src":"16752:35:2"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16889:4:2","nodeType":"YulLiteral","src":"16889:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"16899:6:2","nodeType":"YulIdentifier","src":"16899:6:2"},{"kind":"number","nativeSrc":"16907:4:2","nodeType":"YulLiteral","src":"16907:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"16895:3:2","nodeType":"YulIdentifier","src":"16895:3:2"},"nativeSrc":"16895:17:2","nodeType":"YulFunctionCall","src":"16895:17:2"}],"functionName":{"name":"mstore","nativeSrc":"16882:6:2","nodeType":"YulIdentifier","src":"16882:6:2"},"nativeSrc":"16882:31:2","nodeType":"YulFunctionCall","src":"16882:31:2"},"nativeSrc":"16882:31:2","nodeType":"YulExpressionStatement","src":"16882:31:2"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1327,"isOffset":false,"isSlot":false,"src":"16358:6:2","valueSize":1},{"declaration":1327,"isOffset":false,"isSlot":false,"src":"16436:6:2","valueSize":1},{"declaration":1327,"isOffset":false,"isSlot":false,"src":"16567:6:2","valueSize":1},{"declaration":1327,"isOffset":false,"isSlot":false,"src":"16696:6:2","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"16682:6:2","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"16729:6:2","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"16763:6:2","valueSize":1},{"declaration":1330,"isOffset":false,"isSlot":false,"src":"16899:6:2","valueSize":1},{"declaration":1321,"isOffset":false,"isSlot":false,"src":"16582:8:2","valueSize":1},{"declaration":1323,"isOffset":false,"isSlot":false,"src":"16778:8:2","valueSize":1}],"id":1332,"nodeType":"InlineAssembly","src":"16291:632:2"}]},"documentation":{"id":1319,"nodeType":"StructuredDocumentation","src":"15970:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"16089:18:2","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"element1","nameLocation":"16125:8:2","nodeType":"VariableDeclaration","scope":1334,"src":"16117:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"16117:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"element2","nameLocation":"16151:8:2","nodeType":"VariableDeclaration","scope":1334,"src":"16143:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"16143:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16107:58:2"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"array1","nameLocation":"16205:6:2","nodeType":"VariableDeclaration","scope":1334,"src":"16188:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1325,"name":"uint256","nodeType":"ElementaryTypeName","src":"16188:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1326,"nodeType":"ArrayTypeName","src":"16188:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"array2","nameLocation":"16230:6:2","nodeType":"VariableDeclaration","scope":1334,"src":"16213:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"16213:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1329,"nodeType":"ArrayTypeName","src":"16213:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16187:50:2"},"scope":1335,"src":"16080:849:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1336,"src":"727:16204:2","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1355,1370,1379,1386]}],"src":"109:16823:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1458],"IERC165":[2047]},"id":1459,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1337,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1459,"sourceUnit":2048,"src":"136:62:3","symbolAliases":[{"foreign":{"id":1338,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"144:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1341,"name":"IERC165","nameLocations":["358:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"358:7:3"},"id":1342,"nodeType":"InheritanceSpecifier","src":"358:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"200:135:3","text":" @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."},"fullyImplemented":false,"id":1458,"linearizedBaseContracts":[1458,2047],"name":"IERC1155","nameLocation":"346:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"372:125:3","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1355,"name":"TransferSingle","nameLocation":"508:14:3","nodeType":"EventDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"539:8:3","nodeType":"VariableDeclaration","scope":1355,"src":"523:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"523:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"565:4:3","nodeType":"VariableDeclaration","scope":1355,"src":"549:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"587:2:3","nodeType":"VariableDeclaration","scope":1355,"src":"571:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"571:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"599:2:3","nodeType":"VariableDeclaration","scope":1355,"src":"591:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1353,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"611:5:3","nodeType":"VariableDeclaration","scope":1355,"src":"603:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1352,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"522:95:3"},"src":"502:116:3"},{"anonymous":false,"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"624:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1370,"name":"TransferBatch","nameLocation":"779:13:3","nodeType":"EventDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"818:8:3","nodeType":"VariableDeclaration","scope":1370,"src":"802:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"802:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1360,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"852:4:3","nodeType":"VariableDeclaration","scope":1370,"src":"836:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"882:2:3","nodeType":"VariableDeclaration","scope":1370,"src":"866:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"866:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1365,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"904:3:3","nodeType":"VariableDeclaration","scope":1370,"src":"894:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1364,"nodeType":"ArrayTypeName","src":"894:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1368,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"927:6:3","nodeType":"VariableDeclaration","scope":1370,"src":"917:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1366,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1367,"nodeType":"ArrayTypeName","src":"917:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"792:147:3"},"src":"773:167:3"},{"anonymous":false,"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"946:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1379,"name":"ApprovalForAll","nameLocation":"1104:14:3","nodeType":"EventDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1135:7:3","nodeType":"VariableDeclaration","scope":1379,"src":"1119:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1160:8:3","nodeType":"VariableDeclaration","scope":1379,"src":"1144:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1377,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1175:8:3","nodeType":"VariableDeclaration","scope":1379,"src":"1170:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1376,"name":"bool","nodeType":"ElementaryTypeName","src":"1170:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1118:66:3"},"src":"1098:87:3"},{"anonymous":false,"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"1191:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1386,"name":"URI","nameLocation":"1545:3:3","nodeType":"EventDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1556:5:3","nodeType":"VariableDeclaration","scope":1386,"src":"1549:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1381,"name":"string","nodeType":"ElementaryTypeName","src":"1549:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1384,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1579:2:3","nodeType":"VariableDeclaration","scope":1386,"src":"1563:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:34:3"},"src":"1539:44:3"},{"documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"1589:172:3","text":" @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."},"functionSelector":"00fdd58e","id":1396,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1775:9:3","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1389,"mutability":"mutable","name":"account","nameLocation":"1793:7:3","nodeType":"VariableDeclaration","scope":1396,"src":"1785:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1388,"name":"address","nodeType":"ElementaryTypeName","src":"1785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"id","nameLocation":"1810:2:3","nodeType":"VariableDeclaration","scope":1396,"src":"1802:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1784:29:3"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"1837:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1837:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1836:9:3"},"scope":1458,"src":"1766:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"1852:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1409,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2054:14:3","nodeType":"FunctionDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"accounts","nameLocation":"2097:8:3","nodeType":"VariableDeclaration","scope":1409,"src":"2078:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"2078:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1399,"nodeType":"ArrayTypeName","src":"2078:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"ids","nameLocation":"2134:3:3","nodeType":"VariableDeclaration","scope":1409,"src":"2115:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"nodeType":"ArrayTypeName","src":"2115:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2068:75:3"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1409,"src":"2167:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"2167:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1406,"nodeType":"ArrayTypeName","src":"2167:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2166:18:3"},"scope":1458,"src":"2045:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"2191:248:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."},"functionSelector":"a22cb465","id":1417,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2453:17:3","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"operator","nameLocation":"2479:8:3","nodeType":"VariableDeclaration","scope":1417,"src":"2471:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"2471:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"approved","nameLocation":"2494:8:3","nodeType":"VariableDeclaration","scope":1417,"src":"2489:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"2489:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2470:33:3"},"returnParameters":{"id":1416,"nodeType":"ParameterList","parameters":[],"src":"2512:0:3"},"scope":1458,"src":"2444:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"2519:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1427,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2668:16:3","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"account","nameLocation":"2693:7:3","nodeType":"VariableDeclaration","scope":1427,"src":"2685:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"operator","nameLocation":"2710:8:3","nodeType":"VariableDeclaration","scope":1427,"src":"2702:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1421,"name":"address","nodeType":"ElementaryTypeName","src":"2702:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2684:35:3"},"returnParameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1427,"src":"2743:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1424,"name":"bool","nodeType":"ElementaryTypeName","src":"2743:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2742:6:3"},"scope":1458,"src":"2659:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"2755:910:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1441,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3679:16:3","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"from","nameLocation":"3704:4:3","nodeType":"VariableDeclaration","scope":1441,"src":"3696:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"3696:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"to","nameLocation":"3718:2:3","nodeType":"VariableDeclaration","scope":1441,"src":"3710:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"3710:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"id","nameLocation":"3730:2:3","nodeType":"VariableDeclaration","scope":1441,"src":"3722:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"value","nameLocation":"3742:5:3","nodeType":"VariableDeclaration","scope":1441,"src":"3734:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3734:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"data","nameLocation":"3764:4:3","nodeType":"VariableDeclaration","scope":1441,"src":"3749:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1437,"name":"bytes","nodeType":"ElementaryTypeName","src":"3749:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3695:74:3"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"3778:0:3"},"scope":1458,"src":"3670:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"3785:814:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1457,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4613:21:3","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"from","nameLocation":"4652:4:3","nodeType":"VariableDeclaration","scope":1457,"src":"4644:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1443,"name":"address","nodeType":"ElementaryTypeName","src":"4644:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"to","nameLocation":"4674:2:3","nodeType":"VariableDeclaration","scope":1457,"src":"4666:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"4666:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"ids","nameLocation":"4705:3:3","nodeType":"VariableDeclaration","scope":1457,"src":"4686:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4686:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1448,"nodeType":"ArrayTypeName","src":"4686:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"values","nameLocation":"4737:6:3","nodeType":"VariableDeclaration","scope":1457,"src":"4718:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"4718:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ArrayTypeName","src":"4718:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"data","nameLocation":"4768:4:3","nodeType":"VariableDeclaration","scope":1457,"src":"4753:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1453,"name":"bytes","nodeType":"ElementaryTypeName","src":"4753:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4634:144:3"},"returnParameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"4787:0:3"},"scope":1458,"src":"4604:184:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1459,"src":"336:4454:3","usedErrors":[],"usedEvents":[1355,1370,1379,1386]}],"src":"110:4681:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1500],"IERC165":[2047]},"id":1501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1460,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1501,"sourceUnit":2048,"src":"144:62:4","symbolAliases":[{"foreign":{"id":1461,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"152:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1464,"name":"IERC165","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"357:7:4"},"id":1465,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"208:118:4","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1500,"linearizedBaseContracts":[1500,2047],"name":"IERC1155Receiver","nameLocation":"337:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"371:826:4","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1481,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1211:17:4","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1468,"mutability":"mutable","name":"operator","nameLocation":"1246:8:4","nodeType":"VariableDeclaration","scope":1481,"src":"1238:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1470,"mutability":"mutable","name":"from","nameLocation":"1272:4:4","nodeType":"VariableDeclaration","scope":1481,"src":"1264:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"id","nameLocation":"1294:2:4","nodeType":"VariableDeclaration","scope":1481,"src":"1286:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"value","nameLocation":"1314:5:4","nodeType":"VariableDeclaration","scope":1481,"src":"1306:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"1344:4:4","nodeType":"VariableDeclaration","scope":1481,"src":"1329:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"1329:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1228:126:4"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1481,"src":"1373:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1478,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1373:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1372:8:4"},"scope":1500,"src":"1202:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1482,"nodeType":"StructuredDocumentation","src":"1387:994:4","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1499,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2395:22:4","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"mutability":"mutable","name":"operator","nameLocation":"2435:8:4","nodeType":"VariableDeclaration","scope":1499,"src":"2427:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"2427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"mutability":"mutable","name":"from","nameLocation":"2461:4:4","nodeType":"VariableDeclaration","scope":1499,"src":"2453:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1485,"name":"address","nodeType":"ElementaryTypeName","src":"2453:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"ids","nameLocation":"2494:3:4","nodeType":"VariableDeclaration","scope":1499,"src":"2475:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"2475:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1488,"nodeType":"ArrayTypeName","src":"2475:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"values","nameLocation":"2526:6:4","nodeType":"VariableDeclaration","scope":1499,"src":"2507:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1491,"nodeType":"ArrayTypeName","src":"2507:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"data","nameLocation":"2557:4:4","nodeType":"VariableDeclaration","scope":1499,"src":"2542:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1493,"name":"bytes","nodeType":"ElementaryTypeName","src":"2542:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2417:150:4"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"2586:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1496,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2586:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2585:8:4"},"scope":1500,"src":"2386:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1501,"src":"327:2269:4","usedErrors":[],"usedEvents":[]}],"src":"118:2479:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","exportedSymbols":{"ERC1155":[1335],"ERC1155Supply":[1672]},"id":1673,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"../ERC1155.sol","id":1504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1673,"sourceUnit":1336,"src":"152:39:5","symbolAliases":[{"foreign":{"id":1503,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"160:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1506,"name":"ERC1155","nameLocations":["780:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"780:7:5"},"id":1507,"nodeType":"InheritanceSpecifier","src":"780:7:5"}],"canonicalName":"ERC1155Supply","contractDependencies":[],"contractKind":"contract","documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"193:551:5","text":" @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted.\n NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n that can be minted.\n CAUTION: This extension should not be added in an upgrade to an already deployed contract."},"fullyImplemented":true,"id":1672,"linearizedBaseContracts":[1672,1335,284,1688,1458,2035,2047,1901],"name":"ERC1155Supply","nameLocation":"763:13:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1511,"mutability":"mutable","name":"_totalSupply","nameLocation":"833:12:5","nodeType":"VariableDeclaration","scope":1672,"src":"794:51:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":1510,"keyName":"id","keyNameLocation":"810:2:5","keyType":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"794:30:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1513,"mutability":"mutable","name":"_totalSupplyAll","nameLocation":"867:15:5","nodeType":"VariableDeclaration","scope":1672,"src":"851:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1525,"nodeType":"Block","src":"1030:40:5","statements":[{"expression":{"baseExpression":{"id":1521,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"1047:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1523,"indexExpression":{"id":1522,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"1060:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1047:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1520,"id":1524,"nodeType":"Return","src":"1040:23:5"}]},"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"889:65:5","text":" @dev Total value of tokens in with a given id."},"functionSelector":"bd85b039","id":1526,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"968:11:5","nodeType":"FunctionDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"id","nameLocation":"988:2:5","nodeType":"VariableDeclaration","scope":1526,"src":"980:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"980:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"979:12:5"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1526,"src":"1021:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1021:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1020:9:5"},"scope":1672,"src":"959:111:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1534,"nodeType":"Block","src":"1188:39:5","statements":[{"expression":{"id":1532,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"1205:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1531,"id":1533,"nodeType":"Return","src":"1198:22:5"}]},"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"1076:46:5","text":" @dev Total value of tokens."},"functionSelector":"18160ddd","id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1136:11:5","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[],"src":"1147:2:5"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1535,"src":"1179:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1179:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1178:9:5"},"scope":1672,"src":"1127:100:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1549,"nodeType":"Block","src":"1383:43:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1544,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"1412:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1543,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[1526,1535],"referencedDeclaration":1526,"src":"1400:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1400:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1418:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1400:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1542,"id":1548,"nodeType":"Return","src":"1393:26:5"}]},"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"1233:82:5","text":" @dev Indicates whether any token exist with a given id, or not."},"functionSelector":"4f558e79","id":1550,"implemented":true,"kind":"function","modifiers":[],"name":"exists","nameLocation":"1329:6:5","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"id","nameLocation":"1344:2:5","nodeType":"VariableDeclaration","scope":1550,"src":"1336:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1335:12:5"},"returnParameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1550,"src":"1377:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1540,"name":"bool","nodeType":"ElementaryTypeName","src":"1377:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1376:6:5"},"scope":1672,"src":"1320:106:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[750],"body":{"id":1670,"nodeType":"Block","src":"1637:1364:5","statements":[{"expression":{"arguments":[{"id":1568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1661:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1569,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"1667:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1570,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"1671:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1571,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1676:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":1565,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1647:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Supply_$1672_$","typeString":"type(contract super ERC1155Supply)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1653:7:5","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":750,"src":"1647:13:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1647:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1573,"nodeType":"ExpressionStatement","src":"1647:36:5"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"1698:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1714:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1706:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:5","typeDescriptions":{}}},"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1698:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1620,"nodeType":"IfStatement","src":"1694:533:5","trueBody":{"id":1619,"nodeType":"Block","src":"1718:509:5","statements":[{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"totalMintValue","nameLocation":"1740:14:5","nodeType":"VariableDeclaration","scope":1619,"src":"1732:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1583,"initialValue":{"hexValue":"30","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1732:26:5"},{"body":{"id":1613,"nodeType":"Block","src":"1813:252:5","statements":[{"assignments":[1596],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"value","nameLocation":"1839:5:5","nodeType":"VariableDeclaration","scope":1613,"src":"1831:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1831:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1600,"initialValue":{"baseExpression":{"id":1597,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1847:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1599,"indexExpression":{"id":1598,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"1854:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1847:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1831:25:5"},{"expression":{"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1601,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"1980:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1605,"indexExpression":{"baseExpression":{"id":1602,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"1993:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1604,"indexExpression":{"id":1603,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"1997:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1993:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1980:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2004:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1980:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1608,"nodeType":"ExpressionStatement","src":"1980:29:5"},{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1609,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2027:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"2045:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2027:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ExpressionStatement","src":"2027:23:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"1792:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1589,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"1796:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1800:6:5","memberName":"length","nodeType":"MemberAccess","src":"1796:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1792:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1614,"initializationExpression":{"assignments":[1585],"declarations":[{"constant":false,"id":1585,"mutability":"mutable","name":"i","nameLocation":"1785:1:5","nodeType":"VariableDeclaration","scope":1614,"src":"1777:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1777:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1587,"initialValue":{"hexValue":"30","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1789:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1777:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1808:3:5","subExpression":{"id":1592,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"1810:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ExpressionStatement","src":"1808:3:5"},"nodeType":"ForStatement","src":"1772:293:5"},{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1615,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2183:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1616,"name":"totalMintValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2202:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2183:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ExpressionStatement","src":"2183:33:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1555,"src":"2241:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2255:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2247:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:5","typeDescriptions":{}}},"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2241:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1669,"nodeType":"IfStatement","src":"2237:758:5","trueBody":{"id":1668,"nodeType":"Block","src":"2259:736:5","statements":[{"assignments":[1628],"declarations":[{"constant":false,"id":1628,"mutability":"mutable","name":"totalBurnValue","nameLocation":"2281:14:5","nodeType":"VariableDeclaration","scope":1668,"src":"2273:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1630,"initialValue":{"hexValue":"30","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2298:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2273:26:5"},{"body":{"id":1661,"nodeType":"Block","src":"2354:418:5","statements":[{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"value","nameLocation":"2380:5:5","nodeType":"VariableDeclaration","scope":1661,"src":"2372:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"2372:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1647,"initialValue":{"baseExpression":{"id":1644,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2388:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1646,"indexExpression":{"id":1645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2395:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2388:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2372:25:5"},{"id":1660,"nodeType":"UncheckedBlock","src":"2416:342:5","statements":[{"expression":{"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1648,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"2554:12:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":1652,"indexExpression":{"baseExpression":{"id":1649,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2567:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1651,"indexExpression":{"id":1650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2571:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2567:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2554:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"2578:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2554:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1655,"nodeType":"ExpressionStatement","src":"2554:29:5"},{"expression":{"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1656,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"2716:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"2734:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2716:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1659,"nodeType":"ExpressionStatement","src":"2716:23:5"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1635,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2333:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1636,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"2337:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2341:6:5","memberName":"length","nodeType":"MemberAccess","src":"2337:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2333:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1662,"initializationExpression":{"assignments":[1632],"declarations":[{"constant":false,"id":1632,"mutability":"mutable","name":"i","nameLocation":"2326:1:5","nodeType":"VariableDeclaration","scope":1662,"src":"2318:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"2318:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1634,"initialValue":{"hexValue":"30","id":1633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2330:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2318:13:5"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2349:3:5","subExpression":{"id":1639,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"2351:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1641,"nodeType":"ExpressionStatement","src":"2349:3:5"},"nodeType":"ForStatement","src":"2313:459:5"},{"id":1667,"nodeType":"UncheckedBlock","src":"2785:200:5","statements":[{"expression":{"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1663,"name":"_totalSupplyAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2937:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1664,"name":"totalBurnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"2956:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2937:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1666,"nodeType":"ExpressionStatement","src":"2937:33:5"}]}]}}]},"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"1432:46:5","text":" @dev See {ERC1155-_update}."},"id":1671,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1492:7:5","nodeType":"FunctionDefinition","overrides":{"id":1563,"nodeType":"OverrideSpecifier","overrides":[],"src":"1628:8:5"},"parameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"from","nameLocation":"1517:4:5","nodeType":"VariableDeclaration","scope":1671,"src":"1509:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"to","nameLocation":"1539:2:5","nodeType":"VariableDeclaration","scope":1671,"src":"1531:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1554,"name":"address","nodeType":"ElementaryTypeName","src":"1531:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"ids","nameLocation":"1568:3:5","nodeType":"VariableDeclaration","scope":1671,"src":"1551:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ArrayTypeName","src":"1551:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"values","nameLocation":"1598:6:5","nodeType":"VariableDeclaration","scope":1671,"src":"1581:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1560,"nodeType":"ArrayTypeName","src":"1581:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1499:111:5"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"1637:0:5"},"scope":1672,"src":"1483:1518:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1673,"src":"745:2258:5","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1355,1370,1379,1386]}],"src":"126:2878:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1458],"IERC1155MetadataURI":[1688]},"id":1689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1674,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1676,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1689,"sourceUnit":1459,"src":"158:41:6","symbolAliases":[{"foreign":{"id":1675,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"166:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1678,"name":"IERC1155","nameLocations":["399:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1458,"src":"399:8:6"},"id":1679,"nodeType":"InheritanceSpecifier","src":"399:8:6"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1677,"nodeType":"StructuredDocumentation","src":"201:164:6","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."},"fullyImplemented":false,"id":1688,"linearizedBaseContracts":[1688,1458,2047],"name":"IERC1155MetadataURI","nameLocation":"376:19:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1680,"nodeType":"StructuredDocumentation","src":"414:192:6","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1687,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:6","nodeType":"FunctionDefinition","parameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"id","nameLocation":"632:2:6","nodeType":"VariableDeclaration","scope":1687,"src":"624:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:6"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"659:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1684,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:6"},"scope":1688,"src":"611:63:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1689,"src":"366:310:6","usedErrors":[],"usedEvents":[1355,1370,1379,1386]}],"src":"132:545:6"},"id":6},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[1871],"Math":[3101],"StorageSlot":[2011]},"id":1872,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1690,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1872,"sourceUnit":2012,"src":"126:46:7","symbolAliases":[{"foreign":{"id":1691,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"134:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1872,"sourceUnit":3102,"src":"173:37:7","symbolAliases":[{"foreign":{"id":1693,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"181:4:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"212:63:7","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":1871,"linearizedBaseContracts":[1871],"name":"Arrays","nameLocation":"284:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1698,"libraryName":{"id":1696,"name":"StorageSlot","nameLocations":["303:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":2011,"src":"303:11:7"},"nodeType":"UsingForDirective","src":"297:30:7","typeName":{"id":1697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"319:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1780,"nodeType":"Block","src":"843:834:7","statements":[{"assignments":[1710],"declarations":[{"constant":false,"id":1710,"mutability":"mutable","name":"low","nameLocation":"861:3:7","nodeType":"VariableDeclaration","scope":1780,"src":"853:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1709,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1712,"initialValue":{"hexValue":"30","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"867:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"853:15:7"},{"assignments":[1714],"declarations":[{"constant":false,"id":1714,"mutability":"mutable","name":"high","nameLocation":"886:4:7","nodeType":"VariableDeclaration","scope":1780,"src":"878:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1717,"initialValue":{"expression":{"id":1715,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"893:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"899:6:7","memberName":"length","nodeType":"MemberAccess","src":"893:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"878:27:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1718,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"920:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"920:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1724,"nodeType":"IfStatement","src":"916:48:7","trueBody":{"id":1723,"nodeType":"Block","src":"931:33:7","statements":[{"expression":{"hexValue":"30","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1708,"id":1722,"nodeType":"Return","src":"945:8:7"}]}},{"body":{"id":1756,"nodeType":"Block","src":"993:423:7","statements":[{"assignments":[1729],"declarations":[{"constant":false,"id":1729,"mutability":"mutable","name":"mid","nameLocation":"1015:3:7","nodeType":"VariableDeclaration","scope":1756,"src":"1007:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"1007:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1735,"initialValue":{"arguments":[{"id":1732,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1034:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1733,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1039:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1730,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"1021:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3101_$","typeString":"type(library Math)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1026:7:7","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":2275,"src":"1021:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1021:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1007:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1737,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"1282:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":1738,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"1289:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[1802,1823,1844],"referencedDeclaration":1844,"src":"1269:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1916_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1916_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1294:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1915,"src":"1269:30:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1741,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"1302:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1269:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1754,"nodeType":"Block","src":"1360:46:7","statements":[{"expression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1748,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1378:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"1384:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1384:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1378:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1753,"nodeType":"ExpressionStatement","src":"1378:13:7"}]},"id":1755,"nodeType":"IfStatement","src":"1265:141:7","trueBody":{"id":1747,"nodeType":"Block","src":"1311:43:7","statements":[{"expression":{"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1743,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"1329:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1744,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"1336:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1746,"nodeType":"ExpressionStatement","src":"1329:10:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"981:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1726,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"987:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"981:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1757,"nodeType":"WhileStatement","src":"974:442:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1758,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1533:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1539:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1533:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1762,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"1557:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1564:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1570:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1564:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1761,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[1802,1823,1844],"referencedDeclaration":1844,"src":"1544:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1916_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1544:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1916_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":1767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1573:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1915,"src":"1544:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1768,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"1582:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1544:45:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1533:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1778,"nodeType":"Block","src":"1636:35:7","statements":[{"expression":{"id":1776,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1657:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1708,"id":1777,"nodeType":"Return","src":"1650:10:7"}]},"id":1779,"nodeType":"IfStatement","src":"1529:142:7","trueBody":{"id":1775,"nodeType":"Block","src":"1591:39:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1771,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"1612:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1618:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1708,"id":1774,"nodeType":"Return","src":"1605:14:7"}]}}]},"documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"333:407:7","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."},"id":1781,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"754:14:7","nodeType":"FunctionDefinition","parameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"array","nameLocation":"787:5:7","nodeType":"VariableDeclaration","scope":1781,"src":"769:23:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1701,"nodeType":"ArrayTypeName","src":"769:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"element","nameLocation":"802:7:7","nodeType":"VariableDeclaration","scope":1781,"src":"794:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"768:42:7"},"returnParameters":{"id":1708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1781,"src":"834:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1706,"name":"uint256","nodeType":"ElementaryTypeName","src":"834:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"833:9:7"},"scope":1871,"src":"745:932:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"1993:459:7","statements":[{"assignments":[1794],"declarations":[{"constant":false,"id":1794,"mutability":"mutable","name":"slot","nameLocation":"2011:4:7","nodeType":"VariableDeclaration","scope":1801,"src":"2003:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1793,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1795,"nodeType":"VariableDeclarationStatement","src":"2003:12:7"},{"AST":{"nativeSrc":"2316:92:7","nodeType":"YulBlock","src":"2316:92:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2337:1:7","nodeType":"YulLiteral","src":"2337:1:7","type":"","value":"0"},{"name":"arr.slot","nativeSrc":"2340:8:7","nodeType":"YulIdentifier","src":"2340:8:7"}],"functionName":{"name":"mstore","nativeSrc":"2330:6:7","nodeType":"YulIdentifier","src":"2330:6:7"},"nativeSrc":"2330:19:7","nodeType":"YulFunctionCall","src":"2330:19:7"},"nativeSrc":"2330:19:7","nodeType":"YulExpressionStatement","src":"2330:19:7"},{"nativeSrc":"2362:36:7","nodeType":"YulAssignment","src":"2362:36:7","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2384:1:7","nodeType":"YulLiteral","src":"2384:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2387:4:7","nodeType":"YulLiteral","src":"2387:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2374:9:7","nodeType":"YulIdentifier","src":"2374:9:7"},"nativeSrc":"2374:18:7","nodeType":"YulFunctionCall","src":"2374:18:7"},{"name":"pos","nativeSrc":"2394:3:7","nodeType":"YulIdentifier","src":"2394:3:7"}],"functionName":{"name":"add","nativeSrc":"2370:3:7","nodeType":"YulIdentifier","src":"2370:3:7"},"nativeSrc":"2370:28:7","nodeType":"YulFunctionCall","src":"2370:28:7"},"variableNames":[{"name":"slot","nativeSrc":"2362:4:7","nodeType":"YulIdentifier","src":"2362:4:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1785,"isOffset":false,"isSlot":true,"src":"2340:8:7","suffix":"slot","valueSize":1},{"declaration":1787,"isOffset":false,"isSlot":false,"src":"2394:3:7","valueSize":1},{"declaration":1794,"isOffset":false,"isSlot":false,"src":"2362:4:7","valueSize":1}],"id":1796,"nodeType":"InlineAssembly","src":"2307:101:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1797,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"2424:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2429:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1933,"src":"2424:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1907_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2424:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1907_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":1792,"id":1800,"nodeType":"Return","src":"2417:28:7"}]},"documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"1683:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"1888:12:7","nodeType":"FunctionDefinition","parameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1785,"mutability":"mutable","name":"arr","nameLocation":"1919:3:7","nodeType":"VariableDeclaration","scope":1802,"src":"1901:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"1901:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1784,"nodeType":"ArrayTypeName","src":"1901:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1787,"mutability":"mutable","name":"pos","nameLocation":"1932:3:7","nodeType":"VariableDeclaration","scope":1802,"src":"1924:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1900:36:7"},"returnParameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1802,"src":"1960:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1907_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1790,"nodeType":"UserDefinedTypeName","pathNode":{"id":1789,"name":"StorageSlot.AddressSlot","nameLocations":["1960:11:7","1972:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1907,"src":"1960:23:7"},"referencedDeclaration":1907,"src":"1960:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1907_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:33:7"},"scope":1871,"src":"1879:573:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"2768:459:7","statements":[{"assignments":[1815],"declarations":[{"constant":false,"id":1815,"mutability":"mutable","name":"slot","nameLocation":"2786:4:7","nodeType":"VariableDeclaration","scope":1822,"src":"2778:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2778:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1816,"nodeType":"VariableDeclarationStatement","src":"2778:12:7"},{"AST":{"nativeSrc":"3091:92:7","nodeType":"YulBlock","src":"3091:92:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3112:1:7","nodeType":"YulLiteral","src":"3112:1:7","type":"","value":"0"},{"name":"arr.slot","nativeSrc":"3115:8:7","nodeType":"YulIdentifier","src":"3115:8:7"}],"functionName":{"name":"mstore","nativeSrc":"3105:6:7","nodeType":"YulIdentifier","src":"3105:6:7"},"nativeSrc":"3105:19:7","nodeType":"YulFunctionCall","src":"3105:19:7"},"nativeSrc":"3105:19:7","nodeType":"YulExpressionStatement","src":"3105:19:7"},{"nativeSrc":"3137:36:7","nodeType":"YulAssignment","src":"3137:36:7","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3159:1:7","nodeType":"YulLiteral","src":"3159:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"3162:4:7","nodeType":"YulLiteral","src":"3162:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3149:9:7","nodeType":"YulIdentifier","src":"3149:9:7"},"nativeSrc":"3149:18:7","nodeType":"YulFunctionCall","src":"3149:18:7"},{"name":"pos","nativeSrc":"3169:3:7","nodeType":"YulIdentifier","src":"3169:3:7"}],"functionName":{"name":"add","nativeSrc":"3145:3:7","nodeType":"YulIdentifier","src":"3145:3:7"},"nativeSrc":"3145:28:7","nodeType":"YulFunctionCall","src":"3145:28:7"},"variableNames":[{"name":"slot","nativeSrc":"3137:4:7","nodeType":"YulIdentifier","src":"3137:4:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1806,"isOffset":false,"isSlot":true,"src":"3115:8:7","suffix":"slot","valueSize":1},{"declaration":1808,"isOffset":false,"isSlot":false,"src":"3169:3:7","valueSize":1},{"declaration":1815,"isOffset":false,"isSlot":false,"src":"3137:4:7","valueSize":1}],"id":1817,"nodeType":"InlineAssembly","src":"3082:101:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1818,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"3199:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:14:7","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":1955,"src":"3199:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1913_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1913_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":1813,"id":1821,"nodeType":"Return","src":"3192:28:7"}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"2458:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"2663:12:7","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"arr","nameLocation":"2694:3:7","nodeType":"VariableDeclaration","scope":1823,"src":"2676:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1804,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2676:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1805,"nodeType":"ArrayTypeName","src":"2676:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"pos","nameLocation":"2707:3:7","nodeType":"VariableDeclaration","scope":1823,"src":"2699:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2675:36:7"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1823,"src":"2735:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1913_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1811,"nodeType":"UserDefinedTypeName","pathNode":{"id":1810,"name":"StorageSlot.Bytes32Slot","nameLocations":["2735:11:7","2747:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1913,"src":"2735:23:7"},"referencedDeclaration":1913,"src":"2735:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1913_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2734:33:7"},"scope":1871,"src":"2654:573:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1843,"nodeType":"Block","src":"3543:459:7","statements":[{"assignments":[1836],"declarations":[{"constant":false,"id":1836,"mutability":"mutable","name":"slot","nameLocation":"3561:4:7","nodeType":"VariableDeclaration","scope":1843,"src":"3553:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1835,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3553:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1837,"nodeType":"VariableDeclarationStatement","src":"3553:12:7"},{"AST":{"nativeSrc":"3866:92:7","nodeType":"YulBlock","src":"3866:92:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3887:1:7","nodeType":"YulLiteral","src":"3887:1:7","type":"","value":"0"},{"name":"arr.slot","nativeSrc":"3890:8:7","nodeType":"YulIdentifier","src":"3890:8:7"}],"functionName":{"name":"mstore","nativeSrc":"3880:6:7","nodeType":"YulIdentifier","src":"3880:6:7"},"nativeSrc":"3880:19:7","nodeType":"YulFunctionCall","src":"3880:19:7"},"nativeSrc":"3880:19:7","nodeType":"YulExpressionStatement","src":"3880:19:7"},{"nativeSrc":"3912:36:7","nodeType":"YulAssignment","src":"3912:36:7","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3934:1:7","nodeType":"YulLiteral","src":"3934:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"3937:4:7","nodeType":"YulLiteral","src":"3937:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3924:9:7","nodeType":"YulIdentifier","src":"3924:9:7"},"nativeSrc":"3924:18:7","nodeType":"YulFunctionCall","src":"3924:18:7"},{"name":"pos","nativeSrc":"3944:3:7","nodeType":"YulIdentifier","src":"3944:3:7"}],"functionName":{"name":"add","nativeSrc":"3920:3:7","nodeType":"YulIdentifier","src":"3920:3:7"},"nativeSrc":"3920:28:7","nodeType":"YulFunctionCall","src":"3920:28:7"},"variableNames":[{"name":"slot","nativeSrc":"3912:4:7","nodeType":"YulIdentifier","src":"3912:4:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1827,"isOffset":false,"isSlot":true,"src":"3890:8:7","suffix":"slot","valueSize":1},{"declaration":1829,"isOffset":false,"isSlot":false,"src":"3944:3:7","valueSize":1},{"declaration":1836,"isOffset":false,"isSlot":false,"src":"3912:4:7","valueSize":1}],"id":1838,"nodeType":"InlineAssembly","src":"3857:101:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1839,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3974:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3979:14:7","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":1966,"src":"3974:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1916_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3974:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1916_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":1834,"id":1842,"nodeType":"Return","src":"3967:28:7"}]},"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"3233:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1844,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"3438:12:7","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"arr","nameLocation":"3469:3:7","nodeType":"VariableDeclaration","scope":1844,"src":"3451:21:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1826,"nodeType":"ArrayTypeName","src":"3451:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1829,"mutability":"mutable","name":"pos","nameLocation":"3482:3:7","nodeType":"VariableDeclaration","scope":1844,"src":"3474:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3474:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3450:36:7"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1844,"src":"3510:31:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1916_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1832,"nodeType":"UserDefinedTypeName","pathNode":{"id":1831,"name":"StorageSlot.Uint256Slot","nameLocations":["3510:11:7","3522:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"3510:23:7"},"referencedDeclaration":1916,"src":"3510:23:7","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1916_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"3509:33:7"},"scope":1871,"src":"3429:573:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1856,"nodeType":"Block","src":"4303:98:7","statements":[{"AST":{"nativeSrc":"4322:73:7","nodeType":"YulBlock","src":"4322:73:7","statements":[{"nativeSrc":"4336:49:7","nodeType":"YulAssignment","src":"4336:49:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"4357:3:7","nodeType":"YulIdentifier","src":"4357:3:7"},{"kind":"number","nativeSrc":"4362:4:7","nodeType":"YulLiteral","src":"4362:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4353:3:7","nodeType":"YulIdentifier","src":"4353:3:7"},"nativeSrc":"4353:14:7","nodeType":"YulFunctionCall","src":"4353:14:7"},{"arguments":[{"name":"pos","nativeSrc":"4373:3:7","nodeType":"YulIdentifier","src":"4373:3:7"},{"kind":"number","nativeSrc":"4378:4:7","nodeType":"YulLiteral","src":"4378:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"4369:3:7","nodeType":"YulIdentifier","src":"4369:3:7"},"nativeSrc":"4369:14:7","nodeType":"YulFunctionCall","src":"4369:14:7"}],"functionName":{"name":"add","nativeSrc":"4349:3:7","nodeType":"YulIdentifier","src":"4349:3:7"},"nativeSrc":"4349:35:7","nodeType":"YulFunctionCall","src":"4349:35:7"}],"functionName":{"name":"mload","nativeSrc":"4343:5:7","nodeType":"YulIdentifier","src":"4343:5:7"},"nativeSrc":"4343:42:7","nodeType":"YulFunctionCall","src":"4343:42:7"},"variableNames":[{"name":"res","nativeSrc":"4336:3:7","nodeType":"YulIdentifier","src":"4336:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1848,"isOffset":false,"isSlot":false,"src":"4357:3:7","valueSize":1},{"declaration":1850,"isOffset":false,"isSlot":false,"src":"4373:3:7","valueSize":1},{"declaration":1853,"isOffset":false,"isSlot":false,"src":"4336:3:7","valueSize":1}],"id":1855,"nodeType":"InlineAssembly","src":"4313:82:7"}]},"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"4008:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1857,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"4213:18:7","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"arr","nameLocation":"4249:3:7","nodeType":"VariableDeclaration","scope":1857,"src":"4232:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1846,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ArrayTypeName","src":"4232:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"pos","nameLocation":"4262:3:7","nodeType":"VariableDeclaration","scope":1857,"src":"4254:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"4254:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4231:35:7"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"res","nameLocation":"4298:3:7","nodeType":"VariableDeclaration","scope":1857,"src":"4290:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"4290:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4289:13:7"},"scope":1871,"src":"4204:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1869,"nodeType":"Block","src":"4702:98:7","statements":[{"AST":{"nativeSrc":"4721:73:7","nodeType":"YulBlock","src":"4721:73:7","statements":[{"nativeSrc":"4735:49:7","nodeType":"YulAssignment","src":"4735:49:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"4756:3:7","nodeType":"YulIdentifier","src":"4756:3:7"},{"kind":"number","nativeSrc":"4761:4:7","nodeType":"YulLiteral","src":"4761:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4752:3:7","nodeType":"YulIdentifier","src":"4752:3:7"},"nativeSrc":"4752:14:7","nodeType":"YulFunctionCall","src":"4752:14:7"},{"arguments":[{"name":"pos","nativeSrc":"4772:3:7","nodeType":"YulIdentifier","src":"4772:3:7"},{"kind":"number","nativeSrc":"4777:4:7","nodeType":"YulLiteral","src":"4777:4:7","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"4768:3:7","nodeType":"YulIdentifier","src":"4768:3:7"},"nativeSrc":"4768:14:7","nodeType":"YulFunctionCall","src":"4768:14:7"}],"functionName":{"name":"add","nativeSrc":"4748:3:7","nodeType":"YulIdentifier","src":"4748:3:7"},"nativeSrc":"4748:35:7","nodeType":"YulFunctionCall","src":"4748:35:7"}],"functionName":{"name":"mload","nativeSrc":"4742:5:7","nodeType":"YulIdentifier","src":"4742:5:7"},"nativeSrc":"4742:42:7","nodeType":"YulFunctionCall","src":"4742:42:7"},"variableNames":[{"name":"res","nativeSrc":"4735:3:7","nodeType":"YulIdentifier","src":"4735:3:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1861,"isOffset":false,"isSlot":false,"src":"4756:3:7","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"4772:3:7","valueSize":1},{"declaration":1866,"isOffset":false,"isSlot":false,"src":"4735:3:7","valueSize":1}],"id":1868,"nodeType":"InlineAssembly","src":"4712:82:7"}]},"documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"4407:191:7","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"4612:18:7","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"arr","nameLocation":"4648:3:7","nodeType":"VariableDeclaration","scope":1870,"src":"4631:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1860,"nodeType":"ArrayTypeName","src":"4631:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"pos","nameLocation":"4661:3:7","nodeType":"VariableDeclaration","scope":1870,"src":"4653:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"4653:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:35:7"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"res","nameLocation":"4697:3:7","nodeType":"VariableDeclaration","scope":1870,"src":"4689:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1865,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4688:13:7"},"scope":1871,"src":"4603:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1872,"src":"276:4526:7","usedErrors":[],"usedEvents":[]}],"src":"100:4703:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1901]},"id":1902,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1873,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1901,"linearizedBaseContracts":[1901],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1882,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1879,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1878,"id":1881,"nodeType":"Return","src":"728:17:8"}]},"id":1883,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1883,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1876,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1901,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1891,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1888,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1887,"id":1890,"nodeType":"Return","src":"835:15:8"}]},"id":1892,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1884,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1892,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1885,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1901,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1899,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1896,"id":1898,"nodeType":"Return","src":"945:8:8"}]},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1900,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1901,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1902,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2011]},"id":2012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1903,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"219:1025:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2011,"linearizedBaseContracts":[2011],"name":"StorageSlot","nameLocation":"1253:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1907,"members":[{"constant":false,"id":1906,"mutability":"mutable","name":"value","nameLocation":"1308:5:9","nodeType":"VariableDeclaration","scope":1907,"src":"1300:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:9","nodeType":"StructDefinition","scope":2011,"src":"1271:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1910,"members":[{"constant":false,"id":1909,"mutability":"mutable","name":"value","nameLocation":"1360:5:9","nodeType":"VariableDeclaration","scope":1910,"src":"1355:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1908,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:9","nodeType":"StructDefinition","scope":2011,"src":"1326:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1913,"members":[{"constant":false,"id":1912,"mutability":"mutable","name":"value","nameLocation":"1415:5:9","nodeType":"VariableDeclaration","scope":1913,"src":"1407:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:9","nodeType":"StructDefinition","scope":2011,"src":"1378:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1916,"members":[{"constant":false,"id":1915,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":1916,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":2011,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1919,"members":[{"constant":false,"id":1918,"mutability":"mutable","name":"value","nameLocation":"1523:5:9","nodeType":"VariableDeclaration","scope":1919,"src":"1516:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1917,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:9","nodeType":"StructDefinition","scope":2011,"src":"1488:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1922,"members":[{"constant":false,"id":1921,"mutability":"mutable","name":"value","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1922,"src":"1568:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1920,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:9","nodeType":"StructDefinition","scope":2011,"src":"1541:45:9","visibility":"public"},{"body":{"id":1932,"nodeType":"Block","src":"1768:106:9","statements":[{"AST":{"nativeSrc":"1830:38:9","nodeType":"YulBlock","src":"1830:38:9","statements":[{"nativeSrc":"1844:14:9","nodeType":"YulAssignment","src":"1844:14:9","value":{"name":"slot","nativeSrc":"1854:4:9","nodeType":"YulIdentifier","src":"1854:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:9","nodeType":"YulIdentifier","src":"1844:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1929,"isOffset":false,"isSlot":true,"src":"1844:6:9","suffix":"slot","valueSize":1},{"declaration":1925,"isOffset":false,"isSlot":false,"src":"1854:4:9","valueSize":1}],"id":1931,"nodeType":"InlineAssembly","src":"1821:47:9"}]},"documentation":{"id":1923,"nodeType":"StructuredDocumentation","src":"1592:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1933,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:9","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"slot","nameLocation":"1716:4:9","nodeType":"VariableDeclaration","scope":1933,"src":"1708:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:9"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"r","nameLocation":"1765:1:9","nodeType":"VariableDeclaration","scope":1933,"src":"1745:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1907_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1928,"nodeType":"UserDefinedTypeName","pathNode":{"id":1927,"name":"AddressSlot","nameLocations":["1745:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1907,"src":"1745:11:9"},"referencedDeclaration":1907,"src":"1745:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1907_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:9"},"scope":2011,"src":"1684:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1943,"nodeType":"Block","src":"2056:106:9","statements":[{"AST":{"nativeSrc":"2118:38:9","nodeType":"YulBlock","src":"2118:38:9","statements":[{"nativeSrc":"2132:14:9","nodeType":"YulAssignment","src":"2132:14:9","value":{"name":"slot","nativeSrc":"2142:4:9","nodeType":"YulIdentifier","src":"2142:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:9","nodeType":"YulIdentifier","src":"2132:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1940,"isOffset":false,"isSlot":true,"src":"2132:6:9","suffix":"slot","valueSize":1},{"declaration":1936,"isOffset":false,"isSlot":false,"src":"2142:4:9","valueSize":1}],"id":1942,"nodeType":"InlineAssembly","src":"2109:47:9"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"1880:87:9","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1944,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:9","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"slot","nameLocation":"2004:4:9","nodeType":"VariableDeclaration","scope":1944,"src":"1996:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:9"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"r","nameLocation":"2053:1:9","nodeType":"VariableDeclaration","scope":1944,"src":"2033:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1910_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1939,"nodeType":"UserDefinedTypeName","pathNode":{"id":1938,"name":"BooleanSlot","nameLocations":["2033:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1910,"src":"2033:11:9"},"referencedDeclaration":1910,"src":"2033:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1910_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:9"},"scope":2011,"src":"1972:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1954,"nodeType":"Block","src":"2344:106:9","statements":[{"AST":{"nativeSrc":"2406:38:9","nodeType":"YulBlock","src":"2406:38:9","statements":[{"nativeSrc":"2420:14:9","nodeType":"YulAssignment","src":"2420:14:9","value":{"name":"slot","nativeSrc":"2430:4:9","nodeType":"YulIdentifier","src":"2430:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:9","nodeType":"YulIdentifier","src":"2420:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1951,"isOffset":false,"isSlot":true,"src":"2420:6:9","suffix":"slot","valueSize":1},{"declaration":1947,"isOffset":false,"isSlot":false,"src":"2430:4:9","valueSize":1}],"id":1953,"nodeType":"InlineAssembly","src":"2397:47:9"}]},"documentation":{"id":1945,"nodeType":"StructuredDocumentation","src":"2168:87:9","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1955,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:9","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"slot","nameLocation":"2292:4:9","nodeType":"VariableDeclaration","scope":1955,"src":"2284:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:9"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"r","nameLocation":"2341:1:9","nodeType":"VariableDeclaration","scope":1955,"src":"2321:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1913_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1950,"nodeType":"UserDefinedTypeName","pathNode":{"id":1949,"name":"Bytes32Slot","nameLocations":["2321:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1913,"src":"2321:11:9"},"referencedDeclaration":1913,"src":"2321:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1913_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:9"},"scope":2011,"src":"2260:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1965,"nodeType":"Block","src":"2632:106:9","statements":[{"AST":{"nativeSrc":"2694:38:9","nodeType":"YulBlock","src":"2694:38:9","statements":[{"nativeSrc":"2708:14:9","nodeType":"YulAssignment","src":"2708:14:9","value":{"name":"slot","nativeSrc":"2718:4:9","nodeType":"YulIdentifier","src":"2718:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:9","nodeType":"YulIdentifier","src":"2708:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1962,"isOffset":false,"isSlot":true,"src":"2708:6:9","suffix":"slot","valueSize":1},{"declaration":1958,"isOffset":false,"isSlot":false,"src":"2718:4:9","valueSize":1}],"id":1964,"nodeType":"InlineAssembly","src":"2685:47:9"}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"2456:87:9","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1966,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:9","nodeType":"FunctionDefinition","parameters":{"id":1959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"slot","nameLocation":"2580:4:9","nodeType":"VariableDeclaration","scope":1966,"src":"2572:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:9"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"r","nameLocation":"2629:1:9","nodeType":"VariableDeclaration","scope":1966,"src":"2609:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1916_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1961,"nodeType":"UserDefinedTypeName","pathNode":{"id":1960,"name":"Uint256Slot","nameLocations":["2609:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"2609:11:9"},"referencedDeclaration":1916,"src":"2609:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1916_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:9"},"scope":2011,"src":"2548:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1976,"nodeType":"Block","src":"2917:106:9","statements":[{"AST":{"nativeSrc":"2979:38:9","nodeType":"YulBlock","src":"2979:38:9","statements":[{"nativeSrc":"2993:14:9","nodeType":"YulAssignment","src":"2993:14:9","value":{"name":"slot","nativeSrc":"3003:4:9","nodeType":"YulIdentifier","src":"3003:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:9","nodeType":"YulIdentifier","src":"2993:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1973,"isOffset":false,"isSlot":true,"src":"2993:6:9","suffix":"slot","valueSize":1},{"declaration":1969,"isOffset":false,"isSlot":false,"src":"3003:4:9","valueSize":1}],"id":1975,"nodeType":"InlineAssembly","src":"2970:47:9"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"2744:86:9","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:9","nodeType":"FunctionDefinition","parameters":{"id":1970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"slot","nameLocation":"2866:4:9","nodeType":"VariableDeclaration","scope":1977,"src":"2858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:9"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"r","nameLocation":"2914:1:9","nodeType":"VariableDeclaration","scope":1977,"src":"2895:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1919_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1972,"nodeType":"UserDefinedTypeName","pathNode":{"id":1971,"name":"StringSlot","nameLocations":["2895:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1919,"src":"2895:10:9"},"referencedDeclaration":1919,"src":"2895:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1919_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:9"},"scope":2011,"src":"2835:188:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1987,"nodeType":"Block","src":"3225:112:9","statements":[{"AST":{"nativeSrc":"3287:44:9","nodeType":"YulBlock","src":"3287:44:9","statements":[{"nativeSrc":"3301:20:9","nodeType":"YulAssignment","src":"3301:20:9","value":{"name":"store.slot","nativeSrc":"3311:10:9","nodeType":"YulIdentifier","src":"3311:10:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:9","nodeType":"YulIdentifier","src":"3301:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1984,"isOffset":false,"isSlot":true,"src":"3301:6:9","suffix":"slot","valueSize":1},{"declaration":1980,"isOffset":false,"isSlot":true,"src":"3311:10:9","suffix":"slot","valueSize":1}],"id":1986,"nodeType":"InlineAssembly","src":"3278:53:9"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"3029:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1988,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:9","nodeType":"FunctionDefinition","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"store","nameLocation":"3173:5:9","nodeType":"VariableDeclaration","scope":1988,"src":"3158:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:9"},"returnParameters":{"id":1985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"r","nameLocation":"3222:1:9","nodeType":"VariableDeclaration","scope":1988,"src":"3203:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1919_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1983,"nodeType":"UserDefinedTypeName","pathNode":{"id":1982,"name":"StringSlot","nameLocations":["3203:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1919,"src":"3203:10:9"},"referencedDeclaration":1919,"src":"3203:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1919_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:9"},"scope":2011,"src":"3135:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1998,"nodeType":"Block","src":"3513:106:9","statements":[{"AST":{"nativeSrc":"3575:38:9","nodeType":"YulBlock","src":"3575:38:9","statements":[{"nativeSrc":"3589:14:9","nodeType":"YulAssignment","src":"3589:14:9","value":{"name":"slot","nativeSrc":"3599:4:9","nodeType":"YulIdentifier","src":"3599:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:9","nodeType":"YulIdentifier","src":"3589:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1995,"isOffset":false,"isSlot":true,"src":"3589:6:9","suffix":"slot","valueSize":1},{"declaration":1991,"isOffset":false,"isSlot":false,"src":"3599:4:9","valueSize":1}],"id":1997,"nodeType":"InlineAssembly","src":"3566:47:9"}]},"documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"3343:85:9","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:9","nodeType":"FunctionDefinition","parameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"slot","nameLocation":"3463:4:9","nodeType":"VariableDeclaration","scope":1999,"src":"3455:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:9"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"r","nameLocation":"3510:1:9","nodeType":"VariableDeclaration","scope":1999,"src":"3492:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1922_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1994,"nodeType":"UserDefinedTypeName","pathNode":{"id":1993,"name":"BytesSlot","nameLocations":["3492:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1922,"src":"3492:9:9"},"referencedDeclaration":1922,"src":"3492:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1922_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:9"},"scope":2011,"src":"3433:186:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2009,"nodeType":"Block","src":"3816:112:9","statements":[{"AST":{"nativeSrc":"3878:44:9","nodeType":"YulBlock","src":"3878:44:9","statements":[{"nativeSrc":"3892:20:9","nodeType":"YulAssignment","src":"3892:20:9","value":{"name":"store.slot","nativeSrc":"3902:10:9","nodeType":"YulIdentifier","src":"3902:10:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:9","nodeType":"YulIdentifier","src":"3892:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2006,"isOffset":false,"isSlot":true,"src":"3892:6:9","suffix":"slot","valueSize":1},{"declaration":2002,"isOffset":false,"isSlot":true,"src":"3902:10:9","suffix":"slot","valueSize":1}],"id":2008,"nodeType":"InlineAssembly","src":"3869:53:9"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"3625:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:9","nodeType":"FunctionDefinition","parameters":{"id":2003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"store","nameLocation":"3765:5:9","nodeType":"VariableDeclaration","scope":2010,"src":"3751:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2001,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:9"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"r","nameLocation":"3813:1:9","nodeType":"VariableDeclaration","scope":2010,"src":"3795:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1922_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2005,"nodeType":"UserDefinedTypeName","pathNode":{"id":2004,"name":"BytesSlot","nameLocations":["3795:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1922,"src":"3795:9:9"},"referencedDeclaration":1922,"src":"3795:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1922_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:9"},"scope":2011,"src":"3729:199:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2012,"src":"1245:2685:9","usedErrors":[],"usedEvents":[]}],"src":"193:3738:9"},"id":9},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2035],"IERC165":[2047]},"id":2036,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2013,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2036,"sourceUnit":2048,"src":"140:38:10","symbolAliases":[{"foreign":{"id":2014,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"148:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2017,"name":"IERC165","nameLocations":["687:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"687:7:10"},"id":2018,"nodeType":"InheritanceSpecifier","src":"687:7:10"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2016,"nodeType":"StructuredDocumentation","src":"180:478:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2035,"linearizedBaseContracts":[2035,2047],"name":"ERC165","nameLocation":"677:6:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2046],"body":{"id":2033,"nodeType":"Block","src":"844:64:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"861:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2028,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"881:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2047_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2047_$","typeString":"type(contract IERC165)"}],"id":2027,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"876:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"876:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2047","typeString":"type(contract IERC165)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"890:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"876:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"861:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2025,"id":2032,"nodeType":"Return","src":"854:47:10"}]},"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"701:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"771:17:10","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"interfaceId","nameLocation":"796:11:10","nodeType":"VariableDeclaration","scope":2034,"src":"789:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2020,"name":"bytes4","nodeType":"ElementaryTypeName","src":"789:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"788:20:10"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2034,"src":"838:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2023,"name":"bool","nodeType":"ElementaryTypeName","src":"838:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"837:6:10"},"scope":2035,"src":"762:146:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2036,"src":"659:251:10","usedErrors":[],"usedEvents":[]}],"src":"114:797:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2047]},"id":2048,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2037,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"141:279:11","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2047,"linearizedBaseContracts":[2047],"name":"IERC165","nameLocation":"431:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"445:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2046,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"799:17:11","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"interfaceId","nameLocation":"824:11:11","nodeType":"VariableDeclaration","scope":2046,"src":"817:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2040,"name":"bytes4","nodeType":"ElementaryTypeName","src":"817:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"816:20:11"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2046,"src":"860:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2043,"name":"bool","nodeType":"ElementaryTypeName","src":"860:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"859:6:11"},"scope":2047,"src":"790:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2048,"src":"421:447:11","usedErrors":[],"usedEvents":[]}],"src":"115:754:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3101]},"id":3102,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2049,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"129:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3101,"linearizedBaseContracts":[3101],"name":"Math","nameLocation":"211:4:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"222:50:12","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":2053,"name":"MathOverflowedMulDiv","nameLocation":"283:20:12","nodeType":"ErrorDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[],"src":"303:2:12"},"src":"277:29:12"},{"canonicalName":"Math.Rounding","id":2058,"members":[{"id":2054,"name":"Floor","nameLocation":"336:5:12","nodeType":"EnumValue","src":"336:5:12"},{"id":2055,"name":"Ceil","nameLocation":"379:4:12","nodeType":"EnumValue","src":"379:4:12"},{"id":2056,"name":"Trunc","nameLocation":"421:5:12","nodeType":"EnumValue","src":"421:5:12"},{"id":2057,"name":"Expand","nameLocation":"451:6:12","nodeType":"EnumValue","src":"451:6:12"}],"name":"Rounding","nameLocation":"317:8:12","nodeType":"EnumDefinition","src":"312:169:12"},{"body":{"id":2089,"nodeType":"Block","src":"661:140:12","statements":[{"id":2088,"nodeType":"UncheckedBlock","src":"671:124:12","statements":[{"assignments":[2071],"declarations":[{"constant":false,"id":2071,"mutability":"mutable","name":"c","nameLocation":"703:1:12","nodeType":"VariableDeclaration","scope":2088,"src":"695:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2070,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2075,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"707:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2073,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"711:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"730:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"734:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2083,"nodeType":"IfStatement","src":"726:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2069,"id":2082,"nodeType":"Return","src":"737:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2085,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"782:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2069,"id":2087,"nodeType":"Return","src":"768:16:12"}]}]},"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"487:93:12","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2090,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:12","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"a","nameLocation":"609:1:12","nodeType":"VariableDeclaration","scope":2090,"src":"601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2063,"mutability":"mutable","name":"b","nameLocation":"620:1:12","nodeType":"VariableDeclaration","scope":2090,"src":"612:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:12"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"646:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2065,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2090,"src":"652:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:12"},"scope":3101,"src":"585:216:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2117,"nodeType":"Block","src":"984:113:12","statements":[{"id":2116,"nodeType":"UncheckedBlock","src":"994:97:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"1022:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1026:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2109,"nodeType":"IfStatement","src":"1018:28:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2101,"id":2108,"nodeType":"Return","src":"1029:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"1074:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2112,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"1078:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2101,"id":2115,"nodeType":"Return","src":"1060:20:12"}]}]},"documentation":{"id":2091,"nodeType":"StructuredDocumentation","src":"807:96:12","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:12","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"a","nameLocation":"932:1:12","nodeType":"VariableDeclaration","scope":2118,"src":"924:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2095,"mutability":"mutable","name":"b","nameLocation":"943:1:12","nodeType":"VariableDeclaration","scope":2118,"src":"935:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2094,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:12"},"returnParameters":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"969:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2097,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"975:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:12"},"scope":3101,"src":"908:189:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"1283:417:12","statements":[{"id":2158,"nodeType":"UncheckedBlock","src":"1293:401:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"1551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2137,"nodeType":"IfStatement","src":"1547:28:12","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2129,"id":2136,"nodeType":"Return","src":"1559:16:12"}},{"assignments":[2139],"declarations":[{"constant":false,"id":2139,"mutability":"mutable","name":"c","nameLocation":"1597:1:12","nodeType":"VariableDeclaration","scope":2158,"src":"1589:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2143,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"1601:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2141,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"1605:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"1624:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"1628:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2147,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"1633:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2153,"nodeType":"IfStatement","src":"1620:33:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2129,"id":2152,"nodeType":"Return","src":"1636:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2155,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"1681:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2156,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2129,"id":2157,"nodeType":"Return","src":"1667:16:12"}]}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"1103:99:12","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:12","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"a","nameLocation":"1231:1:12","nodeType":"VariableDeclaration","scope":2160,"src":"1223:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"b","nameLocation":"1242:1:12","nodeType":"VariableDeclaration","scope":2160,"src":"1234:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:12"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"1268:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2125,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"1274:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:12"},"scope":3101,"src":"1207:493:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2187,"nodeType":"Block","src":"1887:114:12","statements":[{"id":2186,"nodeType":"UncheckedBlock","src":"1897:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2172,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1925:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2179,"nodeType":"IfStatement","src":"1921:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2171,"id":2178,"nodeType":"Return","src":"1933:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"1978:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2182,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2171,"id":2185,"nodeType":"Return","src":"1964:20:12"}]}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"1706:100:12","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:12","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"a","nameLocation":"1835:1:12","nodeType":"VariableDeclaration","scope":2188,"src":"1827:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"b","nameLocation":"1846:1:12","nodeType":"VariableDeclaration","scope":2188,"src":"1838:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:12"},"returnParameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2188,"src":"1872:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2167,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2188,"src":"1878:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:12"},"scope":3101,"src":"1811:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"2198:114:12","statements":[{"id":2214,"nodeType":"UncheckedBlock","src":"2208:98:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2236:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2207,"nodeType":"IfStatement","src":"2232:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2199,"id":2206,"nodeType":"Return","src":"2244:17:12"}},{"expression":{"components":[{"hexValue":"74727565","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"2289:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2210,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"2293:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2199,"id":2213,"nodeType":"Return","src":"2275:20:12"}]}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"2007:110:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:12","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"a","nameLocation":"2146:1:12","nodeType":"VariableDeclaration","scope":2216,"src":"2138:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2193,"mutability":"mutable","name":"b","nameLocation":"2157:1:12","nodeType":"VariableDeclaration","scope":2216,"src":"2149:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:12"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"2183:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2195,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2216,"src":"2189:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:12"},"scope":3101,"src":"2122:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2233,"nodeType":"Block","src":"2449:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2466:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2470:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2230,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"2478:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:12","trueExpression":{"id":2229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"2474:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2225,"id":2232,"nodeType":"Return","src":"2459:20:12"}]},"documentation":{"id":2217,"nodeType":"StructuredDocumentation","src":"2318:59:12","text":" @dev Returns the largest of two numbers."},"id":2234,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:12","nodeType":"FunctionDefinition","parameters":{"id":2222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2219,"mutability":"mutable","name":"a","nameLocation":"2403:1:12","nodeType":"VariableDeclaration","scope":2234,"src":"2395:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"b","nameLocation":"2414:1:12","nodeType":"VariableDeclaration","scope":2234,"src":"2406:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:12"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2234,"src":"2440:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:12"},"scope":3101,"src":"2382:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2251,"nodeType":"Block","src":"2624:37:12","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"2641:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2645:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2248,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"2653:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:12","trueExpression":{"id":2247,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"2649:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2243,"id":2250,"nodeType":"Return","src":"2634:20:12"}]},"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"2492:60:12","text":" @dev Returns the smallest of two numbers."},"id":2252,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:12","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"a","nameLocation":"2578:1:12","nodeType":"VariableDeclaration","scope":2252,"src":"2570:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"b","nameLocation":"2589:1:12","nodeType":"VariableDeclaration","scope":2252,"src":"2581:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:12"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2252,"src":"2615:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:12"},"scope":3101,"src":"2557:104:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2274,"nodeType":"Block","src":"2845:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"2900:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2263,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"2904:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2266,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"2910:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2267,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"2914:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2261,"id":2273,"nodeType":"Return","src":"2892:28:12"}]},"documentation":{"id":2253,"nodeType":"StructuredDocumentation","src":"2667:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:12","nodeType":"FunctionDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"a","nameLocation":"2799:1:12","nodeType":"VariableDeclaration","scope":2275,"src":"2791:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"b","nameLocation":"2810:1:12","nodeType":"VariableDeclaration","scope":2275,"src":"2802:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:12"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"2836:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:12"},"scope":3101,"src":"2774:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2308,"nodeType":"Block","src":"3219:260:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"3233:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2293,"nodeType":"IfStatement","src":"3229:127:12","trueBody":{"id":2292,"nodeType":"Block","src":"3241:115:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"3340:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2289,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"3344:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2284,"id":2291,"nodeType":"Return","src":"3333:12:12"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"3444:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2298,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"3458:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"3467:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:12","trueExpression":{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2284,"id":2307,"nodeType":"Return","src":"3437:35:12"}]},"documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"2933:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:12","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"a","nameLocation":"3173:1:12","nodeType":"VariableDeclaration","scope":2309,"src":"3165:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2277,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"b","nameLocation":"3184:1:12","nodeType":"VariableDeclaration","scope":2309,"src":"3176:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:12"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"3210:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:12"},"scope":3101,"src":"3148:331:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"3901:4018:12","statements":[{"id":2433,"nodeType":"UncheckedBlock","src":"3911:4002:12","statements":[{"assignments":[2322],"declarations":[{"constant":false,"id":2322,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:12","nodeType":"VariableDeclaration","scope":2433,"src":"4232:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2326,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"4248:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2324,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"4252:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:12"},{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:12","nodeType":"VariableDeclaration","scope":2433,"src":"4312:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2329,"nodeType":"VariableDeclarationStatement","src":"4312:13:12"},{"AST":{"nativeSrc":"4392:122:12","nodeType":"YulBlock","src":"4392:122:12","statements":[{"nativeSrc":"4410:30:12","nodeType":"YulVariableDeclaration","src":"4410:30:12","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:12","nodeType":"YulIdentifier","src":"4427:1:12"},{"name":"y","nativeSrc":"4430:1:12","nodeType":"YulIdentifier","src":"4430:1:12"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:12","nodeType":"YulLiteral","src":"4437:1:12","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:12","nodeType":"YulIdentifier","src":"4433:3:12"},"nativeSrc":"4433:6:12","nodeType":"YulFunctionCall","src":"4433:6:12"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:12","nodeType":"YulIdentifier","src":"4420:6:12"},"nativeSrc":"4420:20:12","nodeType":"YulFunctionCall","src":"4420:20:12"},"variables":[{"name":"mm","nativeSrc":"4414:2:12","nodeType":"YulTypedName","src":"4414:2:12","type":""}]},{"nativeSrc":"4457:43:12","nodeType":"YulAssignment","src":"4457:43:12","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:12","nodeType":"YulIdentifier","src":"4474:2:12"},{"name":"prod0","nativeSrc":"4478:5:12","nodeType":"YulIdentifier","src":"4478:5:12"}],"functionName":{"name":"sub","nativeSrc":"4470:3:12","nodeType":"YulIdentifier","src":"4470:3:12"},"nativeSrc":"4470:14:12","nodeType":"YulFunctionCall","src":"4470:14:12"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:12","nodeType":"YulIdentifier","src":"4489:2:12"},{"name":"prod0","nativeSrc":"4493:5:12","nodeType":"YulIdentifier","src":"4493:5:12"}],"functionName":{"name":"lt","nativeSrc":"4486:2:12","nodeType":"YulIdentifier","src":"4486:2:12"},"nativeSrc":"4486:13:12","nodeType":"YulFunctionCall","src":"4486:13:12"}],"functionName":{"name":"sub","nativeSrc":"4466:3:12","nodeType":"YulIdentifier","src":"4466:3:12"},"nativeSrc":"4466:34:12","nodeType":"YulFunctionCall","src":"4466:34:12"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:12","nodeType":"YulIdentifier","src":"4457:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2322,"isOffset":false,"isSlot":false,"src":"4478:5:12","valueSize":1},{"declaration":2322,"isOffset":false,"isSlot":false,"src":"4493:5:12","valueSize":1},{"declaration":2328,"isOffset":false,"isSlot":false,"src":"4457:5:12","valueSize":1},{"declaration":2312,"isOffset":false,"isSlot":false,"src":"4427:1:12","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"4430:1:12","valueSize":1}],"id":2330,"nodeType":"InlineAssembly","src":"4383:131:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"4595:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2339,"nodeType":"IfStatement","src":"4591:368:12","trueBody":{"id":2338,"nodeType":"Block","src":"4607:352:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2334,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"4925:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2335,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"4933:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2320,"id":2337,"nodeType":"Return","src":"4918:26:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5065:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2341,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"5080:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2347,"nodeType":"IfStatement","src":"5061:88:12","trueBody":{"id":2346,"nodeType":"Block","src":"5087:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2343,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"5112:20:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2345,"nodeType":"RevertStatement","src":"5105:29:12"}]}},{"assignments":[2349],"declarations":[{"constant":false,"id":2349,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:12","nodeType":"VariableDeclaration","scope":2433,"src":"5404:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2350,"nodeType":"VariableDeclarationStatement","src":"5404:17:12"},{"AST":{"nativeSrc":"5444:291:12","nodeType":"YulBlock","src":"5444:291:12","statements":[{"nativeSrc":"5513:38:12","nodeType":"YulAssignment","src":"5513:38:12","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:12","nodeType":"YulIdentifier","src":"5533:1:12"},{"name":"y","nativeSrc":"5536:1:12","nodeType":"YulIdentifier","src":"5536:1:12"},{"name":"denominator","nativeSrc":"5539:11:12","nodeType":"YulIdentifier","src":"5539:11:12"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:12","nodeType":"YulIdentifier","src":"5526:6:12"},"nativeSrc":"5526:25:12","nodeType":"YulFunctionCall","src":"5526:25:12"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:12","nodeType":"YulIdentifier","src":"5513:9:12"}]},{"nativeSrc":"5633:41:12","nodeType":"YulAssignment","src":"5633:41:12","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:12","nodeType":"YulIdentifier","src":"5646:5:12"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:12","nodeType":"YulIdentifier","src":"5656:9:12"},{"name":"prod0","nativeSrc":"5667:5:12","nodeType":"YulIdentifier","src":"5667:5:12"}],"functionName":{"name":"gt","nativeSrc":"5653:2:12","nodeType":"YulIdentifier","src":"5653:2:12"},"nativeSrc":"5653:20:12","nodeType":"YulFunctionCall","src":"5653:20:12"}],"functionName":{"name":"sub","nativeSrc":"5642:3:12","nodeType":"YulIdentifier","src":"5642:3:12"},"nativeSrc":"5642:32:12","nodeType":"YulFunctionCall","src":"5642:32:12"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:12","nodeType":"YulIdentifier","src":"5633:5:12"}]},{"nativeSrc":"5691:30:12","nodeType":"YulAssignment","src":"5691:30:12","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:12","nodeType":"YulIdentifier","src":"5704:5:12"},{"name":"remainder","nativeSrc":"5711:9:12","nodeType":"YulIdentifier","src":"5711:9:12"}],"functionName":{"name":"sub","nativeSrc":"5700:3:12","nodeType":"YulIdentifier","src":"5700:3:12"},"nativeSrc":"5700:21:12","nodeType":"YulFunctionCall","src":"5700:21:12"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:12","nodeType":"YulIdentifier","src":"5691:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2316,"isOffset":false,"isSlot":false,"src":"5539:11:12","valueSize":1},{"declaration":2322,"isOffset":false,"isSlot":false,"src":"5667:5:12","valueSize":1},{"declaration":2322,"isOffset":false,"isSlot":false,"src":"5691:5:12","valueSize":1},{"declaration":2322,"isOffset":false,"isSlot":false,"src":"5704:5:12","valueSize":1},{"declaration":2328,"isOffset":false,"isSlot":false,"src":"5633:5:12","valueSize":1},{"declaration":2328,"isOffset":false,"isSlot":false,"src":"5646:5:12","valueSize":1},{"declaration":2349,"isOffset":false,"isSlot":false,"src":"5513:9:12","valueSize":1},{"declaration":2349,"isOffset":false,"isSlot":false,"src":"5656:9:12","valueSize":1},{"declaration":2349,"isOffset":false,"isSlot":false,"src":"5711:9:12","valueSize":1},{"declaration":2312,"isOffset":false,"isSlot":false,"src":"5533:1:12","valueSize":1},{"declaration":2314,"isOffset":false,"isSlot":false,"src":"5536:1:12","valueSize":1}],"id":2351,"nodeType":"InlineAssembly","src":"5435:300:12"},{"assignments":[2353],"declarations":[{"constant":false,"id":2353,"mutability":"mutable","name":"twos","nameLocation":"5947:4:12","nodeType":"VariableDeclaration","scope":2433,"src":"5939:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2360,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2354,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5954:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2356,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5973:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:12"},{"AST":{"nativeSrc":"6008:362:12","nodeType":"YulBlock","src":"6008:362:12","statements":[{"nativeSrc":"6073:37:12","nodeType":"YulAssignment","src":"6073:37:12","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:12","nodeType":"YulIdentifier","src":"6092:11:12"},{"name":"twos","nativeSrc":"6105:4:12","nodeType":"YulIdentifier","src":"6105:4:12"}],"functionName":{"name":"div","nativeSrc":"6088:3:12","nodeType":"YulIdentifier","src":"6088:3:12"},"nativeSrc":"6088:22:12","nodeType":"YulFunctionCall","src":"6088:22:12"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:12","nodeType":"YulIdentifier","src":"6073:11:12"}]},{"nativeSrc":"6177:25:12","nodeType":"YulAssignment","src":"6177:25:12","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:12","nodeType":"YulIdentifier","src":"6190:5:12"},{"name":"twos","nativeSrc":"6197:4:12","nodeType":"YulIdentifier","src":"6197:4:12"}],"functionName":{"name":"div","nativeSrc":"6186:3:12","nodeType":"YulIdentifier","src":"6186:3:12"},"nativeSrc":"6186:16:12","nodeType":"YulFunctionCall","src":"6186:16:12"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:12","nodeType":"YulIdentifier","src":"6177:5:12"}]},{"nativeSrc":"6317:39:12","nodeType":"YulAssignment","src":"6317:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:12","nodeType":"YulLiteral","src":"6337:1:12","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:12","nodeType":"YulIdentifier","src":"6340:4:12"}],"functionName":{"name":"sub","nativeSrc":"6333:3:12","nodeType":"YulIdentifier","src":"6333:3:12"},"nativeSrc":"6333:12:12","nodeType":"YulFunctionCall","src":"6333:12:12"},{"name":"twos","nativeSrc":"6347:4:12","nodeType":"YulIdentifier","src":"6347:4:12"}],"functionName":{"name":"div","nativeSrc":"6329:3:12","nodeType":"YulIdentifier","src":"6329:3:12"},"nativeSrc":"6329:23:12","nodeType":"YulFunctionCall","src":"6329:23:12"},{"kind":"number","nativeSrc":"6354:1:12","nodeType":"YulLiteral","src":"6354:1:12","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:12","nodeType":"YulIdentifier","src":"6325:3:12"},"nativeSrc":"6325:31:12","nodeType":"YulFunctionCall","src":"6325:31:12"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:12","nodeType":"YulIdentifier","src":"6317:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2316,"isOffset":false,"isSlot":false,"src":"6073:11:12","valueSize":1},{"declaration":2316,"isOffset":false,"isSlot":false,"src":"6092:11:12","valueSize":1},{"declaration":2322,"isOffset":false,"isSlot":false,"src":"6177:5:12","valueSize":1},{"declaration":2322,"isOffset":false,"isSlot":false,"src":"6190:5:12","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"6105:4:12","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"6197:4:12","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"6317:4:12","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"6340:4:12","valueSize":1},{"declaration":2353,"isOffset":false,"isSlot":false,"src":"6347:4:12","valueSize":1}],"id":2361,"nodeType":"InlineAssembly","src":"5999:371:12"},{"expression":{"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2362,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"6436:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"6445:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2364,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"6453:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2367,"nodeType":"ExpressionStatement","src":"6436:21:12"},{"assignments":[2369],"declarations":[{"constant":false,"id":2369,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:12","nodeType":"VariableDeclaration","scope":2433,"src":"6775:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2376,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2371,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"6798:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:12"},{"expression":{"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7031:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7046:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2380,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7060:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2384,"nodeType":"ExpressionStatement","src":"7031:36:12"},{"expression":{"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2385,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7100:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7115:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2388,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7129:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ExpressionStatement","src":"7100:36:12"},{"expression":{"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2393,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7170:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7185:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2396,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7199:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2400,"nodeType":"ExpressionStatement","src":"7170:36:12"},{"expression":{"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2401,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2403,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7255:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2404,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2408,"nodeType":"ExpressionStatement","src":"7240:36:12"},{"expression":{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2409,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7310:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2411,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7325:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2412,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2416,"nodeType":"ExpressionStatement","src":"7310:36:12"},{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2417,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7381:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2419,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"7396:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2420,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7410:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2424,"nodeType":"ExpressionStatement","src":"7381:36:12"},{"expression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2425,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"7851:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"7860:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2427,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"7868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2430,"nodeType":"ExpressionStatement","src":"7851:24:12"},{"expression":{"id":2431,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"7896:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2320,"id":2432,"nodeType":"Return","src":"7889:13:12"}]}]},"documentation":{"id":2310,"nodeType":"StructuredDocumentation","src":"3485:313:12","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:12","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"x","nameLocation":"3827:1:12","nodeType":"VariableDeclaration","scope":2435,"src":"3819:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2314,"mutability":"mutable","name":"y","nameLocation":"3838:1:12","nodeType":"VariableDeclaration","scope":2435,"src":"3830:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2316,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:12","nodeType":"VariableDeclaration","scope":2435,"src":"3841:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2315,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:12"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"result","nameLocation":"3893:6:12","nodeType":"VariableDeclaration","scope":2435,"src":"3885:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:12"},"scope":3101,"src":"3803:4116:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2477,"nodeType":"Block","src":"8161:192:12","statements":[{"assignments":[2451],"declarations":[{"constant":false,"id":2451,"mutability":"mutable","name":"result","nameLocation":"8179:6:12","nodeType":"VariableDeclaration","scope":2477,"src":"8171:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2450,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2457,"initialValue":{"arguments":[{"id":2453,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"8195:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2454,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"8198:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2455,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"8201:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2452,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2435,2478],"referencedDeclaration":2435,"src":"8188:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2459,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"8244:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}],"id":2458,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"8227:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2058_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2462,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"8264:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2463,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"8267:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2464,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"8270:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2461,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2474,"nodeType":"IfStatement","src":"8223:101:12","trueBody":{"id":2473,"nodeType":"Block","src":"8288:36:12","statements":[{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"8302:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ExpressionStatement","src":"8302:11:12"}]}},{"expression":{"id":2475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"8340:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2449,"id":2476,"nodeType":"Return","src":"8333:13:12"}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"7925:121:12","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2478,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:12","nodeType":"FunctionDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"x","nameLocation":"8075:1:12","nodeType":"VariableDeclaration","scope":2478,"src":"8067:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2437,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"y","nameLocation":"8086:1:12","nodeType":"VariableDeclaration","scope":2478,"src":"8078:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2439,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:12","nodeType":"VariableDeclaration","scope":2478,"src":"8089:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:12","nodeType":"VariableDeclaration","scope":2478,"src":"8110:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"},"typeName":{"id":2444,"nodeType":"UserDefinedTypeName","pathNode":{"id":2443,"name":"Rounding","nameLocations":["8110:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"8110:8:12"},"referencedDeclaration":2058,"src":"8110:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:12"},"returnParameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2478,"src":"8152:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:12"},"scope":3101,"src":"8051:302:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"8644:1585:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"8658:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"nodeType":"IfStatement","src":"8654:45:12","trueBody":{"id":2491,"nodeType":"Block","src":"8666:33:12","statements":[{"expression":{"hexValue":"30","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2485,"id":2490,"nodeType":"Return","src":"8680:8:12"}]}},{"assignments":[2494],"declarations":[{"constant":false,"id":2494,"mutability":"mutable","name":"result","nameLocation":"9386:6:12","nodeType":"VariableDeclaration","scope":2589,"src":"9378:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2503,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"9406:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2496,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2757,2792],"referencedDeclaration":2757,"src":"9401:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:12"},{"id":2588,"nodeType":"UncheckedBlock","src":"9815:408:12","statements":[{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2504,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9839:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9849:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"9858:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9862:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"9839:35:12"},{"expression":{"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9888:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9898:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2517,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"9907:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9911:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2525,"nodeType":"ExpressionStatement","src":"9888:35:12"},{"expression":{"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9937:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9947:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"9956:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9960:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2536,"nodeType":"ExpressionStatement","src":"9937:35:12"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9986:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2538,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"9996:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"10005:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10009:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2543,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"9986:35:12"},{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2548,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10035:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10045:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"10054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10058:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"10035:35:12"},{"expression":{"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10084:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10094:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2561,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"10103:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10107:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2569,"nodeType":"ExpressionStatement","src":"10084:35:12"},{"expression":{"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10133:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2571,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10143:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"10152:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10156:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2580,"nodeType":"ExpressionStatement","src":"10133:35:12"},{"expression":{"arguments":[{"id":2582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10193:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"10201:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2584,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"10205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2581,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"10189:3:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2485,"id":2587,"nodeType":"Return","src":"10182:30:12"}]}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"8359:223:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:12","nodeType":"FunctionDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"a","nameLocation":"8609:1:12","nodeType":"VariableDeclaration","scope":2590,"src":"8601:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:12"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2590,"src":"8635:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:12"},"scope":3101,"src":"8587:1642:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2624,"nodeType":"Block","src":"10405:164:12","statements":[{"id":2623,"nodeType":"UncheckedBlock","src":"10415:148:12","statements":[{"assignments":[2602],"declarations":[{"constant":false,"id":2602,"mutability":"mutable","name":"result","nameLocation":"10447:6:12","nodeType":"VariableDeclaration","scope":2623,"src":"10439:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2606,"initialValue":{"arguments":[{"id":2604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"10461:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2603,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2590,2625],"referencedDeclaration":2590,"src":"10456:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"10484:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2609,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"10511:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}],"id":2608,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"10494:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2058_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"10524:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"10533:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"10542:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:12","trueExpression":{"hexValue":"31","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2600,"id":2622,"nodeType":"Return","src":"10477:75:12"}]}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"10235:89:12","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2625,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:12","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"a","nameLocation":"10351:1:12","nodeType":"VariableDeclaration","scope":2625,"src":"10343:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:12","nodeType":"VariableDeclaration","scope":2625,"src":"10354:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"},"typeName":{"id":2595,"nodeType":"UserDefinedTypeName","pathNode":{"id":2594,"name":"Rounding","nameLocations":["10354:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"10354:8:12"},"referencedDeclaration":2058,"src":"10354:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:12"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2625,"src":"10396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:12"},"scope":3101,"src":"10329:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2756,"nodeType":"Block","src":"10760:922:12","statements":[{"assignments":[2634],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"result","nameLocation":"10778:6:12","nodeType":"VariableDeclaration","scope":2756,"src":"10770:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2636,"initialValue":{"hexValue":"30","id":2635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:12"},{"id":2753,"nodeType":"UncheckedBlock","src":"10798:855:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"10826:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2651,"nodeType":"IfStatement","src":"10822:99:12","trueBody":{"id":2650,"nodeType":"Block","src":"10844:77:12","statements":[{"expression":{"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"10862:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2645,"nodeType":"ExpressionStatement","src":"10862:13:12"},{"expression":{"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"10893:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"nodeType":"ExpressionStatement","src":"10893:13:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"10938:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"nodeType":"IfStatement","src":"10934:96:12","trueBody":{"id":2665,"nodeType":"Block","src":"10955:75:12","statements":[{"expression":{"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"10973:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2660,"nodeType":"ExpressionStatement","src":"10973:12:12"},{"expression":{"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11003:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2664,"nodeType":"ExpressionStatement","src":"11003:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11047:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2681,"nodeType":"IfStatement","src":"11043:96:12","trueBody":{"id":2680,"nodeType":"Block","src":"11064:75:12","statements":[{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11082:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2675,"nodeType":"ExpressionStatement","src":"11082:12:12"},{"expression":{"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11112:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2679,"nodeType":"ExpressionStatement","src":"11112:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11156:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2696,"nodeType":"IfStatement","src":"11152:96:12","trueBody":{"id":2695,"nodeType":"Block","src":"11173:75:12","statements":[{"expression":{"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11191:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2690,"nodeType":"ExpressionStatement","src":"11191:12:12"},{"expression":{"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11221:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2694,"nodeType":"ExpressionStatement","src":"11221:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11265:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2711,"nodeType":"IfStatement","src":"11261:93:12","trueBody":{"id":2710,"nodeType":"Block","src":"11281:73:12","statements":[{"expression":{"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11299:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2705,"nodeType":"ExpressionStatement","src":"11299:11:12"},{"expression":{"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11328:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2709,"nodeType":"ExpressionStatement","src":"11328:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11371:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2726,"nodeType":"IfStatement","src":"11367:93:12","trueBody":{"id":2725,"nodeType":"Block","src":"11387:73:12","statements":[{"expression":{"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11405:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ExpressionStatement","src":"11405:11:12"},{"expression":{"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11434:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2724,"nodeType":"ExpressionStatement","src":"11434:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11477:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2741,"nodeType":"IfStatement","src":"11473:93:12","trueBody":{"id":2740,"nodeType":"Block","src":"11493:73:12","statements":[{"expression":{"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11511:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2735,"nodeType":"ExpressionStatement","src":"11511:11:12"},{"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11540:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2739,"nodeType":"ExpressionStatement","src":"11540:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"11583:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2752,"nodeType":"IfStatement","src":"11579:64:12","trueBody":{"id":2751,"nodeType":"Block","src":"11599:44:12","statements":[{"expression":{"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11617:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2750,"nodeType":"ExpressionStatement","src":"11617:11:12"}]}}]},{"expression":{"id":2754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"11669:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2632,"id":2755,"nodeType":"Return","src":"11662:13:12"}]},"documentation":{"id":2626,"nodeType":"StructuredDocumentation","src":"10575:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:12","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"value","nameLocation":"10721:5:12","nodeType":"VariableDeclaration","scope":2757,"src":"10713:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2627,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:12"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2757,"src":"10751:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2630,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:12"},"scope":3101,"src":"10699:983:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2791,"nodeType":"Block","src":"11915:168:12","statements":[{"id":2790,"nodeType":"UncheckedBlock","src":"11925:152:12","statements":[{"assignments":[2769],"declarations":[{"constant":false,"id":2769,"mutability":"mutable","name":"result","nameLocation":"11957:6:12","nodeType":"VariableDeclaration","scope":2790,"src":"11949:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2773,"initialValue":{"arguments":[{"id":2771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"11971:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2770,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2757,2792],"referencedDeclaration":2757,"src":"11966:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"11998:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2776,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2763,"src":"12025:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}],"id":2775,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"12008:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2058_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"12043:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"12052:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:12","trueExpression":{"hexValue":"31","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2767,"id":2789,"nodeType":"Return","src":"11991:75:12"}]}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"11688:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2792,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:12","nodeType":"FunctionDefinition","parameters":{"id":2764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"value","nameLocation":"11857:5:12","nodeType":"VariableDeclaration","scope":2792,"src":"11849:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2759,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:12","nodeType":"VariableDeclaration","scope":2792,"src":"11864:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"},"typeName":{"id":2762,"nodeType":"UserDefinedTypeName","pathNode":{"id":2761,"name":"Rounding","nameLocations":["11864:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"11864:8:12"},"referencedDeclaration":2058,"src":"11864:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:12"},"returnParameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"11906:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:12"},"scope":3101,"src":"11835:248:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2920,"nodeType":"Block","src":"12276:854:12","statements":[{"assignments":[2801],"declarations":[{"constant":false,"id":2801,"mutability":"mutable","name":"result","nameLocation":"12294:6:12","nodeType":"VariableDeclaration","scope":2920,"src":"12286:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2803,"initialValue":{"hexValue":"30","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:12"},{"id":2917,"nodeType":"UncheckedBlock","src":"12314:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12342:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2820,"nodeType":"IfStatement","src":"12338:103:12","trueBody":{"id":2819,"nodeType":"Block","src":"12361:80:12","statements":[{"expression":{"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12379:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2814,"nodeType":"ExpressionStatement","src":"12379:17:12"},{"expression":{"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"12414:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2818,"nodeType":"ExpressionStatement","src":"12414:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12458:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2837,"nodeType":"IfStatement","src":"12454:103:12","trueBody":{"id":2836,"nodeType":"Block","src":"12477:80:12","statements":[{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12495:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2831,"nodeType":"ExpressionStatement","src":"12495:17:12"},{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"12530:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ExpressionStatement","src":"12530:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12574:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2854,"nodeType":"IfStatement","src":"12570:103:12","trueBody":{"id":2853,"nodeType":"Block","src":"12593:80:12","statements":[{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12611:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"12611:17:12"},{"expression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"12646:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2852,"nodeType":"ExpressionStatement","src":"12646:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12690:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2871,"nodeType":"IfStatement","src":"12686:100:12","trueBody":{"id":2870,"nodeType":"Block","src":"12708:78:12","statements":[{"expression":{"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12726:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2865,"nodeType":"ExpressionStatement","src":"12726:16:12"},{"expression":{"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2866,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"12760:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2869,"nodeType":"ExpressionStatement","src":"12760:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12803:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2888,"nodeType":"IfStatement","src":"12799:100:12","trueBody":{"id":2887,"nodeType":"Block","src":"12821:78:12","statements":[{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12839:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2882,"nodeType":"ExpressionStatement","src":"12839:16:12"},{"expression":{"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2883,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"12873:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2886,"nodeType":"ExpressionStatement","src":"12873:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12916:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2905,"nodeType":"IfStatement","src":"12912:100:12","trueBody":{"id":2904,"nodeType":"Block","src":"12934:78:12","statements":[{"expression":{"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"12952:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2899,"nodeType":"ExpressionStatement","src":"12952:16:12"},{"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2900,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"12986:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2903,"nodeType":"ExpressionStatement","src":"12986:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"13029:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2916,"nodeType":"IfStatement","src":"13025:66:12","trueBody":{"id":2915,"nodeType":"Block","src":"13047:44:12","statements":[{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"13065:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2914,"nodeType":"ExpressionStatement","src":"13065:11:12"}]}}]},{"expression":{"id":2918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"13117:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2799,"id":2919,"nodeType":"Return","src":"13110:13:12"}]},"documentation":{"id":2793,"nodeType":"StructuredDocumentation","src":"12089:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:12","nodeType":"FunctionDefinition","parameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"value","nameLocation":"12237:5:12","nodeType":"VariableDeclaration","scope":2921,"src":"12229:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:12"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2921,"src":"12267:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:12"},"scope":3101,"src":"12214:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2955,"nodeType":"Block","src":"13365:170:12","statements":[{"id":2954,"nodeType":"UncheckedBlock","src":"13375:154:12","statements":[{"assignments":[2933],"declarations":[{"constant":false,"id":2933,"mutability":"mutable","name":"result","nameLocation":"13407:6:12","nodeType":"VariableDeclaration","scope":2954,"src":"13399:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2937,"initialValue":{"arguments":[{"id":2935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"13422:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2934,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2921,2956],"referencedDeclaration":2921,"src":"13416:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"13449:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2940,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"13476:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}],"id":2939,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"13459:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2058_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2943,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"13495:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"13504:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:12","trueExpression":{"hexValue":"31","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2931,"id":2953,"nodeType":"Return","src":"13442:76:12"}]}]},"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"13136:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2956,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:12","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"value","nameLocation":"13307:5:12","nodeType":"VariableDeclaration","scope":2956,"src":"13299:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:12","nodeType":"VariableDeclaration","scope":2956,"src":"13314:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"},"typeName":{"id":2926,"nodeType":"UserDefinedTypeName","pathNode":{"id":2925,"name":"Rounding","nameLocations":["13314:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"13314:8:12"},"referencedDeclaration":2058,"src":"13314:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:12"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2956,"src":"13356:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:12"},"scope":3101,"src":"13284:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3042,"nodeType":"Block","src":"13855:600:12","statements":[{"assignments":[2965],"declarations":[{"constant":false,"id":2965,"mutability":"mutable","name":"result","nameLocation":"13873:6:12","nodeType":"VariableDeclaration","scope":3042,"src":"13865:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2967,"initialValue":{"hexValue":"30","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:12"},{"id":3039,"nodeType":"UncheckedBlock","src":"13893:533:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"13921:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"13917:98:12","trueBody":{"id":2981,"nodeType":"Block","src":"13939:76:12","statements":[{"expression":{"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"13957:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2976,"nodeType":"ExpressionStatement","src":"13957:13:12"},{"expression":{"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"13988:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2980,"nodeType":"ExpressionStatement","src":"13988:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"14032:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2997,"nodeType":"IfStatement","src":"14028:95:12","trueBody":{"id":2996,"nodeType":"Block","src":"14049:74:12","statements":[{"expression":{"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"14067:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2991,"nodeType":"ExpressionStatement","src":"14067:12:12"},{"expression":{"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"14097:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2995,"nodeType":"ExpressionStatement","src":"14097:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"14140:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3012,"nodeType":"IfStatement","src":"14136:95:12","trueBody":{"id":3011,"nodeType":"Block","src":"14157:74:12","statements":[{"expression":{"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"14175:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3006,"nodeType":"ExpressionStatement","src":"14175:12:12"},{"expression":{"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"14205:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"nodeType":"ExpressionStatement","src":"14205:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"14248:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3027,"nodeType":"IfStatement","src":"14244:95:12","trueBody":{"id":3026,"nodeType":"Block","src":"14265:74:12","statements":[{"expression":{"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"14283:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3021,"nodeType":"ExpressionStatement","src":"14283:12:12"},{"expression":{"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3022,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"14313:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3025,"nodeType":"ExpressionStatement","src":"14313:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"14356:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3038,"nodeType":"IfStatement","src":"14352:64:12","trueBody":{"id":3037,"nodeType":"Block","src":"14372:44:12","statements":[{"expression":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3033,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"14390:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3036,"nodeType":"ExpressionStatement","src":"14390:11:12"}]}}]},{"expression":{"id":3040,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"14442:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2963,"id":3041,"nodeType":"Return","src":"14435:13:12"}]},"documentation":{"id":2957,"nodeType":"StructuredDocumentation","src":"13541:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3043,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:12","nodeType":"FunctionDefinition","parameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"value","nameLocation":"13816:5:12","nodeType":"VariableDeclaration","scope":3043,"src":"13808:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:12"},"returnParameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3043,"src":"13846:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:12"},"scope":3101,"src":"13792:663:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3080,"nodeType":"Block","src":"14692:177:12","statements":[{"id":3079,"nodeType":"UncheckedBlock","src":"14702:161:12","statements":[{"assignments":[3055],"declarations":[{"constant":false,"id":3055,"mutability":"mutable","name":"result","nameLocation":"14734:6:12","nodeType":"VariableDeclaration","scope":3079,"src":"14726:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3059,"initialValue":{"arguments":[{"id":3057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"14750:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3056,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3043,3081],"referencedDeclaration":3043,"src":"14743:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"14777:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3062,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"14804:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}],"id":3061,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"14787:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2058_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"14823:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"14838:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:12","trueExpression":{"hexValue":"31","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3053,"id":3078,"nodeType":"Return","src":"14770:82:12"}]}]},"documentation":{"id":3044,"nodeType":"StructuredDocumentation","src":"14461:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:12","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"value","nameLocation":"14634:5:12","nodeType":"VariableDeclaration","scope":3081,"src":"14626:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:12","nodeType":"VariableDeclaration","scope":3081,"src":"14641:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"},"typeName":{"id":3048,"nodeType":"UserDefinedTypeName","pathNode":{"id":3047,"name":"Rounding","nameLocations":["14641:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"14641:8:12"},"referencedDeclaration":2058,"src":"14641:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:12"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"14683:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:12"},"scope":3101,"src":"14610:259:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"15067:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3092,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"15090:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}],"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3090,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:12","typeDescriptions":{}}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3089,"id":3098,"nodeType":"Return","src":"15077:31:12"}]},"documentation":{"id":3082,"nodeType":"StructuredDocumentation","src":"14875:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3100,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:12","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:12","nodeType":"VariableDeclaration","scope":3100,"src":"15019:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"},"typeName":{"id":3084,"nodeType":"UserDefinedTypeName","pathNode":{"id":3083,"name":"Rounding","nameLocations":["15019:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":2058,"src":"15019:8:12"},"referencedDeclaration":2058,"src":"15019:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2058","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:12"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3100,"src":"15061:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3087,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:12"},"scope":3101,"src":"14993:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3102,"src":"203:14914:12","usedErrors":[2053],"usedEvents":[]}],"src":"103:15015:12"},"id":12},"contracts/AvaxGods.sol":{"ast":{"absolutePath":"contracts/AvaxGods.sol","exportedSymbols":{"AVAXGods":[5078],"Arrays":[1871],"Context":[1901],"ERC1155":[1335],"ERC1155Supply":[1672],"ERC165":[2035],"IERC1155":[1458],"IERC1155Errors":[284],"IERC1155MetadataURI":[1688],"IERC1155Receiver":[1500],"IERC165":[2047],"Ownable":[147]},"id":5079,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3103,"literals":["solidity","^","0.8",".16"],"nodeType":"PragmaDirective","src":"35:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":3104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5079,"sourceUnit":1336,"src":"63:59:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5079,"sourceUnit":148,"src":"124:52:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol","id":3106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5079,"sourceUnit":1673,"src":"178:76:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3108,"name":"ERC1155","nameLocations":["528:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"528:7:13"},"id":3109,"nodeType":"InheritanceSpecifier","src":"528:7:13"},{"arguments":[{"expression":{"id":3111,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"545:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"549:6:13","memberName":"sender","nodeType":"MemberAccess","src":"545:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"baseName":{"id":3110,"name":"Ownable","nameLocations":["537:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"537:7:13"},"id":3113,"nodeType":"InheritanceSpecifier","src":"537:19:13"},{"baseName":{"id":3114,"name":"ERC1155Supply","nameLocations":["558:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1672,"src":"558:13:13"},"id":3115,"nodeType":"InheritanceSpecifier","src":"558:13:13"}],"canonicalName":"AVAXGods","contractDependencies":[],"contractKind":"contract","documentation":{"id":3107,"nodeType":"StructuredDocumentation","src":"258:247:13","text":"@title AVAXGods\n @notice This contract handles the token management and battle logic for the AVAXGods game\n @notice Version 1.0.0\n @author Ava-Labs\n @author Julian Martinez\n @author Gabriel Cardona\n @author Raj Ranjan"},"fullyImplemented":true,"id":5078,"linearizedBaseContracts":[5078,1672,147,1335,284,1688,1458,2035,2047,1901],"name":"AVAXGods","nameLocation":"516:8:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"6c0360eb","id":3117,"mutability":"mutable","name":"baseURI","nameLocation":"593:7:13","nodeType":"VariableDeclaration","scope":5078,"src":"579:21:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3116,"name":"string","nodeType":"ElementaryTypeName","src":"579:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"579b526d","id":3119,"mutability":"mutable","name":"totalTokenMinted","nameLocation":"664:16:13","nodeType":"VariableDeclaration","scope":5078,"src":"649:31:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"649:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"d2198cc5","id":3122,"mutability":"constant","name":"DEVIL","nameLocation":"744:5:13","nodeType":"VariableDeclaration","scope":5078,"src":"720:33:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":true,"functionSelector":"de96cefc","id":3125,"mutability":"constant","name":"GRIFFIN","nameLocation":"784:7:13","nodeType":"VariableDeclaration","scope":5078,"src":"760:35:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"794:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"703730a5","id":3128,"mutability":"constant","name":"FIREBIRD","nameLocation":"826:8:13","nodeType":"VariableDeclaration","scope":5078,"src":"802:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"0677aa4e","id":3131,"mutability":"constant","name":"KAMO","nameLocation":"869:4:13","nodeType":"VariableDeclaration","scope":5078,"src":"845:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3129,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"876:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":true,"functionSelector":"f1da7339","id":3134,"mutability":"constant","name":"KUKULKAN","nameLocation":"908:8:13","nodeType":"VariableDeclaration","scope":5078,"src":"884:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3132,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"34","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"919:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"public"},{"constant":true,"functionSelector":"9e4ecd11","id":3137,"mutability":"constant","name":"CELESTION","nameLocation":"951:9:13","nodeType":"VariableDeclaration","scope":5078,"src":"927:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"927:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"963:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"0daea2cd","id":3140,"mutability":"constant","name":"MAX_ATTACK_DEFEND_STRENGTH","nameLocation":"995:26:13","nodeType":"VariableDeclaration","scope":5078,"src":"971:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1024:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"f71d96cb","id":3144,"mutability":"mutable","name":"players","nameLocation":"1051:7:13","nodeType":"VariableDeclaration","scope":5078,"src":"1035:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player[]"},"typeName":{"baseType":{"id":3142,"nodeType":"UserDefinedTypeName","pathNode":{"id":3141,"name":"Player","nameLocations":["1035:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3216,"src":"1035:6:13"},"referencedDeclaration":3216,"src":"1035:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage_ptr","typeString":"struct AVAXGods.Player"}},"id":3143,"nodeType":"ArrayTypeName","src":"1035:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage_ptr","typeString":"struct AVAXGods.Player[]"}},"visibility":"public"},{"constant":false,"functionSelector":"bf034b69","id":3148,"mutability":"mutable","name":"gameTokens","nameLocation":"1104:10:13","nodeType":"VariableDeclaration","scope":5078,"src":"1085:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken[]"},"typeName":{"baseType":{"id":3146,"nodeType":"UserDefinedTypeName","pathNode":{"id":3145,"name":"GameToken","nameLocations":["1085:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3200,"src":"1085:9:13"},"referencedDeclaration":3200,"src":"1085:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage_ptr","typeString":"struct AVAXGods.GameToken"}},"id":3147,"nodeType":"ArrayTypeName","src":"1085:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage_ptr","typeString":"struct AVAXGods.GameToken[]"}},"visibility":"public"},{"constant":false,"functionSelector":"606d2e96","id":3152,"mutability":"mutable","name":"battles","nameLocation":"1161:7:13","nodeType":"VariableDeclaration","scope":5078,"src":"1145:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage","typeString":"struct AVAXGods.Battle[]"},"typeName":{"baseType":{"id":3150,"nodeType":"UserDefinedTypeName","pathNode":{"id":3149,"name":"Battle","nameLocations":["1145:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"1145:6:13"},"referencedDeclaration":3240,"src":"1145:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"id":3151,"nodeType":"ArrayTypeName","src":"1145:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage_ptr","typeString":"struct AVAXGods.Battle[]"}},"visibility":"public"},{"baseFunctions":[750,1671],"body":{"id":3182,"nodeType":"Block","src":"1364:236:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3168,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"1478:3:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1482:6:13","memberName":"length","nodeType":"MemberAccess","src":"1478:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3170,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"1492:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1499:6:13","memberName":"length","nodeType":"MemberAccess","src":"1492:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1478:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3181,"nodeType":"IfStatement","src":"1474:119:13","trueBody":{"id":3180,"nodeType":"Block","src":"1507:86:13","statements":[{"errorCall":{"arguments":[{"expression":{"id":3174,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"1555:3:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:6:13","memberName":"length","nodeType":"MemberAccess","src":"1555:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3176,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"1567:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1574:6:13","memberName":"length","nodeType":"MemberAccess","src":"1567:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3173,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1529:25:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1529:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3179,"nodeType":"RevertStatement","src":"1522:59:13"}]}}]},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"1206:7:13","nodeType":"FunctionDefinition","overrides":{"id":3166,"nodeType":"OverrideSpecifier","overrides":[{"id":3164,"name":"ERC1155","nameLocations":["1340:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"1340:7:13"},{"id":3165,"name":"ERC1155Supply","nameLocations":["1349:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":1672,"src":"1349:13:13"}],"src":"1331:32:13"},"parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3183,"src":"1224:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3153,"name":"address","nodeType":"ElementaryTypeName","src":"1224:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3183,"src":"1242:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3155,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"ids","nameLocation":"1277:3:13","nodeType":"VariableDeclaration","scope":3183,"src":"1260:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1260:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3158,"nodeType":"ArrayTypeName","src":"1260:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"values","nameLocation":"1308:6:13","nodeType":"VariableDeclaration","scope":3183,"src":"1291:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3161,"nodeType":"ArrayTypeName","src":"1291:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1213:108:13"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[],"src":"1364:0:13"},"scope":5078,"src":"1197:403:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"AVAXGods.BattleStatus","id":3187,"members":[{"id":3184,"name":"PENDING","nameLocation":"1637:7:13","nodeType":"EnumValue","src":"1637:7:13"},{"id":3185,"name":"STARTED","nameLocation":"1655:7:13","nodeType":"EnumValue","src":"1655:7:13"},{"id":3186,"name":"ENDED","nameLocation":"1673:5:13","nodeType":"EnumValue","src":"1673:5:13"}],"name":"BattleStatus","nameLocation":"1613:12:13","nodeType":"EnumDefinition","src":"1608:77:13"},{"canonicalName":"AVAXGods.GameToken","documentation":{"id":3188,"nodeType":"StructuredDocumentation","src":"1693:52:13","text":"@dev GameToken struct to store player token info"},"id":3200,"members":[{"constant":false,"id":3190,"mutability":"mutable","name":"name","nameLocation":"1786:4:13","nodeType":"VariableDeclaration","scope":3200,"src":"1779:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3189,"name":"string","nodeType":"ElementaryTypeName","src":"1779:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"id","nameLocation":"1857:2:13","nodeType":"VariableDeclaration","scope":3200,"src":"1849:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"1849:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"attackStrength","nameLocation":"1941:14:13","nodeType":"VariableDeclaration","scope":3200,"src":"1933:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1933:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"defenseStrength","nameLocation":"2039:15:13","nodeType":"VariableDeclaration","scope":3200,"src":"2031:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"GameToken","nameLocation":"1758:9:13","nodeType":"StructDefinition","scope":5078,"src":"1751:378:13","visibility":"public"},{"canonicalName":"AVAXGods.Player","documentation":{"id":3201,"nodeType":"StructuredDocumentation","src":"2137:43:13","text":"@dev Player struct to store player info"},"id":3216,"members":[{"constant":false,"id":3203,"mutability":"mutable","name":"playerAddress","nameLocation":"2219:13:13","nodeType":"VariableDeclaration","scope":3216,"src":"2211:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"playerName","nameLocation":"2297:10:13","nodeType":"VariableDeclaration","scope":3216,"src":"2290:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3205,"name":"string","nodeType":"ElementaryTypeName","src":"2290:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"playerMana","nameLocation":"2395:10:13","nodeType":"VariableDeclaration","scope":3216,"src":"2387:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2387:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"playerHealth","nameLocation":"2486:12:13","nodeType":"VariableDeclaration","scope":3216,"src":"2478:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"2478:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"inBattle","nameLocation":"2580:8:13","nodeType":"VariableDeclaration","scope":3216,"src":"2575:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3214,"name":"bool","nodeType":"ElementaryTypeName","src":"2575:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Player","nameLocation":"2193:6:13","nodeType":"StructDefinition","scope":5078,"src":"2186:475:13","visibility":"public"},{"canonicalName":"AVAXGods.Battle","documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"2669:43:13","text":"@dev Battle struct to store battle info"},"id":3240,"members":[{"constant":false,"id":3220,"mutability":"mutable","name":"battleStatus","nameLocation":"2756:12:13","nodeType":"VariableDeclaration","scope":3240,"src":"2743:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"},"typeName":{"id":3219,"nodeType":"UserDefinedTypeName","pathNode":{"id":3218,"name":"BattleStatus","nameLocations":["2743:12:13"],"nodeType":"IdentifierPath","referencedDeclaration":3187,"src":"2743:12:13"},"referencedDeclaration":3187,"src":"2743:12:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"battleHash","nameLocation":"2842:10:13","nodeType":"VariableDeclaration","scope":3240,"src":"2834:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2834:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"name","nameLocation":"2918:4:13","nodeType":"VariableDeclaration","scope":3240,"src":"2911:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3225,"name":"string","nodeType":"ElementaryTypeName","src":"2911:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"players","nameLocation":"3006:7:13","nodeType":"VariableDeclaration","scope":3240,"src":"2995:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage_ptr","typeString":"address[2]"},"typeName":{"baseType":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"2995:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3230,"length":{"hexValue":"32","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3003:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"2995:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage_ptr","typeString":"address[2]"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"moves","nameLocation":"3102:5:13","nodeType":"VariableDeclaration","scope":3240,"src":"3093:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage_ptr","typeString":"uint8[2]"},"typeName":{"baseType":{"id":3233,"name":"uint8","nodeType":"ElementaryTypeName","src":"3093:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3235,"length":{"hexValue":"32","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"3093:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage_ptr","typeString":"uint8[2]"}},"visibility":"internal"},{"constant":false,"id":3239,"mutability":"mutable","name":"winner","nameLocation":"3181:6:13","nodeType":"VariableDeclaration","scope":3240,"src":"3173:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3238,"name":"address","nodeType":"ElementaryTypeName","src":"3173:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Battle","nameLocation":"2725:6:13","nodeType":"StructDefinition","scope":5078,"src":"2718:510:13","visibility":"public"},{"constant":false,"id":3244,"mutability":"mutable","name":"playerInfo","nameLocation":"3264:10:13","nodeType":"VariableDeclaration","scope":5078,"src":"3236:38:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3243,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"3244:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3236:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"3255:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"playerTokenInfo","nameLocation":"3377:15:13","nodeType":"VariableDeclaration","scope":5078,"src":"3349:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3247,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"3357:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3349:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"3368:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":3252,"mutability":"mutable","name":"battleInfo","nameLocation":"3503:10:13","nodeType":"VariableDeclaration","scope":5078,"src":"3476:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":3251,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3249,"name":"string","nodeType":"ElementaryTypeName","src":"3484:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"3476:26:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"3494:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"body":{"id":3271,"nodeType":"Block","src":"3644:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3259,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"3659:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3261,"indexExpression":{"id":3260,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"3670:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3659:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3679:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3659:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3269,"nodeType":"Block","src":"3727:38:13","statements":[{"expression":{"hexValue":"74727565","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3749:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3258,"id":3268,"nodeType":"Return","src":"3742:11:13"}]},"id":3270,"nodeType":"IfStatement","src":"3655:110:13","trueBody":{"id":3266,"nodeType":"Block","src":"3682:39:13","statements":[{"expression":{"hexValue":"66616c7365","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3704:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3258,"id":3265,"nodeType":"Return","src":"3697:12:13"}]}}]},"functionSelector":"09c95e10","id":3272,"implemented":true,"kind":"function","modifiers":[],"name":"isPlayer","nameLocation":"3594:8:13","nodeType":"FunctionDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"addr","nameLocation":"3611:4:13","nodeType":"VariableDeclaration","scope":3272,"src":"3603:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3253,"name":"address","nodeType":"ElementaryTypeName","src":"3603:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3602:14:13"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3272,"src":"3638:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3256,"name":"bool","nodeType":"ElementaryTypeName","src":"3638:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3637:6:13"},"scope":5078,"src":"3585:187:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3293,"nodeType":"Block","src":"3849:110:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3282,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"3877:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3281,"name":"isPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"3868:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3868:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6179657220646f65736e277420657869737421","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3884:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff9305937fe6b73985947bb7cd0d930b9793bf4de90033b3e323126ffba4737c","typeString":"literal_string \"Player doesn't exist!\""},"value":"Player doesn't exist!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff9305937fe6b73985947bb7cd0d930b9793bf4de90033b3e323126ffba4737c","typeString":"literal_string \"Player doesn't exist!\""}],"id":3280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3860:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3286,"nodeType":"ExpressionStatement","src":"3860:48:13"},{"expression":{"baseExpression":{"id":3287,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"3926:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":3291,"indexExpression":{"baseExpression":{"id":3288,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"3934:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3290,"indexExpression":{"id":3289,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"3945:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3934:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3926:25:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"functionReturnParameters":3279,"id":3292,"nodeType":"Return","src":"3919:32:13"}]},"functionSelector":"5c12cd4b","id":3294,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayer","nameLocation":"3789:9:13","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"addr","nameLocation":"3807:4:13","nodeType":"VariableDeclaration","scope":3294,"src":"3799:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3273,"name":"address","nodeType":"ElementaryTypeName","src":"3799:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3798:14:13"},"returnParameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3294,"src":"3834:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player"},"typeName":{"id":3277,"nodeType":"UserDefinedTypeName","pathNode":{"id":3276,"name":"Player","nameLocations":["3834:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3216,"src":"3834:6:13"},"referencedDeclaration":3216,"src":"3834:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage_ptr","typeString":"struct AVAXGods.Player"}},"visibility":"internal"}],"src":"3833:15:13"},"scope":5078,"src":"3780:179:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3303,"nodeType":"Block","src":"4030:33:13","statements":[{"expression":{"id":3301,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"4048:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"functionReturnParameters":3300,"id":3302,"nodeType":"Return","src":"4041:14:13"}]},"functionSelector":"efa1c482","id":3304,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPlayers","nameLocation":"3976:13:13","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[],"src":"3989:2:13"},"returnParameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3304,"src":"4013:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_memory_ptr_$dyn_memory_ptr","typeString":"struct AVAXGods.Player[]"},"typeName":{"baseType":{"id":3297,"nodeType":"UserDefinedTypeName","pathNode":{"id":3296,"name":"Player","nameLocations":["4013:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3216,"src":"4013:6:13"},"referencedDeclaration":3216,"src":"4013:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage_ptr","typeString":"struct AVAXGods.Player"}},"id":3298,"nodeType":"ArrayTypeName","src":"4013:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage_ptr","typeString":"struct AVAXGods.Player[]"}},"visibility":"internal"}],"src":"4012:17:13"},"scope":5078,"src":"3967:96:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3323,"nodeType":"Block","src":"4135:133:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3311,"name":"playerTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"4150:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3313,"indexExpression":{"id":3312,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"4166:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4175:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4150:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3321,"nodeType":"Block","src":"4223:38:13","statements":[{"expression":{"hexValue":"74727565","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4245:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3310,"id":3320,"nodeType":"Return","src":"4238:11:13"}]},"id":3322,"nodeType":"IfStatement","src":"4146:115:13","trueBody":{"id":3318,"nodeType":"Block","src":"4178:39:13","statements":[{"expression":{"hexValue":"66616c7365","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4200:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3310,"id":3317,"nodeType":"Return","src":"4193:12:13"}]}}]},"functionSelector":"bf103a4d","id":3324,"implemented":true,"kind":"function","modifiers":[],"name":"isPlayerToken","nameLocation":"4080:13:13","nodeType":"FunctionDefinition","parameters":{"id":3307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3306,"mutability":"mutable","name":"addr","nameLocation":"4102:4:13","nodeType":"VariableDeclaration","scope":3324,"src":"4094:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3305,"name":"address","nodeType":"ElementaryTypeName","src":"4094:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4093:14:13"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3324,"src":"4129:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3308,"name":"bool","nodeType":"ElementaryTypeName","src":"4129:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4128:6:13"},"scope":5078,"src":"4071:197:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3345,"nodeType":"Block","src":"4369:127:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3334,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"4402:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3333,"name":"isPlayerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"4388:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4388:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520746f6b656e20646f65736e277420657869737421","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4409:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d00cd20fda06a6f966e5cf744bc1f9f38f0a03b1437725965173ef9b035243d","typeString":"literal_string \"Game token doesn't exist!\""},"value":"Game token doesn't exist!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d00cd20fda06a6f966e5cf744bc1f9f38f0a03b1437725965173ef9b035243d","typeString":"literal_string \"Game token doesn't exist!\""}],"id":3332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4380:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4380:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3338,"nodeType":"ExpressionStatement","src":"4380:57:13"},{"expression":{"baseExpression":{"id":3339,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"4455:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"id":3343,"indexExpression":{"baseExpression":{"id":3340,"name":"playerTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"4466:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3342,"indexExpression":{"id":3341,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"4482:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4466:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4455:33:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage","typeString":"struct AVAXGods.GameToken storage ref"}},"functionReturnParameters":3331,"id":3344,"nodeType":"Return","src":"4448:40:13"}]},"functionSelector":"10898e4c","id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerToken","nameLocation":"4285:14:13","nodeType":"FunctionDefinition","parameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"addr","nameLocation":"4318:4:13","nodeType":"VariableDeclaration","scope":3346,"src":"4310:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3325,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4299:30:13"},"returnParameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"4351:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken"},"typeName":{"id":3329,"nodeType":"UserDefinedTypeName","pathNode":{"id":3328,"name":"GameToken","nameLocations":["4351:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3200,"src":"4351:9:13"},"referencedDeclaration":3200,"src":"4351:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage_ptr","typeString":"struct AVAXGods.GameToken"}},"visibility":"internal"}],"src":"4350:18:13"},"scope":5078,"src":"4276:220:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3355,"nodeType":"Block","src":"4575:36:13","statements":[{"expression":{"id":3353,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"4593:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"functionReturnParameters":3352,"id":3354,"nodeType":"Return","src":"4586:17:13"}]},"functionSelector":"015a3792","id":3356,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPlayerTokens","nameLocation":"4513:18:13","nodeType":"FunctionDefinition","parameters":{"id":3347,"nodeType":"ParameterList","parameters":[],"src":"4531:2:13"},"returnParameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3356,"src":"4555:18:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_memory_ptr_$dyn_memory_ptr","typeString":"struct AVAXGods.GameToken[]"},"typeName":{"baseType":{"id":3349,"nodeType":"UserDefinedTypeName","pathNode":{"id":3348,"name":"GameToken","nameLocations":["4555:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3200,"src":"4555:9:13"},"referencedDeclaration":3200,"src":"4555:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage_ptr","typeString":"struct AVAXGods.GameToken"}},"id":3350,"nodeType":"ArrayTypeName","src":"4555:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage_ptr","typeString":"struct AVAXGods.GameToken[]"}},"visibility":"internal"}],"src":"4554:20:13"},"scope":5078,"src":"4504:107:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3375,"nodeType":"Block","src":"4716:129:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3363,"name":"battleInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"4731:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3365,"indexExpression":{"id":3364,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4742:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4731:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4752:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4731:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3373,"nodeType":"Block","src":"4800:38:13","statements":[{"expression":{"hexValue":"74727565","id":3371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4822:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3362,"id":3372,"nodeType":"Return","src":"4815:11:13"}]},"id":3374,"nodeType":"IfStatement","src":"4727:111:13","trueBody":{"id":3370,"nodeType":"Block","src":"4755:39:13","statements":[{"expression":{"hexValue":"66616c7365","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4777:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3362,"id":3369,"nodeType":"Return","src":"4770:12:13"}]}}]},"functionSelector":"1107ae3d","id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"isBattle","nameLocation":"4659:8:13","nodeType":"FunctionDefinition","parameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3358,"mutability":"mutable","name":"_name","nameLocation":"4682:5:13","nodeType":"VariableDeclaration","scope":3376,"src":"4668:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3357,"name":"string","nodeType":"ElementaryTypeName","src":"4668:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4667:21:13"},"returnParameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3376,"src":"4710:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3360,"name":"bool","nodeType":"ElementaryTypeName","src":"4710:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4709:6:13"},"scope":5078,"src":"4650:195:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3397,"nodeType":"Block","src":"4945:112:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3386,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"4973:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3385,"name":"isBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"4964:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory) view returns (bool)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4964:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c6520646f65736e277420657869737421","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4981:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af541d4f558ea46a38579c9b5be3cf3146d54424e1d6cc8da1d9c09f90f85b1","typeString":"literal_string \"Battle doesn't exist!\""},"value":"Battle doesn't exist!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9af541d4f558ea46a38579c9b5be3cf3146d54424e1d6cc8da1d9c09f90f85b1","typeString":"literal_string \"Battle doesn't exist!\""}],"id":3384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4956:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4956:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3390,"nodeType":"ExpressionStatement","src":"4956:49:13"},{"expression":{"baseExpression":{"id":3391,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"5023:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage","typeString":"struct AVAXGods.Battle storage ref[] storage ref"}},"id":3395,"indexExpression":{"baseExpression":{"id":3392,"name":"battleInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"5031:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3394,"indexExpression":{"id":3393,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"5042:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5031:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5023:26:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage","typeString":"struct AVAXGods.Battle storage ref"}},"functionReturnParameters":3383,"id":3396,"nodeType":"Return","src":"5016:33:13"}]},"functionSelector":"16801d17","id":3398,"implemented":true,"kind":"function","modifiers":[],"name":"getBattle","nameLocation":"4862:9:13","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"_name","nameLocation":"4896:5:13","nodeType":"VariableDeclaration","scope":3398,"src":"4882:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3377,"name":"string","nodeType":"ElementaryTypeName","src":"4882:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4871:37:13"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3398,"src":"4930:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":3381,"nodeType":"UserDefinedTypeName","pathNode":{"id":3380,"name":"Battle","nameLocations":["4930:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"4930:6:13"},"referencedDeclaration":3240,"src":"4930:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"src":"4929:15:13"},"scope":5078,"src":"4853:204:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3407,"nodeType":"Block","src":"5128:33:13","statements":[{"expression":{"id":3405,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"5146:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage","typeString":"struct AVAXGods.Battle storage ref[] storage ref"}},"functionReturnParameters":3404,"id":3406,"nodeType":"Return","src":"5139:14:13"}]},"functionSelector":"5c93fc3d","id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"getAllBattles","nameLocation":"5074:13:13","nodeType":"FunctionDefinition","parameters":{"id":3399,"nodeType":"ParameterList","parameters":[],"src":"5087:2:13"},"returnParameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3408,"src":"5111:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_memory_ptr_$dyn_memory_ptr","typeString":"struct AVAXGods.Battle[]"},"typeName":{"baseType":{"id":3401,"nodeType":"UserDefinedTypeName","pathNode":{"id":3400,"name":"Battle","nameLocations":["5111:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"5111:6:13"},"referencedDeclaration":3240,"src":"5111:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"id":3402,"nodeType":"ArrayTypeName","src":"5111:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage_ptr","typeString":"struct AVAXGods.Battle[]"}},"visibility":"internal"}],"src":"5110:17:13"},"scope":5078,"src":"5065:96:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3431,"nodeType":"Block","src":"5271:117:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":3418,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"5299:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3417,"name":"isBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"5290:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory) view returns (bool)"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c6520646f65736e2774206578697374","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5307:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d69f77a5cade5be81daa13a0eaa6a18f0b91282fc090d9eca89180c57631cbf","typeString":"literal_string \"Battle doesn't exist\""},"value":"Battle doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d69f77a5cade5be81daa13a0eaa6a18f0b91282fc090d9eca89180c57631cbf","typeString":"literal_string \"Battle doesn't exist\""}],"id":3416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5282:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3422,"nodeType":"ExpressionStatement","src":"5282:48:13"},{"expression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3423,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"5341:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage","typeString":"struct AVAXGods.Battle storage ref[] storage ref"}},"id":3427,"indexExpression":{"baseExpression":{"id":3424,"name":"battleInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"5349:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3426,"indexExpression":{"id":3425,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"5360:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5349:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5341:26:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage","typeString":"struct AVAXGods.Battle storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3428,"name":"_newBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"5370:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"src":"5341:39:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage","typeString":"struct AVAXGods.Battle storage ref"}},"id":3430,"nodeType":"ExpressionStatement","src":"5341:39:13"}]},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"updateBattle","nameLocation":"5178:12:13","nodeType":"FunctionDefinition","parameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3410,"mutability":"mutable","name":"_name","nameLocation":"5215:5:13","nodeType":"VariableDeclaration","scope":3432,"src":"5201:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3409,"name":"string","nodeType":"ElementaryTypeName","src":"5201:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3413,"mutability":"mutable","name":"_newBattle","nameLocation":"5245:10:13","nodeType":"VariableDeclaration","scope":3432,"src":"5231:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":3412,"nodeType":"UserDefinedTypeName","pathNode":{"id":3411,"name":"Battle","nameLocations":["5231:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"5231:6:13"},"referencedDeclaration":3240,"src":"5231:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"src":"5190:72:13"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[],"src":"5271:0:13"},"scope":5078,"src":"5169:219:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"anonymous":false,"eventSelector":"81ef79d1cda814a60c0fc60792e648a06d9c6bae67176346d1cc8b63030bfccd","id":3438,"name":"NewPlayer","nameLocation":"5417:9:13","nodeType":"EventDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"5443:5:13","nodeType":"VariableDeclaration","scope":3438,"src":"5427:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3433,"name":"address","nodeType":"ElementaryTypeName","src":"5427:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3436,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"5457:4:13","nodeType":"VariableDeclaration","scope":3438,"src":"5450:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3435,"name":"string","nodeType":"ElementaryTypeName","src":"5450:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5426:36:13"},"src":"5411:52:13"},{"anonymous":false,"eventSelector":"024187b16c217a79f8d8e6252b542ec6e278fa91304acd9cfd866f2bbf00bd08","id":3446,"name":"NewBattle","nameLocation":"5475:9:13","nodeType":"EventDefinition","parameters":{"id":3445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"indexed":false,"mutability":"mutable","name":"battleName","nameLocation":"5502:10:13","nodeType":"VariableDeclaration","scope":3446,"src":"5495:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3439,"name":"string","nodeType":"ElementaryTypeName","src":"5495:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3442,"indexed":true,"mutability":"mutable","name":"player1","nameLocation":"5539:7:13","nodeType":"VariableDeclaration","scope":3446,"src":"5523:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3441,"name":"address","nodeType":"ElementaryTypeName","src":"5523:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3444,"indexed":true,"mutability":"mutable","name":"player2","nameLocation":"5573:7:13","nodeType":"VariableDeclaration","scope":3446,"src":"5557:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3443,"name":"address","nodeType":"ElementaryTypeName","src":"5557:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5484:103:13"},"src":"5469:119:13"},{"anonymous":false,"eventSelector":"ae6e5eafb6cd1cb4b139e7a0b9140aa182ee7d50e99f50d660156f79212acbc0","id":3454,"name":"BattleEnded","nameLocation":"5600:11:13","nodeType":"EventDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"indexed":false,"mutability":"mutable","name":"battleName","nameLocation":"5629:10:13","nodeType":"VariableDeclaration","scope":3454,"src":"5622:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3447,"name":"string","nodeType":"ElementaryTypeName","src":"5622:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3450,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"5666:6:13","nodeType":"VariableDeclaration","scope":3454,"src":"5650:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3449,"name":"address","nodeType":"ElementaryTypeName","src":"5650:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3452,"indexed":true,"mutability":"mutable","name":"loser","nameLocation":"5699:5:13","nodeType":"VariableDeclaration","scope":3454,"src":"5683:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3451,"name":"address","nodeType":"ElementaryTypeName","src":"5683:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5611:100:13"},"src":"5594:118:13"},{"anonymous":false,"eventSelector":"54b82b77e7ae55a8e6c9e89deba70c7191dea2a3b08ae647b380e9f981d6a0f8","id":3460,"name":"BattleMove","nameLocation":"5724:10:13","nodeType":"EventDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"indexed":true,"mutability":"mutable","name":"battleName","nameLocation":"5750:10:13","nodeType":"VariableDeclaration","scope":3460,"src":"5735:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3455,"name":"string","nodeType":"ElementaryTypeName","src":"5735:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3458,"indexed":true,"mutability":"mutable","name":"isFirstMove","nameLocation":"5775:11:13","nodeType":"VariableDeclaration","scope":3460,"src":"5762:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3457,"name":"bool","nodeType":"ElementaryTypeName","src":"5762:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5734:53:13"},"src":"5718:70:13"},{"anonymous":false,"eventSelector":"ca8ab07e9ed17d119729fc652dd24df9d8430ca862dda4631925b5b4b99da362","id":3470,"name":"NewGameToken","nameLocation":"5800:12:13","nodeType":"EventDefinition","parameters":{"id":3469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"5839:5:13","nodeType":"VariableDeclaration","scope":3470,"src":"5823:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3461,"name":"address","nodeType":"ElementaryTypeName","src":"5823:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3464,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"5863:2:13","nodeType":"VariableDeclaration","scope":3470,"src":"5855:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"5855:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3466,"indexed":false,"mutability":"mutable","name":"attackStrength","nameLocation":"5884:14:13","nodeType":"VariableDeclaration","scope":3470,"src":"5876:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"5876:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3468,"indexed":false,"mutability":"mutable","name":"defenseStrength","nameLocation":"5917:15:13","nodeType":"VariableDeclaration","scope":3470,"src":"5909:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"5909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:127:13"},"src":"5794:146:13"},{"anonymous":false,"eventSelector":"c6bf860cbc15f7020f73993a671f01bbb1831a8a7a12c126ca735eb632e75775","id":3476,"name":"RoundEnded","nameLocation":"5952:10:13","nodeType":"EventDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"indexed":false,"mutability":"mutable","name":"damagedPlayers","nameLocation":"5974:14:13","nodeType":"VariableDeclaration","scope":3476,"src":"5963:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2]"},"typeName":{"baseType":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"5963:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3473,"length":{"hexValue":"32","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5971:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"5963:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage_ptr","typeString":"address[2]"}},"visibility":"internal"}],"src":"5962:27:13"},"src":"5946:44:13"},{"body":{"id":3492,"nodeType":"Block","src":"6218:79:13","statements":[{"expression":{"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3485,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3486,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"6239:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6229:22:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3488,"nodeType":"ExpressionStatement","src":"6229:22:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3489,"name":"initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"6277:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3491,"nodeType":"ExpressionStatement","src":"6277:12:13"}]},"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"5998:152:13","text":"@dev Initializes the contract by setting a `metadataURI` to the token collection\n @param _metadataURI baseURI where token metadata is stored"},"id":3493,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3482,"name":"_metadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"6204:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":3483,"kind":"baseConstructorSpecifier","modifierName":{"id":3481,"name":"ERC1155","nameLocations":["6196:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":1335,"src":"6196:7:13"},"nodeType":"ModifierInvocation","src":"6196:21:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"_metadataURI","nameLocation":"6182:12:13","nodeType":"VariableDeclaration","scope":3493,"src":"6168:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3478,"name":"string","nodeType":"ElementaryTypeName","src":"6168:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6167:28:13"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[],"src":"6218:0:13"},"scope":5078,"src":"6156:141:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3504,"nodeType":"Block","src":"6360:34:13","statements":[{"expression":{"arguments":[{"id":3501,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"6379:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3500,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"6371:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6371:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3503,"nodeType":"ExpressionStatement","src":"6371:15:13"}]},"functionSelector":"02fe5305","id":3505,"implemented":true,"kind":"function","modifiers":[{"id":3498,"kind":"modifierInvocation","modifierName":{"id":3497,"name":"onlyOwner","nameLocations":["6350:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"6350:9:13"},"nodeType":"ModifierInvocation","src":"6350:9:13"}],"name":"setURI","nameLocation":"6314:6:13","nodeType":"FunctionDefinition","parameters":{"id":3496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"newuri","nameLocation":"6335:6:13","nodeType":"VariableDeclaration","scope":3505,"src":"6321:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3494,"name":"string","nodeType":"ElementaryTypeName","src":"6321:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6320:22:13"},"returnParameters":{"id":3499,"nodeType":"ParameterList","parameters":[],"src":"6360:0:13"},"scope":5078,"src":"6305:89:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3564,"nodeType":"Block","src":"6432:374:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6469:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"30","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6473:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6476:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6479:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3511,"name":"GameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"6459:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GameToken_$3200_storage_ptr_$","typeString":"type(struct AVAXGods.GameToken storage pointer)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6459:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}],"expression":{"id":3508,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"6443:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6454:4:13","memberName":"push","nodeType":"MemberAccess","src":"6443:15:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage_ptr_$_t_struct$_GameToken_$3200_storage_$returns$__$attached_to$_t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage_ptr_$","typeString":"function (struct AVAXGods.GameToken storage ref[] storage pointer,struct AVAXGods.GameToken storage ref)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6443:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3518,"nodeType":"ExpressionStatement","src":"6443:39:13"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":3525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6521:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6513:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3523,"name":"address","nodeType":"ElementaryTypeName","src":"6513:7:13","typeDescriptions":{}}},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6525:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"30","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6529:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6532:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6535:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3522,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"6506:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3216_storage_ptr_$","typeString":"type(struct AVAXGods.Player storage pointer)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6506:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}],"expression":{"id":3519,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"6493:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6501:4:13","memberName":"push","nodeType":"MemberAccess","src":"6493:12:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Player_$3216_storage_$dyn_storage_ptr_$_t_struct$_Player_$3216_storage_$returns$__$attached_to$_t_array$_t_struct$_Player_$3216_storage_$dyn_storage_ptr_$","typeString":"function (struct AVAXGods.Player storage ref[] storage pointer,struct AVAXGods.Player storage ref)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3533,"nodeType":"ExpressionStatement","src":"6493:49:13"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3538,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"6605:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$3187_$","typeString":"type(enum AVAXGods.BattleStatus)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6618:7:13","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":3184,"src":"6605:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},{"arguments":[{"hexValue":"30","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6652:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6644:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6644:7:13","typeDescriptions":{}}},"id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6644:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6673:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"components":[{"arguments":[{"hexValue":"30","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6703:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6695:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3545,"name":"address","nodeType":"ElementaryTypeName","src":"6695:7:13","typeDescriptions":{}}},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6695:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6715:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6707:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3549,"name":"address","nodeType":"ElementaryTypeName","src":"6707:7:13","typeDescriptions":{}}},"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6707:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3553,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6694:24:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},{"components":[{"hexValue":"30","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6738:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6741:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3556,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6737:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},{"arguments":[{"hexValue":"30","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6770:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6762:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3557,"name":"address","nodeType":"ElementaryTypeName","src":"6762:7:13","typeDescriptions":{}}},"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"},{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3537,"name":"Battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"6580:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Battle_$3240_storage_ptr_$","typeString":"type(struct AVAXGods.Battle storage pointer)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6580:207:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"expression":{"id":3534,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"6553:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage","typeString":"struct AVAXGods.Battle storage ref[] storage ref"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6561:4:13","memberName":"push","nodeType":"MemberAccess","src":"6553:12:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Battle_$3240_storage_$dyn_storage_ptr_$_t_struct$_Battle_$3240_storage_$returns$__$attached_to$_t_array$_t_struct$_Battle_$3240_storage_$dyn_storage_ptr_$","typeString":"function (struct AVAXGods.Battle storage ref[] storage pointer,struct AVAXGods.Battle storage ref)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:245:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3563,"nodeType":"ExpressionStatement","src":"6553:245:13"}]},"id":3565,"implemented":true,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"6411:10:13","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[],"src":"6421:2:13"},"returnParameters":{"id":3507,"nodeType":"ParameterList","parameters":[],"src":"6432:0:13"},"scope":5078,"src":"6402:404:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3617,"nodeType":"Block","src":"7005:456:13","statements":[{"expression":{"arguments":[{"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7024:21:13","subExpression":{"arguments":[{"expression":{"id":3575,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7034:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7038:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7034:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3574,"name":"isPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"7025:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6179657220616c72656164792072656769737465726564","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7047:27:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_70f1cfebae2ae9cdfaf3b6109562232e820db7d7b7873f09fe0674c3aa6b7df8","typeString":"literal_string \"Player already registered\""},"value":"Player already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70f1cfebae2ae9cdfaf3b6109562232e820db7d7b7873f09fe0674c3aa6b7df8","typeString":"literal_string \"Player already registered\""}],"id":3573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7016:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7016:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3581,"nodeType":"ExpressionStatement","src":"7016:59:13"},{"assignments":[3583],"declarations":[{"constant":false,"id":3583,"mutability":"mutable","name":"_id","nameLocation":"7145:3:13","nodeType":"VariableDeclaration","scope":3617,"src":"7137:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3586,"initialValue":{"expression":{"id":3584,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"7151:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7159:6:13","memberName":"length","nodeType":"MemberAccess","src":"7151:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7137:28:13"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3591,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7196:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7200:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7196:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3593,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"7208:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"3130","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7215:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"3235","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7219:2:13","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},{"hexValue":"66616c7365","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7223:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3590,"name":"Player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7189:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Player_$3216_storage_ptr_$","typeString":"type(struct AVAXGods.Player storage pointer)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}],"expression":{"id":3587,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"7176:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7184:4:13","memberName":"push","nodeType":"MemberAccess","src":"7176:12:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Player_$3216_storage_$dyn_storage_ptr_$_t_struct$_Player_$3216_storage_$returns$__$attached_to$_t_array$_t_struct$_Player_$3216_storage_$dyn_storage_ptr_$","typeString":"function (struct AVAXGods.Player storage ref[] storage pointer,struct AVAXGods.Player storage ref)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7176:54:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3599,"nodeType":"ExpressionStatement","src":"7176:54:13"},{"expression":{"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3600,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"7273:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3603,"indexExpression":{"expression":{"id":3601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7284:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7288:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7284:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7273:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3604,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"7298:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7273:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ExpressionStatement","src":"7273:28:13"},{"expression":{"arguments":[{"id":3608,"name":"_gameTokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"7367:14:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3607,"name":"createRandomGameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"7345:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7345:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3610,"nodeType":"ExpressionStatement","src":"7345:37:13"},{"eventCall":{"arguments":[{"expression":{"id":3612,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7410:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7414:6:13","memberName":"sender","nodeType":"MemberAccess","src":"7410:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3614,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"7422:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3611,"name":"NewPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"7400:9:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3616,"nodeType":"EmitStatement","src":"7395:33:13"}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"6814:76:13","text":"@dev Registers a player\n @param _name player name; set by player"},"functionSelector":"845f433b","id":3618,"implemented":true,"kind":"function","modifiers":[],"name":"registerPlayer","nameLocation":"6905:14:13","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"_name","nameLocation":"6944:5:13","nodeType":"VariableDeclaration","scope":3618,"src":"6930:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3567,"name":"string","nodeType":"ElementaryTypeName","src":"6930:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"_gameTokenName","nameLocation":"6974:14:13","nodeType":"VariableDeclaration","scope":3618,"src":"6960:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3569,"name":"string","nodeType":"ElementaryTypeName","src":"6960:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6919:76:13"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[],"src":"7005:0:13"},"scope":5078,"src":"6896:565:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3663,"nodeType":"Block","src":"7703:330:13","statements":[{"assignments":[3629],"declarations":[{"constant":false,"id":3629,"mutability":"mutable","name":"randomNum","nameLocation":"7722:9:13","nodeType":"VariableDeclaration","scope":3663,"src":"7714:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"7714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3643,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3635,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7801:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7807:10:13","memberName":"prevrandao","nodeType":"MemberAccess","src":"7801:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3637,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7819:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7825:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"7819:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3639,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7836:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3633,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7784:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7788:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"7784:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7784:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3632,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7756:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:103:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7734:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"7734:7:13","typeDescriptions":{}}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7734:136:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7714:156:13"},{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3644,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"7883:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"randomNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"7897:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3646,"name":"_max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"7909:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7897:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7883:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ExpressionStatement","src":"7883:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3650,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"7928:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7943:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7928:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"nodeType":"IfStatement","src":"7924:71:13","trueBody":{"id":3659,"nodeType":"Block","src":"7946:49:13","statements":[{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3653,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"7961:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"_max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"7975:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7982:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"7975:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7961:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3658,"nodeType":"ExpressionStatement","src":"7961:22:13"}]}},{"expression":{"id":3661,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"8014:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3627,"id":3662,"nodeType":"Return","src":"8007:18:13"}]},"documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"7469:102:13","text":"@dev internal function to generate random number; used for Battle Card Attack and Defense Strength"},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"_createRandomNum","nameLocation":"7586:16:13","nodeType":"FunctionDefinition","parameters":{"id":3624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"_max","nameLocation":"7621:4:13","nodeType":"VariableDeclaration","scope":3664,"src":"7613:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3620,"name":"uint256","nodeType":"ElementaryTypeName","src":"7613:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"_sender","nameLocation":"7644:7:13","nodeType":"VariableDeclaration","scope":3664,"src":"7636:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3622,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7602:56:13"},"returnParameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"randomValue","nameLocation":"7690:11:13","nodeType":"VariableDeclaration","scope":3664,"src":"7682:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"7682:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7681:21:13"},"scope":5078,"src":"7577:456:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3770,"nodeType":"Block","src":"8200:1043:13","statements":[{"assignments":[3674],"declarations":[{"constant":false,"id":3674,"mutability":"mutable","name":"randAttackStrength","nameLocation":"8219:18:13","nodeType":"VariableDeclaration","scope":3770,"src":"8211:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"8211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3680,"initialValue":{"arguments":[{"id":3676,"name":"MAX_ATTACK_DEFEND_STRENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"8271:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3677,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8312:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8316:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8312:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3675,"name":"_createRandomNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"8240:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8240:93:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8211:122:13"},{"assignments":[3682],"declarations":[{"constant":false,"id":3682,"mutability":"mutable","name":"randDefenseStrength","nameLocation":"8352:19:13","nodeType":"VariableDeclaration","scope":3770,"src":"8344:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"8344:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3686,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3683,"name":"MAX_ATTACK_DEFEND_STRENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"8374:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3684,"name":"randAttackStrength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"8416:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8374:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8344:90:13"},{"assignments":[3688],"declarations":[{"constant":false,"id":3688,"mutability":"mutable","name":"randId","nameLocation":"8453:6:13","nodeType":"VariableDeclaration","scope":3770,"src":"8447:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3687,"name":"uint8","nodeType":"ElementaryTypeName","src":"8447:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3706,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3696,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8517:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8523:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"8517:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3698,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8534:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8538:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8534:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3694,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8500:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8504:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"8500:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8500:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3693,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8490:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8482:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"8482:7:13","typeDescriptions":{}}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8482:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"313030","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8567:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"8482:88:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8462:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3689,"name":"uint8","nodeType":"ElementaryTypeName","src":"8462:5:13","typeDescriptions":{}}},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8462:119:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"8447:134:13"},{"expression":{"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3707,"name":"randId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"8592:6:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3708,"name":"randId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"8601:6:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"36","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8610:1:13","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"8601:10:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8592:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3712,"nodeType":"ExpressionStatement","src":"8592:19:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"randId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"8626:6:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8626:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3720,"nodeType":"IfStatement","src":"8622:52:13","trueBody":{"id":3719,"nodeType":"Block","src":"8639:35:13","statements":[{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8654:8:13","subExpression":{"id":3716,"name":"randId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"8654:6:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3718,"nodeType":"ExpressionStatement","src":"8654:8:13"}]}},{"assignments":[3723],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"newGameToken","nameLocation":"8703:12:13","nodeType":"VariableDeclaration","scope":3770,"src":"8686:29:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken"},"typeName":{"id":3722,"nodeType":"UserDefinedTypeName","pathNode":{"id":3721,"name":"GameToken","nameLocations":["8686:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3200,"src":"8686:9:13"},"referencedDeclaration":3200,"src":"8686:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage_ptr","typeString":"struct AVAXGods.GameToken"}},"visibility":"internal"}],"id":3730,"initialValue":{"arguments":[{"id":3725,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"8742:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3726,"name":"randId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"8762:6:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3727,"name":"randAttackStrength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"8783:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3728,"name":"randDefenseStrength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"8816:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3724,"name":"GameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"8718:9:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_GameToken_$3200_storage_ptr_$","typeString":"type(struct AVAXGods.GameToken storage pointer)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:128:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}},"nodeType":"VariableDeclarationStatement","src":"8686:160:13"},{"assignments":[3732],"declarations":[{"constant":false,"id":3732,"mutability":"mutable","name":"_id","nameLocation":"8867:3:13","nodeType":"VariableDeclaration","scope":3770,"src":"8859:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"8859:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3735,"initialValue":{"expression":{"id":3733,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"8873:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8884:6:13","memberName":"length","nodeType":"MemberAccess","src":"8873:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8859:31:13"},{"expression":{"arguments":[{"id":3739,"name":"newGameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"8917:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}],"expression":{"id":3736,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"8901:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8912:4:13","memberName":"push","nodeType":"MemberAccess","src":"8901:15:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage_ptr_$_t_struct$_GameToken_$3200_storage_$returns$__$attached_to$_t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage_ptr_$","typeString":"function (struct AVAXGods.GameToken storage ref[] storage pointer,struct AVAXGods.GameToken storage ref)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8901:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3741,"nodeType":"ExpressionStatement","src":"8901:29:13"},{"expression":{"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3742,"name":"playerTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"8941:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3745,"indexExpression":{"expression":{"id":3743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8957:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8961:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8957:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8941:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3746,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"8971:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8941:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3748,"nodeType":"ExpressionStatement","src":"8941:33:13"},{"expression":{"arguments":[{"expression":{"id":3750,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8993:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8997:6:13","memberName":"sender","nodeType":"MemberAccess","src":"8993:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3752,"name":"randId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9005:6:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"hexValue":"31","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9013:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"307830","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9016:5:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810","typeString":"literal_string \"0x0\""},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810","typeString":"literal_string \"0x0\""}],"id":3749,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"8987:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8987:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3756,"nodeType":"ExpressionStatement","src":"8987:35:13"},{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9033:18:13","subExpression":{"id":3757,"name":"totalTokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"9033:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"9033:18:13"},{"eventCall":{"arguments":[{"expression":{"id":3761,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9096:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9100:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9096:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3763,"name":"randId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"9121:6:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3764,"name":"randAttackStrength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"9142:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3765,"name":"randDefenseStrength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"9175:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3760,"name":"NewGameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"9069:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:136:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"EmitStatement","src":"9064:141:13"},{"expression":{"id":3768,"name":"newGameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"9223:12:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}},"functionReturnParameters":3672,"id":3769,"nodeType":"Return","src":"9216:19:13"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"8041:54:13","text":"@dev internal function to create a new Battle Card"},"id":3771,"implemented":true,"kind":"function","modifiers":[],"name":"_createGameToken","nameLocation":"8110:16:13","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"_name","nameLocation":"8151:5:13","nodeType":"VariableDeclaration","scope":3771,"src":"8137:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3666,"name":"string","nodeType":"ElementaryTypeName","src":"8137:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8126:37:13"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3771,"src":"8182:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken"},"typeName":{"id":3670,"nodeType":"UserDefinedTypeName","pathNode":{"id":3669,"name":"GameToken","nameLocations":["8182:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":3200,"src":"8182:9:13"},"referencedDeclaration":3200,"src":"8182:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage_ptr","typeString":"struct AVAXGods.GameToken"}},"visibility":"internal"}],"src":"8181:18:13"},"scope":5078,"src":"8101:1142:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3799,"nodeType":"Block","src":"9402:305:13","statements":[{"expression":{"arguments":[{"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9421:31:13","subExpression":{"expression":{"arguments":[{"expression":{"id":3779,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9432:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9436:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9432:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3778,"name":"getPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"9422:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Player_$3216_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.Player memory)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9422:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}},"id":3782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9444:8:13","memberName":"inBattle","nodeType":"MemberAccess","referencedDeclaration":3215,"src":"9422:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6179657220697320696e206120626174746c65","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9454:23:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f2a54fd496feb7d32af066d4f985e40333b397a8813cb8097a95d83436573803","typeString":"literal_string \"Player is in a battle\""},"value":"Player is in a battle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f2a54fd496feb7d32af066d4f985e40333b397a8813cb8097a95d83436573803","typeString":"literal_string \"Player is in a battle\""}],"id":3777,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9413:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9413:65:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3786,"nodeType":"ExpressionStatement","src":"9413:65:13"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9556:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9560:6:13","memberName":"sender","nodeType":"MemberAccess","src":"9556:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3788,"name":"isPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"9547:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9547:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6561736520526567697374657220506c61796572204669727374","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9569:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b9085d6f624bc37bc8ec0b3a10d1e194f3045ad79c4aa0f29737ea9df8c2140","typeString":"literal_string \"Please Register Player First\""},"value":"Please Register Player First"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b9085d6f624bc37bc8ec0b3a10d1e194f3045ad79c4aa0f29737ea9df8c2140","typeString":"literal_string \"Please Register Player First\""}],"id":3787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9539:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9539:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3794,"nodeType":"ExpressionStatement","src":"9539:61:13"},{"expression":{"arguments":[{"id":3796,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"9671:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3795,"name":"_createGameToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9654:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_struct$_GameToken_$3200_memory_ptr_$","typeString":"function (string memory) returns (struct AVAXGods.GameToken memory)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9654:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}},"id":3798,"nodeType":"ExpressionStatement","src":"9654:23:13"}]},"documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"9251:86:13","text":"@dev Creates a new game token\n @param _name game token name; set by player"},"functionSelector":"9ec40aa3","id":3800,"implemented":true,"kind":"function","modifiers":[],"name":"createRandomGameToken","nameLocation":"9352:21:13","nodeType":"FunctionDefinition","parameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"_name","nameLocation":"9388:5:13","nodeType":"VariableDeclaration","scope":3800,"src":"9374:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3773,"name":"string","nodeType":"ElementaryTypeName","src":"9374:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9373:21:13"},"returnParameters":{"id":3776,"nodeType":"ParameterList","parameters":[],"src":"9402:0:13"},"scope":5078,"src":"9343:364:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3807,"nodeType":"Block","src":"9773:42:13","statements":[{"expression":{"id":3805,"name":"totalTokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"9791:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3804,"id":3806,"nodeType":"Return","src":"9784:23:13"}]},"functionSelector":"c4e41b22","id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalSupply","nameLocation":"9724:14:13","nodeType":"FunctionDefinition","parameters":{"id":3801,"nodeType":"ParameterList","parameters":[],"src":"9738:2:13"},"returnParameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3808,"src":"9764:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3802,"name":"uint256","nodeType":"ElementaryTypeName","src":"9764:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9763:9:13"},"scope":5078,"src":"9715:100:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3885,"nodeType":"Block","src":"9999:824:13","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10027:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10031:6:13","memberName":"sender","nodeType":"MemberAccess","src":"10027:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3818,"name":"isPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"10018:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6561736520526567697374657220506c61796572204669727374","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10040:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b9085d6f624bc37bc8ec0b3a10d1e194f3045ad79c4aa0f29737ea9df8c2140","typeString":"literal_string \"Please Register Player First\""},"value":"Please Register Player First"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b9085d6f624bc37bc8ec0b3a10d1e194f3045ad79c4aa0f29737ea9df8c2140","typeString":"literal_string \"Please Register Player First\""}],"id":3817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10010:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10010:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3824,"nodeType":"ExpressionStatement","src":"10010:61:13"},{"expression":{"arguments":[{"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10131:16:13","subExpression":{"arguments":[{"id":3827,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"10141:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3826,"name":"isBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"10132:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory) view returns (bool)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10132:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c6520616c72656164792065786973747321","id":3830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10149:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_537f47ac3d747781d4b2722c88c89e2f04f3c6c83e5f77dcb29c99123a1721ae","typeString":"literal_string \"Battle already exists!\""},"value":"Battle already exists!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_537f47ac3d747781d4b2722c88c89e2f04f3c6c83e5f77dcb29c99123a1721ae","typeString":"literal_string \"Battle already exists!\""}],"id":3825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10123:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10123:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3832,"nodeType":"ExpressionStatement","src":"10123:51:13"},{"assignments":[3834],"declarations":[{"constant":false,"id":3834,"mutability":"mutable","name":"battleHash","nameLocation":"10245:10:13","nodeType":"VariableDeclaration","scope":3885,"src":"10237:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10237:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3841,"initialValue":{"arguments":[{"arguments":[{"id":3838,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"10279:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3836,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10268:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10272:6:13","memberName":"encode","nodeType":"MemberAccess","src":"10268:10:13","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10268:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3835,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10258:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10258:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10237:49:13"},{"assignments":[3844],"declarations":[{"constant":false,"id":3844,"mutability":"mutable","name":"_battle","nameLocation":"10313:7:13","nodeType":"VariableDeclaration","scope":3885,"src":"10299:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":3843,"nodeType":"UserDefinedTypeName","pathNode":{"id":3842,"name":"Battle","nameLocations":["10299:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"10299:6:13"},"referencedDeclaration":3240,"src":"10299:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"id":3865,"initialValue":{"arguments":[{"expression":{"id":3846,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"10344:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$3187_$","typeString":"type(enum AVAXGods.BattleStatus)"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10357:7:13","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":3184,"src":"10344:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},{"id":3848,"name":"battleHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3834,"src":"10397:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3849,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"10437:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"components":[{"expression":{"id":3850,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10473:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10477:6:13","memberName":"sender","nodeType":"MemberAccess","src":"10473:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10485:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3852,"name":"address","nodeType":"ElementaryTypeName","src":"10485:7:13","typeDescriptions":{}}},"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10485:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3856,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10472:24:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},{"components":[{"hexValue":"30","id":3857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10572:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3859,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10571:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},{"arguments":[{"hexValue":"30","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10625:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10617:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3860,"name":"address","nodeType":"ElementaryTypeName","src":"10617:7:13","typeDescriptions":{}}},"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10617:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"},{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3845,"name":"Battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"10323:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Battle_$3240_storage_ptr_$","typeString":"type(struct AVAXGods.Battle storage pointer)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10323:358:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"nodeType":"VariableDeclarationStatement","src":"10299:382:13"},{"assignments":[3867],"declarations":[{"constant":false,"id":3867,"mutability":"mutable","name":"_id","nameLocation":"10702:3:13","nodeType":"VariableDeclaration","scope":3885,"src":"10694:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"10694:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3870,"initialValue":{"expression":{"id":3868,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"10708:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage","typeString":"struct AVAXGods.Battle storage ref[] storage ref"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10716:6:13","memberName":"length","nodeType":"MemberAccess","src":"10708:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10694:28:13"},{"expression":{"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3871,"name":"battleInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"10733:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":3873,"indexExpression":{"id":3872,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"10744:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10733:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3874,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"10753:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10733:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3876,"nodeType":"ExpressionStatement","src":"10733:23:13"},{"expression":{"arguments":[{"id":3880,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"10780:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"expression":{"id":3877,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"10767:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage","typeString":"struct AVAXGods.Battle storage ref[] storage ref"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10775:4:13","memberName":"push","nodeType":"MemberAccess","src":"10767:12:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Battle_$3240_storage_$dyn_storage_ptr_$_t_struct$_Battle_$3240_storage_$returns$__$attached_to$_t_array$_t_struct$_Battle_$3240_storage_$dyn_storage_ptr_$","typeString":"function (struct AVAXGods.Battle storage ref[] storage pointer,struct AVAXGods.Battle storage ref)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10767:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3882,"nodeType":"ExpressionStatement","src":"10767:21:13"},{"expression":{"id":3883,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"10808:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"functionReturnParameters":3816,"id":3884,"nodeType":"Return","src":"10801:14:13"}]},"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"9823:78:13","text":"@dev Creates a new battle\n @param _name battle name; set by player"},"functionSelector":"2ca04522","id":3886,"implemented":true,"kind":"function","modifiers":[],"name":"createBattle","nameLocation":"9916:12:13","nodeType":"FunctionDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"_name","nameLocation":"9953:5:13","nodeType":"VariableDeclaration","scope":3886,"src":"9939:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3810,"name":"string","nodeType":"ElementaryTypeName","src":"9939:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9928:37:13"},"returnParameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3886,"src":"9984:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":3814,"nodeType":"UserDefinedTypeName","pathNode":{"id":3813,"name":"Battle","nameLocations":["9984:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"9984:6:13"},"referencedDeclaration":3240,"src":"9984:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"src":"9983:15:13"},"scope":5078,"src":"9907:916:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3990,"nodeType":"Block","src":"11010:917:13","statements":[{"assignments":[3897],"declarations":[{"constant":false,"id":3897,"mutability":"mutable","name":"_battle","nameLocation":"11035:7:13","nodeType":"VariableDeclaration","scope":3990,"src":"11021:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":3896,"nodeType":"UserDefinedTypeName","pathNode":{"id":3895,"name":"Battle","nameLocations":["11021:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"11021:6:13"},"referencedDeclaration":3240,"src":"11021:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"id":3901,"initialValue":{"arguments":[{"id":3899,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"11055:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3898,"name":"getBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"11045:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (string memory) view returns (struct AVAXGods.Battle memory)"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11045:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"nodeType":"VariableDeclarationStatement","src":"11021:40:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3903,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11096:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":3904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11104:12:13","memberName":"battleStatus","nodeType":"MemberAccess","referencedDeclaration":3220,"src":"11096:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3905,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"11120:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$3187_$","typeString":"type(enum AVAXGods.BattleStatus)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11133:7:13","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":3184,"src":"11120:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"src":"11096:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c6520616c7265616479207374617274656421","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11155:25:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_532b3fcfb5921cec7e361a61d6739478a413b563083dd37735d9bb1e1496f535","typeString":"literal_string \"Battle already started!\""},"value":"Battle already started!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_532b3fcfb5921cec7e361a61d6739478a413b563083dd37735d9bb1e1496f535","typeString":"literal_string \"Battle already started!\""}],"id":3902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11074:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11074:117:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3910,"nodeType":"ExpressionStatement","src":"11074:117:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3912,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11263:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":3913,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11271:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"11263:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3915,"indexExpression":{"hexValue":"30","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11279:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11263:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3916,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11285:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11289:6:13","memberName":"sender","nodeType":"MemberAccess","src":"11285:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11263:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920706c617965722074776f2063616e206a6f696e206120626174746c65","id":3919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11310:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7167fe76b85a13842b7f96cafc2ee8cda7e6123b2c939e7395089799e2109867","typeString":"literal_string \"Only player two can join a battle\""},"value":"Only player two can join a battle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7167fe76b85a13842b7f96cafc2ee8cda7e6123b2c939e7395089799e2109867","typeString":"literal_string \"Only player two can join a battle\""}],"id":3911,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11241:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11241:115:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3921,"nodeType":"ExpressionStatement","src":"11241:115:13"},{"expression":{"arguments":[{"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11422:31:13","subExpression":{"expression":{"arguments":[{"expression":{"id":3924,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11433:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11437:6:13","memberName":"sender","nodeType":"MemberAccess","src":"11433:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3923,"name":"getPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"11423:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Player_$3216_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.Player memory)"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11423:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}},"id":3927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11445:8:13","memberName":"inBattle","nodeType":"MemberAccess","referencedDeclaration":3215,"src":"11423:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920696e20626174746c65","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11455:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_45bc6cf21f236d3a45250f6e84dc8d5c2382a767e1a16b6c571a943ae8043a82","typeString":"literal_string \"Already in battle\""},"value":"Already in battle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45bc6cf21f236d3a45250f6e84dc8d5c2382a767e1a16b6c571a943ae8043a82","typeString":"literal_string \"Already in battle\""}],"id":3922,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11414:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11414:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3931,"nodeType":"ExpressionStatement","src":"11414:61:13"},{"expression":{"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3932,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11538:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":3934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11546:12:13","memberName":"battleStatus","nodeType":"MemberAccess","referencedDeclaration":3220,"src":"11538:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3935,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"11561:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$3187_$","typeString":"type(enum AVAXGods.BattleStatus)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11574:7:13","memberName":"STARTED","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"11561:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"src":"11538:43:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"id":3938,"nodeType":"ExpressionStatement","src":"11538:43:13"},{"expression":{"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3939,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11592:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":3942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11600:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"11592:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3943,"indexExpression":{"hexValue":"31","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11608:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11592:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3944,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11613:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11617:6:13","memberName":"sender","nodeType":"MemberAccess","src":"11613:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11592:31:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3947,"nodeType":"ExpressionStatement","src":"11592:31:13"},{"expression":{"arguments":[{"id":3949,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"11647:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3950,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11654:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":3948,"name":"updateBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"11634:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_struct$_Battle_$3240_memory_ptr_$returns$__$","typeString":"function (string memory,struct AVAXGods.Battle memory)"}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11634:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3952,"nodeType":"ExpressionStatement","src":"11634:28:13"},{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3953,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"11675:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":3960,"indexExpression":{"baseExpression":{"id":3954,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"11683:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3959,"indexExpression":{"baseExpression":{"expression":{"id":3955,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11694:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":3956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11702:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"11694:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3958,"indexExpression":{"hexValue":"30","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11710:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11694:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11683:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11675:39:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":3961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11715:8:13","memberName":"inBattle","nodeType":"MemberAccess","referencedDeclaration":3215,"src":"11675:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11726:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11675:55:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3964,"nodeType":"ExpressionStatement","src":"11675:55:13"},{"expression":{"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3965,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"11741:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":3972,"indexExpression":{"baseExpression":{"id":3966,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"11749:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3971,"indexExpression":{"baseExpression":{"expression":{"id":3967,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11760:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":3968,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11768:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"11760:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3970,"indexExpression":{"hexValue":"31","id":3969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11776:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11760:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11749:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11741:39:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":3973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11781:8:13","memberName":"inBattle","nodeType":"MemberAccess","referencedDeclaration":3215,"src":"11741:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11792:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11741:55:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3976,"nodeType":"ExpressionStatement","src":"11741:55:13"},{"eventCall":{"arguments":[{"expression":{"id":3978,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11824:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":3979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11832:4:13","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3226,"src":"11824:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"baseExpression":{"expression":{"id":3980,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11838:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":3981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11846:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"11838:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":3983,"indexExpression":{"hexValue":"30","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11854:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11838:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3984,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11858:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11862:6:13","memberName":"sender","nodeType":"MemberAccess","src":"11858:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3977,"name":"NewBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"11814:9:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11814:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3987,"nodeType":"EmitStatement","src":"11809:60:13"},{"expression":{"id":3988,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"11912:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"functionReturnParameters":3894,"id":3989,"nodeType":"Return","src":"11905:14:13"}]},"documentation":{"id":3887,"nodeType":"StructuredDocumentation","src":"10831:99:13","text":"@dev Player joins battle\n @param _name battle name; name of battle player wants to join"},"functionSelector":"a1b4f57c","id":3991,"implemented":true,"kind":"function","modifiers":[],"name":"joinBattle","nameLocation":"10945:10:13","nodeType":"FunctionDefinition","parameters":{"id":3890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"_name","nameLocation":"10970:5:13","nodeType":"VariableDeclaration","scope":3991,"src":"10956:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3888,"name":"string","nodeType":"ElementaryTypeName","src":"10956:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10955:21:13"},"returnParameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3991,"src":"10995:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":3892,"nodeType":"UserDefinedTypeName","pathNode":{"id":3891,"name":"Battle","nameLocations":["10995:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"10995:6:13"},"referencedDeclaration":3240,"src":"10995:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"src":"10994:15:13"},"scope":5078,"src":"10936:991:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4025,"nodeType":"Block","src":"12111:175:13","statements":[{"assignments":[4002],"declarations":[{"constant":false,"id":4002,"mutability":"mutable","name":"_battle","nameLocation":"12136:7:13","nodeType":"VariableDeclaration","scope":4025,"src":"12122:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":4001,"nodeType":"UserDefinedTypeName","pathNode":{"id":4000,"name":"Battle","nameLocations":["12122:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"12122:6:13"},"referencedDeclaration":3240,"src":"12122:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"id":4006,"initialValue":{"arguments":[{"id":4004,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"12156:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4003,"name":"getBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"12146:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (string memory) view returns (struct AVAXGods.Battle memory)"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12146:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"nodeType":"VariableDeclarationStatement","src":"12122:46:13"},{"expression":{"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4007,"name":"P1Move","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"12181:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":4008,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"12190:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12198:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"12190:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4011,"indexExpression":{"hexValue":"30","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12204:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12190:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12181:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4013,"nodeType":"ExpressionStatement","src":"12181:25:13"},{"expression":{"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4014,"name":"P2Move","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"12217:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":4015,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4002,"src":"12226:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12234:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"12226:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4018,"indexExpression":{"hexValue":"31","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12240:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12226:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12217:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4020,"nodeType":"ExpressionStatement","src":"12217:25:13"},{"expression":{"components":[{"id":4021,"name":"P1Move","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"12263:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4022,"name":"P2Move","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"12271:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12262:16:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3999,"id":4024,"nodeType":"Return","src":"12255:23:13"}]},"functionSelector":"9b09cc87","id":4026,"implemented":true,"kind":"function","modifiers":[],"name":"getBattleMoves","nameLocation":"12000:14:13","nodeType":"FunctionDefinition","parameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3993,"mutability":"mutable","name":"_battleName","nameLocation":"12039:11:13","nodeType":"VariableDeclaration","scope":4026,"src":"12025:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3992,"name":"string","nodeType":"ElementaryTypeName","src":"12025:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12014:43:13"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3996,"mutability":"mutable","name":"P1Move","nameLocation":"12087:6:13","nodeType":"VariableDeclaration","scope":4026,"src":"12079:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3995,"name":"uint256","nodeType":"ElementaryTypeName","src":"12079:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3998,"mutability":"mutable","name":"P2Move","nameLocation":"12103:6:13","nodeType":"VariableDeclaration","scope":4026,"src":"12095:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3997,"name":"uint256","nodeType":"ElementaryTypeName","src":"12095:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12078:32:13"},"scope":5078,"src":"11991:295:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4073,"nodeType":"Block","src":"12425:350:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"_choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12458:7:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12469:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12458:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"_choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12474:7:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12485:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12474:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12458:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43686f6963652073686f756c64206265206569746865722031206f72203221","id":4043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12501:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5fa1f1daf831c0a3787be93db0b59f56210dff24f2741231cc3ac6d492c1da85","typeString":"literal_string \"Choice should be either 1 or 2!\""},"value":"Choice should be either 1 or 2!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5fa1f1daf831c0a3787be93db0b59f56210dff24f2741231cc3ac6d492c1da85","typeString":"literal_string \"Choice should be either 1 or 2!\""}],"id":4035,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12436:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12436:109:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4045,"nodeType":"ExpressionStatement","src":"12436:109:13"},{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4047,"name":"_choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12578:7:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12578:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"74727565","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12633:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12578:59:13","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":4051,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12603:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12607:6:13","memberName":"sender","nodeType":"MemberAccess","src":"12603:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4050,"name":"getPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"12593:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Player_$3216_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.Player memory)"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12593:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}},"id":4054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12615:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"12593:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"33","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12629:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12593:37:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d616e61206e6f742073756666696369656e7420666f722061747461636b696e6721","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12652:36:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2182750ddb42ab71df47e3feb9677fb2f228fc3a986f14ed68aeb22404c2bd4","typeString":"literal_string \"Mana not sufficient for attacking!\""},"value":"Mana not sufficient for attacking!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c2182750ddb42ab71df47e3feb9677fb2f228fc3a986f14ed68aeb22404c2bd4","typeString":"literal_string \"Mana not sufficient for attacking!\""}],"id":4046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12556:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12556:143:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4061,"nodeType":"ExpressionStatement","src":"12556:143:13"},{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":4062,"name":"battles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"12710:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Battle_$3240_storage_$dyn_storage","typeString":"struct AVAXGods.Battle storage ref[] storage ref"}},"id":4066,"indexExpression":{"baseExpression":{"id":4063,"name":"battleInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"12718:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":4065,"indexExpression":{"id":4064,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"12729:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12718:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12710:32:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage","typeString":"struct AVAXGods.Battle storage ref"}},"id":4067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12743:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"12710:38:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage","typeString":"uint8[2] storage ref"}},"id":4069,"indexExpression":{"id":4068,"name":"_player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"12749:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12710:47:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4070,"name":"_choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"12760:7:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12710:57:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4072,"nodeType":"ExpressionStatement","src":"12710:57:13"}]},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"_registerPlayerMove","nameLocation":"12303:19:13","nodeType":"FunctionDefinition","parameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"_player","nameLocation":"12341:7:13","nodeType":"VariableDeclaration","scope":4074,"src":"12333:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4027,"name":"uint256","nodeType":"ElementaryTypeName","src":"12333:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4030,"mutability":"mutable","name":"_choice","nameLocation":"12365:7:13","nodeType":"VariableDeclaration","scope":4074,"src":"12359:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4029,"name":"uint8","nodeType":"ElementaryTypeName","src":"12359:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4032,"mutability":"mutable","name":"_battleName","nameLocation":"12397:11:13","nodeType":"VariableDeclaration","scope":4074,"src":"12383:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4031,"name":"string","nodeType":"ElementaryTypeName","src":"12383:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12322:93:13"},"returnParameters":{"id":4034,"nodeType":"ParameterList","parameters":[],"src":"12425:0:13"},"scope":5078,"src":"12294:481:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4210,"nodeType":"Block","src":"12949:1278:13","statements":[{"assignments":[4083],"declarations":[{"constant":false,"id":4083,"mutability":"mutable","name":"_battle","nameLocation":"12974:7:13","nodeType":"VariableDeclaration","scope":4210,"src":"12960:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":4082,"nodeType":"UserDefinedTypeName","pathNode":{"id":4081,"name":"Battle","nameLocations":["12960:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"12960:6:13"},"referencedDeclaration":3240,"src":"12960:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"id":4087,"initialValue":{"arguments":[{"id":4085,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"12994:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4084,"name":"getBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"12984:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (string memory) view returns (struct AVAXGods.Battle memory)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12984:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"nodeType":"VariableDeclarationStatement","src":"12960:46:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4089,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13041:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13049:12:13","memberName":"battleStatus","nodeType":"MemberAccess","referencedDeclaration":3220,"src":"13041:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4091,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"13065:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$3187_$","typeString":"type(enum AVAXGods.BattleStatus)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13078:7:13","memberName":"STARTED","nodeType":"MemberAccess","referencedDeclaration":3185,"src":"13065:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"src":"13041:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c65206e6f7420737461727465642e20506c656173652074656c6c20616e6f7468657220706c6179657220746f206a6f696e2074686520626174746c65","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13100:67:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7f3c2d6874b29fc3b28bcce6f3bb533271e183a119a4e4495191ec617b9b8b9","typeString":"literal_string \"Battle not started. Please tell another player to join the battle\""},"value":"Battle not started. Please tell another player to join the battle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7f3c2d6874b29fc3b28bcce6f3bb533271e183a119a4e4495191ec617b9b8b9","typeString":"literal_string \"Battle not started. Please tell another player to join the battle\""}],"id":4088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13019:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13019:159:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4096,"nodeType":"ExpressionStatement","src":"13019:159:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4098,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13246:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13254:12:13","memberName":"battleStatus","nodeType":"MemberAccess","referencedDeclaration":3220,"src":"13246:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4100,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"13270:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$3187_$","typeString":"type(enum AVAXGods.BattleStatus)"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13283:5:13","memberName":"ENDED","nodeType":"MemberAccess","referencedDeclaration":3186,"src":"13270:18:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"src":"13246:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c652068617320616c726561647920656e646564","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13303:26:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5321a3bcfd5b55136ab90255c3acf57dca1fb4fe8b3030f24dc634194deeedf2","typeString":"literal_string \"Battle has already ended\""},"value":"Battle has already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5321a3bcfd5b55136ab90255c3acf57dca1fb4fe8b3030f24dc634194deeedf2","typeString":"literal_string \"Battle has already ended\""}],"id":4097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13224:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13224:116:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4105,"nodeType":"ExpressionStatement","src":"13224:116:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4107,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13410:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13414:6:13","memberName":"sender","nodeType":"MemberAccess","src":"13410:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"expression":{"id":4109,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13424:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13432:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"13424:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4112,"indexExpression":{"hexValue":"30","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13440:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13424:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13410:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4114,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13463:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13467:6:13","memberName":"sender","nodeType":"MemberAccess","src":"13463:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"expression":{"id":4116,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13477:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4117,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13485:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"13477:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4119,"indexExpression":{"hexValue":"31","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13493:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13477:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13463:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13410:85:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520617265206e6f7420696e207468697320626174746c65","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13510:28:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6fcb87617f9c1a2dfe058e9a0078ed89acf330706e398eccc57f8e8ef1f289b","typeString":"literal_string \"You are not in this battle\""},"value":"You are not in this battle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b6fcb87617f9c1a2dfe058e9a0078ed89acf330706e398eccc57f8e8ef1f289b","typeString":"literal_string \"You are not in this battle\""}],"id":4106,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13388:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13388:161:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4124,"nodeType":"ExpressionStatement","src":"13388:161:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4126,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13624:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13632:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"13624:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4138,"indexExpression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4128,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13638:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13646:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"13638:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4131,"indexExpression":{"hexValue":"30","id":4130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13654:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13638:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4132,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13660:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13664:6:13","memberName":"sender","nodeType":"MemberAccess","src":"13660:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13638:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13677:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13638:40:13","trueExpression":{"hexValue":"30","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13673:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13624:55:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13683:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13624:60:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206861766520616c7265616479206d6164652061206d6f766521","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13699:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b5af4c3dd4ea9877229c1178e2c9dc1950d74ac40f392b07c6d33f52f5dfe11","typeString":"literal_string \"You have already made a move!\""},"value":"You have already made a move!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b5af4c3dd4ea9877229c1178e2c9dc1950d74ac40f392b07c6d33f52f5dfe11","typeString":"literal_string \"You have already made a move!\""}],"id":4125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13602:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13602:139:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4143,"nodeType":"ExpressionStatement","src":"13602:139:13"},{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4145,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13788:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13796:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"13788:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4148,"indexExpression":{"hexValue":"30","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13804:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13788:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4149,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13810:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13814:6:13","memberName":"sender","nodeType":"MemberAccess","src":"13810:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13788:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13827:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13788:40:13","trueExpression":{"hexValue":"30","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13823:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4155,"name":"_choice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"13843:7:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4156,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"13865:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4144,"name":"_registerPlayerMove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"13754:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint8_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint8,string memory)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13754:133:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4158,"nodeType":"ExpressionStatement","src":"13754:133:13"},{"expression":{"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4159,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13900:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4161,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"13920:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4160,"name":"getBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"13910:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (string memory) view returns (struct AVAXGods.Battle memory)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13910:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"src":"13900:32:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4164,"nodeType":"ExpressionStatement","src":"13900:32:13"},{"assignments":[4166],"declarations":[{"constant":false,"id":4166,"mutability":"mutable","name":"_movesLeft","nameLocation":"13948:10:13","nodeType":"VariableDeclaration","scope":4210,"src":"13943:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint","nodeType":"ElementaryTypeName","src":"13943:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4190,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13961:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4168,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"13979:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13987:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"13979:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4171,"indexExpression":{"hexValue":"30","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13993:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13979:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13999:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13979:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14007:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13979:29:13","trueExpression":{"hexValue":"30","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14003:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13978:31:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13961:48:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4179,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"14026:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4180,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14034:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"14026:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4182,"indexExpression":{"hexValue":"31","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14040:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14026:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14026:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14054:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14026:29:13","trueExpression":{"hexValue":"30","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14050:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14025:31:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13961:95:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13943:113:13"},{"eventCall":{"arguments":[{"id":4192,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"14083:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"_movesLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"14096:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14110:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14096:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":4197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14121:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14096:30:13","trueExpression":{"hexValue":"74727565","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14114:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4191,"name":"BattleMove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"14072:10:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$returns$__$","typeString":"function (string memory,bool)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4200,"nodeType":"EmitStatement","src":"14067:60:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"_movesLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"14144:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14158:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14144:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4209,"nodeType":"IfStatement","src":"14140:80:13","trueBody":{"id":4208,"nodeType":"Block","src":"14161:59:13","statements":[{"expression":{"arguments":[{"id":4205,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"14196:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4204,"name":"_awaitBattleResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"14176:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14176:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4207,"nodeType":"ExpressionStatement","src":"14176:32:13"}]}}]},"functionSelector":"ba274956","id":4211,"implemented":true,"kind":"function","modifiers":[],"name":"attackOrDefendChoice","nameLocation":"12852:20:13","nodeType":"FunctionDefinition","parameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"_choice","nameLocation":"12889:7:13","nodeType":"VariableDeclaration","scope":4211,"src":"12883:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4075,"name":"uint8","nodeType":"ElementaryTypeName","src":"12883:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"_battleName","nameLocation":"12921:11:13","nodeType":"VariableDeclaration","scope":4211,"src":"12907:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4077,"name":"string","nodeType":"ElementaryTypeName","src":"12907:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12872:67:13"},"returnParameters":{"id":4080,"nodeType":"ParameterList","parameters":[],"src":"12949:0:13"},"scope":5078,"src":"12843:1384:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4263,"nodeType":"Block","src":"14330:434:13","statements":[{"assignments":[4218],"declarations":[{"constant":false,"id":4218,"mutability":"mutable","name":"_battle","nameLocation":"14355:7:13","nodeType":"VariableDeclaration","scope":4263,"src":"14341:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":4217,"nodeType":"UserDefinedTypeName","pathNode":{"id":4216,"name":"Battle","nameLocations":["14341:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"14341:6:13"},"referencedDeclaration":3240,"src":"14341:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"id":4222,"initialValue":{"arguments":[{"id":4220,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"14375:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4219,"name":"getBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"14365:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (string memory) view returns (struct AVAXGods.Battle memory)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14365:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"nodeType":"VariableDeclarationStatement","src":"14341:46:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4224,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14422:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14426:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14422:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"expression":{"id":4226,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"14436:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14444:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"14436:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4229,"indexExpression":{"hexValue":"30","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14436:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14422:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4231,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14475:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14479:6:13","memberName":"sender","nodeType":"MemberAccess","src":"14475:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"expression":{"id":4233,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"14489:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14497:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"14489:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4236,"indexExpression":{"hexValue":"31","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14505:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14489:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14475:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14422:85:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920706c617965727320696e207468697320626174746c652063616e206d616b652061206d6f7665","id":4239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14522:45:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_eba2df4a291f37d4db3af9ee4076640e8451cfe6db87b3bb107286623a6a5291","typeString":"literal_string \"Only players in this battle can make a move\""},"value":"Only players in this battle can make a move"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eba2df4a291f37d4db3af9ee4076640e8451cfe6db87b3bb107286623a6a5291","typeString":"literal_string \"Only players in this battle can make a move\""}],"id":4223,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14400:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14400:178:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4241,"nodeType":"ExpressionStatement","src":"14400:178:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4243,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"14613:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14621:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"14613:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4246,"indexExpression":{"hexValue":"30","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14627:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14613:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14633:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14613:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4249,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"14638:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14646:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"14638:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4252,"indexExpression":{"hexValue":"31","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14652:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14638:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14658:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14638:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14613:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6179657273207374696c6c206e65656420746f206d616b652061206d6f7665","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14674:35:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3dc531e865a3c31c2c277f8c898416a805ec95caca87ea8e6b1b921e10dee13b","typeString":"literal_string \"Players still need to make a move\""},"value":"Players still need to make a move"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3dc531e865a3c31c2c277f8c898416a805ec95caca87ea8e6b1b921e10dee13b","typeString":"literal_string \"Players still need to make a move\""}],"id":4242,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14591:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14591:129:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4258,"nodeType":"ExpressionStatement","src":"14591:129:13"},{"expression":{"arguments":[{"id":4260,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"14748:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4259,"name":"_resolveBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"14733:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Battle_$3240_memory_ptr_$returns$__$","typeString":"function (struct AVAXGods.Battle memory)"}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14733:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4262,"nodeType":"ExpressionStatement","src":"14733:23:13"}]},"id":4264,"implemented":true,"kind":"function","modifiers":[],"name":"_awaitBattleResults","nameLocation":"14274:19:13","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"_battleName","nameLocation":"14308:11:13","nodeType":"VariableDeclaration","scope":4264,"src":"14294:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4212,"name":"string","nodeType":"ElementaryTypeName","src":"14294:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14293:27:13"},"returnParameters":{"id":4215,"nodeType":"ParameterList","parameters":[],"src":"14330:0:13"},"scope":5078,"src":"14265:499:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"canonicalName":"AVAXGods.P","id":4275,"members":[{"constant":false,"id":4266,"mutability":"mutable","name":"index","nameLocation":"14797:5:13","nodeType":"VariableDeclaration","scope":4275,"src":"14792:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint","nodeType":"ElementaryTypeName","src":"14792:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4268,"mutability":"mutable","name":"move","nameLocation":"14818:4:13","nodeType":"VariableDeclaration","scope":4275,"src":"14813:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint","nodeType":"ElementaryTypeName","src":"14813:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"health","nameLocation":"14838:6:13","nodeType":"VariableDeclaration","scope":4275,"src":"14833:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint","nodeType":"ElementaryTypeName","src":"14833:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"attack","nameLocation":"14860:6:13","nodeType":"VariableDeclaration","scope":4275,"src":"14855:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint","nodeType":"ElementaryTypeName","src":"14855:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"defense","nameLocation":"14882:7:13","nodeType":"VariableDeclaration","scope":4275,"src":"14877:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint","nodeType":"ElementaryTypeName","src":"14877:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"P","nameLocation":"14779:1:13","nodeType":"StructDefinition","scope":5078,"src":"14772:125:13","visibility":"public"},{"body":{"id":4758,"nodeType":"Block","src":"15089:4115:13","statements":[{"assignments":[4284],"declarations":[{"constant":false,"id":4284,"mutability":"mutable","name":"p1","nameLocation":"15109:2:13","nodeType":"VariableDeclaration","scope":4758,"src":"15100:11:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P"},"typeName":{"id":4283,"nodeType":"UserDefinedTypeName","pathNode":{"id":4282,"name":"P","nameLocations":["15100:1:13"],"nodeType":"IdentifierPath","referencedDeclaration":4275,"src":"15100:1:13"},"referencedDeclaration":4275,"src":"15100:1:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_storage_ptr","typeString":"struct AVAXGods.P"}},"visibility":"internal"}],"id":4318,"initialValue":{"arguments":[{"baseExpression":{"id":4286,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"15130:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4291,"indexExpression":{"baseExpression":{"expression":{"id":4287,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15141:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15149:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15141:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4290,"indexExpression":{"hexValue":"30","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15157:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15141:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15130:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"expression":{"id":4292,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15175:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15183:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"15175:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4295,"indexExpression":{"hexValue":"30","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15189:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15175:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4297,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15216:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15224:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15216:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4300,"indexExpression":{"hexValue":"30","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15232:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15216:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4296,"name":"getPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"15206:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Player_$3216_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.Player memory)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15206:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}},"id":4302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15236:12:13","memberName":"playerHealth","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"15206:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4304,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15278:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15286:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15278:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4307,"indexExpression":{"hexValue":"30","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15294:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15278:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4303,"name":"getPlayerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"15263:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_GameToken_$3200_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.GameToken memory)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}},"id":4309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15298:14:13","memberName":"attackStrength","nodeType":"MemberAccess","referencedDeclaration":3196,"src":"15263:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4311,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15342:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15350:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15342:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4314,"indexExpression":{"hexValue":"30","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15358:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15342:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4310,"name":"getPlayerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"15327:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_GameToken_$3200_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.GameToken memory)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15327:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}},"id":4316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15362:15:13","memberName":"defenseStrength","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"15327:50:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4285,"name":"P","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"15114:1:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_P_$4275_storage_ptr_$","typeString":"type(struct AVAXGods.P storage pointer)"}},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15114:274:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"nodeType":"VariableDeclarationStatement","src":"15100:288:13"},{"assignments":[4321],"declarations":[{"constant":false,"id":4321,"mutability":"mutable","name":"p2","nameLocation":"15410:2:13","nodeType":"VariableDeclaration","scope":4758,"src":"15401:11:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P"},"typeName":{"id":4320,"nodeType":"UserDefinedTypeName","pathNode":{"id":4319,"name":"P","nameLocations":["15401:1:13"],"nodeType":"IdentifierPath","referencedDeclaration":4275,"src":"15401:1:13"},"referencedDeclaration":4275,"src":"15401:1:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_storage_ptr","typeString":"struct AVAXGods.P"}},"visibility":"internal"}],"id":4355,"initialValue":{"arguments":[{"baseExpression":{"id":4323,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"15431:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4328,"indexExpression":{"baseExpression":{"expression":{"id":4324,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15442:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15450:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15442:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4327,"indexExpression":{"hexValue":"31","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15458:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15442:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15431:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"expression":{"id":4329,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15476:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15484:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"15476:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4332,"indexExpression":{"hexValue":"31","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15490:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15476:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4334,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15517:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15525:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15517:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4337,"indexExpression":{"hexValue":"31","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15533:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15517:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4333,"name":"getPlayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"15507:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_Player_$3216_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.Player memory)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15507:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_memory_ptr","typeString":"struct AVAXGods.Player memory"}},"id":4339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15537:12:13","memberName":"playerHealth","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"15507:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4341,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15579:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15587:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15579:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4344,"indexExpression":{"hexValue":"31","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15595:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15579:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4340,"name":"getPlayerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"15564:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_GameToken_$3200_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.GameToken memory)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15564:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}},"id":4346,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15599:14:13","memberName":"attackStrength","nodeType":"MemberAccess","referencedDeclaration":3196,"src":"15564:49:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4348,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15643:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4349,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15651:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15643:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4351,"indexExpression":{"hexValue":"31","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15659:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15643:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4347,"name":"getPlayerToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"15628:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_struct$_GameToken_$3200_memory_ptr_$","typeString":"function (address) view returns (struct AVAXGods.GameToken memory)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15628:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_memory_ptr","typeString":"struct AVAXGods.GameToken memory"}},"id":4353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15663:15:13","memberName":"defenseStrength","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"15628:50:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4322,"name":"P","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"15415:1:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_P_$4275_storage_ptr_$","typeString":"type(struct AVAXGods.P storage pointer)"}},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15415:274:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"nodeType":"VariableDeclarationStatement","src":"15401:288:13"},{"assignments":[4361],"declarations":[{"constant":false,"id":4361,"mutability":"mutable","name":"_damagedPlayers","nameLocation":"15720:15:13","nodeType":"VariableDeclaration","scope":4758,"src":"15702:33:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2]"},"typeName":{"baseType":{"id":4359,"name":"address","nodeType":"ElementaryTypeName","src":"15702:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4360,"length":{"hexValue":"32","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15710:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"15702:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_storage_ptr","typeString":"address[2]"}},"visibility":"internal"}],"id":4371,"initialValue":{"components":[{"arguments":[{"hexValue":"30","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15747:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15739:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4362,"name":"address","nodeType":"ElementaryTypeName","src":"15739:7:13","typeDescriptions":{}}},"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15739:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15759:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15751:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4366,"name":"address","nodeType":"ElementaryTypeName","src":"15751:7:13","typeDescriptions":{}}},"id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15751:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4370,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15738:24:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"15702:60:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4372,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"15779:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15782:4:13","memberName":"move","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"15779:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15790:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15779:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4376,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"15795:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15798:4:13","memberName":"move","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"15795:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15806:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15795:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15779:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4452,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"16410:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16413:4:13","memberName":"move","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"16410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16421:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16410:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4456,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16426:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16429:4:13","memberName":"move","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"16426:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"16426:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16410:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4541,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17185:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17188:4:13","memberName":"move","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"17185:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17196:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17185:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4545,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"17201:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17204:4:13","memberName":"move","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"17201:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17212:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17201:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17185:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4630,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17960:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17963:4:13","memberName":"move","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"17960:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17960:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4634,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"17976:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17979:4:13","memberName":"move","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"17976:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17987:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17976:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17960:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4656,"nodeType":"IfStatement","src":"17956:142:13","trueBody":{"id":4655,"nodeType":"Block","src":"17990:108:13","statements":[{"expression":{"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4639,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"18005:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4642,"indexExpression":{"expression":{"id":4640,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"18013:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18016:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"18013:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18005:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18023:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"18005:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"33","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18037:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"18005:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4646,"nodeType":"ExpressionStatement","src":"18005:33:13"},{"expression":{"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4647,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"18053:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4650,"indexExpression":{"expression":{"id":4648,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"18061:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18064:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"18061:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18053:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18071:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"18053:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"33","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18085:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"18053:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4654,"nodeType":"ExpressionStatement","src":"18053:33:13"}]}},"id":4657,"nodeType":"IfStatement","src":"17181:917:13","trueBody":{"id":4629,"nodeType":"Block","src":"17215:735:13","statements":[{"assignments":[4551],"declarations":[{"constant":false,"id":4551,"mutability":"mutable","name":"PHAD","nameLocation":"17238:4:13","nodeType":"VariableDeclaration","scope":4629,"src":"17230:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4550,"name":"uint256","nodeType":"ElementaryTypeName","src":"17230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4557,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4552,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17245:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4553,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17248:6:13","memberName":"health","nodeType":"MemberAccess","referencedDeclaration":4270,"src":"17245:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4554,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17257:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17260:7:13","memberName":"defense","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"17257:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17245:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17230:37:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4558,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"17286:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17289:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"17286:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4560,"name":"PHAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"17299:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17286:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4627,"nodeType":"Block","src":"17385:554:13","statements":[{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"healthAfterAttack","nameLocation":"17412:17:13","nodeType":"VariableDeclaration","scope":4627,"src":"17404:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"17404:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4573,"nodeType":"VariableDeclarationStatement","src":"17404:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4574,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17454:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17457:7:13","memberName":"defense","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"17454:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4576,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"17467:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17470:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"17467:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17454:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4601,"nodeType":"Block","src":"17556:191:13","statements":[{"expression":{"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"healthAfterAttack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"17579:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"PHAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4551,"src":"17599:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4587,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"17606:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17609:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"17606:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17599:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17579:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4591,"nodeType":"ExpressionStatement","src":"17579:36:13"},{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4592,"name":"_damagedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"17688:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4594,"indexExpression":{"hexValue":"30","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17704:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17688:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":4595,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"17709:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17717:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"17709:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4598,"indexExpression":{"hexValue":"30","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17725:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17709:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17688:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4600,"nodeType":"ExpressionStatement","src":"17688:39:13"}]},"id":4602,"nodeType":"IfStatement","src":"17450:297:13","trueBody":{"id":4584,"nodeType":"Block","src":"17478:72:13","statements":[{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4579,"name":"healthAfterAttack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"17501:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4580,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17521:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4581,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17524:6:13","memberName":"health","nodeType":"MemberAccess","referencedDeclaration":4270,"src":"17521:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17501:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"17501:29:13"}]}},{"expression":{"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4603,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"17767:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4606,"indexExpression":{"expression":{"id":4604,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17775:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17778:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"17775:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17767:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17785:12:13","memberName":"playerHealth","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"17767:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4608,"name":"healthAfterAttack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"17800:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17767:50:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4610,"nodeType":"ExpressionStatement","src":"17767:50:13"},{"expression":{"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4611,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"17838:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4614,"indexExpression":{"expression":{"id":4612,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17846:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4613,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17849:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"17846:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17838:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17856:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"17838:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"33","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17870:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"17838:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4618,"nodeType":"ExpressionStatement","src":"17838:33:13"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4619,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"17890:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4622,"indexExpression":{"expression":{"id":4620,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"17898:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17901:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"17898:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17890:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17908:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"17890:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"33","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17922:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"17890:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"17890:33:13"}]},"id":4628,"nodeType":"IfStatement","src":"17282:657:13","trueBody":{"id":4570,"nodeType":"Block","src":"17305:74:13","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4563,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"17335:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17343:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"17335:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4566,"indexExpression":{"hexValue":"31","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17351:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17335:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4567,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"17355:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4562,"name":"_endBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"17324:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Battle_$3240_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (address,struct AVAXGods.Battle memory) returns (struct AVAXGods.Battle memory)"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17324:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4569,"nodeType":"ExpressionStatement","src":"17324:39:13"}]}}]}},"id":4658,"nodeType":"IfStatement","src":"16406:1692:13","trueBody":{"id":4540,"nodeType":"Block","src":"16440:735:13","statements":[{"assignments":[4462],"declarations":[{"constant":false,"id":4462,"mutability":"mutable","name":"PHAD","nameLocation":"16463:4:13","nodeType":"VariableDeclaration","scope":4540,"src":"16455:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4461,"name":"uint256","nodeType":"ElementaryTypeName","src":"16455:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4468,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4463,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16470:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16473:6:13","memberName":"health","nodeType":"MemberAccess","referencedDeclaration":4270,"src":"16470:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4465,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16482:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16485:7:13","memberName":"defense","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"16482:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16470:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16455:37:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4469,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"16511:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16514:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"16511:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4471,"name":"PHAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"16524:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16511:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4538,"nodeType":"Block","src":"16610:554:13","statements":[{"assignments":[4483],"declarations":[{"constant":false,"id":4483,"mutability":"mutable","name":"healthAfterAttack","nameLocation":"16637:17:13","nodeType":"VariableDeclaration","scope":4538,"src":"16629:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4482,"name":"uint256","nodeType":"ElementaryTypeName","src":"16629:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4484,"nodeType":"VariableDeclarationStatement","src":"16629:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4485,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16679:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16682:7:13","memberName":"defense","nodeType":"MemberAccess","referencedDeclaration":4274,"src":"16679:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4487,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"16692:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16695:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"16692:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16679:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4512,"nodeType":"Block","src":"16781:191:13","statements":[{"expression":{"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"healthAfterAttack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"16804:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4497,"name":"PHAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"16824:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":4498,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"16831:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16834:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"16831:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16824:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16804:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4502,"nodeType":"ExpressionStatement","src":"16804:36:13"},{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4503,"name":"_damagedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"16913:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4505,"indexExpression":{"hexValue":"30","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16929:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16913:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":4506,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"16934:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16942:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"16934:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4509,"indexExpression":{"hexValue":"31","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16950:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16934:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16913:39:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4511,"nodeType":"ExpressionStatement","src":"16913:39:13"}]},"id":4513,"nodeType":"IfStatement","src":"16675:297:13","trueBody":{"id":4495,"nodeType":"Block","src":"16703:72:13","statements":[{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4490,"name":"healthAfterAttack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"16726:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4491,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16746:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16749:6:13","memberName":"health","nodeType":"MemberAccess","referencedDeclaration":4270,"src":"16746:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16726:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4494,"nodeType":"ExpressionStatement","src":"16726:29:13"}]}},{"expression":{"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4514,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"16992:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4517,"indexExpression":{"expression":{"id":4515,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"17000:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17003:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"17000:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16992:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17010:12:13","memberName":"playerHealth","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"16992:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4519,"name":"healthAfterAttack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4483,"src":"17025:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16992:50:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4521,"nodeType":"ExpressionStatement","src":"16992:50:13"},{"expression":{"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4522,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"17063:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4525,"indexExpression":{"expression":{"id":4523,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"17071:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4524,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17074:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"17071:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17063:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17081:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"17063:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"33","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17095:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"17063:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4529,"nodeType":"ExpressionStatement","src":"17063:33:13"},{"expression":{"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4530,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"17115:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4533,"indexExpression":{"expression":{"id":4531,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"17123:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4532,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17126:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"17123:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17115:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17133:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"17115:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"33","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17147:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"17115:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4537,"nodeType":"ExpressionStatement","src":"17115:33:13"}]},"id":4539,"nodeType":"IfStatement","src":"16507:657:13","trueBody":{"id":4481,"nodeType":"Block","src":"16530:74:13","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4474,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"16560:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16568:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"16560:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4477,"indexExpression":{"hexValue":"30","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16576:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16560:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4478,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"16580:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4473,"name":"_endBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"16549:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Battle_$3240_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (address,struct AVAXGods.Battle memory) returns (struct AVAXGods.Battle memory)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16549:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4480,"nodeType":"ExpressionStatement","src":"16549:39:13"}]}}]}},"id":4659,"nodeType":"IfStatement","src":"15775:2323:13","trueBody":{"id":4451,"nodeType":"Block","src":"15809:591:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4381,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"15828:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4382,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15831:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"15828:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4383,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"15841:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4384,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15844:6:13","memberName":"health","nodeType":"MemberAccess","referencedDeclaration":4270,"src":"15841:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15828:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4395,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"15936:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4396,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15939:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"15936:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4397,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"15949:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15952:6:13","memberName":"health","nodeType":"MemberAccess","referencedDeclaration":4270,"src":"15949:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15936:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4448,"nodeType":"Block","src":"16040:349:13","statements":[{"expression":{"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4409,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"16059:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4412,"indexExpression":{"expression":{"id":4410,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"16067:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16070:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"16067:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16059:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16077:12:13","memberName":"playerHealth","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"16059:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":4414,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16093:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16096:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"16093:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16059:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4417,"nodeType":"ExpressionStatement","src":"16059:43:13"},{"expression":{"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4418,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"16121:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4421,"indexExpression":{"expression":{"id":4419,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16129:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16132:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"16129:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16121:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16139:12:13","memberName":"playerHealth","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"16121:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":4423,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"16155:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16158:6:13","memberName":"attack","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"16155:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16121:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4426,"nodeType":"ExpressionStatement","src":"16121:43:13"},{"expression":{"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4427,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"16185:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4430,"indexExpression":{"expression":{"id":4428,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"16193:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16196:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"16193:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16185:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16203:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"16185:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"33","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16217:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"16185:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4434,"nodeType":"ExpressionStatement","src":"16185:33:13"},{"expression":{"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4435,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"16237:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4438,"indexExpression":{"expression":{"id":4436,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"16245:2:13","typeDescriptions":{"typeIdentifier":"t_struct$_P_$4275_memory_ptr","typeString":"struct AVAXGods.P memory"}},"id":4437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16248:5:13","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":4266,"src":"16245:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16237:17:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16255:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"16237:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"33","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16269:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"16237:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4442,"nodeType":"ExpressionStatement","src":"16237:33:13"},{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4443,"name":"_damagedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"16340:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4444,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"16358:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4445,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16366:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"16358:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"src":"16340:33:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4447,"nodeType":"ExpressionStatement","src":"16340:33:13"}]},"id":4449,"nodeType":"IfStatement","src":"15932:457:13","trueBody":{"id":4408,"nodeType":"Block","src":"15960:74:13","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4401,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15990:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15998:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15990:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4404,"indexExpression":{"hexValue":"31","id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16006:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15990:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4405,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"16010:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4400,"name":"_endBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"15979:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Battle_$3240_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (address,struct AVAXGods.Battle memory) returns (struct AVAXGods.Battle memory)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15979:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4407,"nodeType":"ExpressionStatement","src":"15979:39:13"}]}},"id":4450,"nodeType":"IfStatement","src":"15824:565:13","trueBody":{"id":4394,"nodeType":"Block","src":"15852:74:13","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4387,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15882:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15890:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"15882:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4390,"indexExpression":{"hexValue":"30","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15898:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15882:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4391,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"15902:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4386,"name":"_endBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"15871:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Battle_$3240_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (address,struct AVAXGods.Battle memory) returns (struct AVAXGods.Battle memory)"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15871:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4393,"nodeType":"ExpressionStatement","src":"15871:39:13"}]}}]}},{"eventCall":{"arguments":[{"id":4661,"name":"_damagedPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"18126:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}],"id":4660,"name":"RoundEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"18115:10:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_address_$2_memory_ptr_$returns$__$","typeString":"function (address[2] memory)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18115:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4663,"nodeType":"EmitStatement","src":"18110:32:13"},{"expression":{"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4664,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18184:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18192:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"18184:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4668,"indexExpression":{"hexValue":"30","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18198:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18184:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18203:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18184:20:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4671,"nodeType":"ExpressionStatement","src":"18184:20:13"},{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":4672,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18215:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4675,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18223:5:13","memberName":"moves","nodeType":"MemberAccess","referencedDeclaration":3236,"src":"18215:13:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_memory_ptr","typeString":"uint8[2] memory"}},"id":4676,"indexExpression":{"hexValue":"31","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18229:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18215:16:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18234:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18215:20:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4679,"nodeType":"ExpressionStatement","src":"18215:20:13"},{"expression":{"arguments":[{"expression":{"id":4681,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18259:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18267:4:13","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3226,"src":"18259:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4683,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18273:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4680,"name":"updateBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"18246:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_struct$_Battle_$3240_memory_ptr_$returns$__$","typeString":"function (string memory,struct AVAXGods.Battle memory)"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18246:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4685,"nodeType":"ExpressionStatement","src":"18246:35:13"},{"assignments":[4687],"declarations":[{"constant":false,"id":4687,"mutability":"mutable","name":"_randomAttackStrengthPlayer1","nameLocation":"18355:28:13","nodeType":"VariableDeclaration","scope":4758,"src":"18347:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4686,"name":"uint256","nodeType":"ElementaryTypeName","src":"18347:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4695,"initialValue":{"arguments":[{"id":4689,"name":"MAX_ATTACK_DEFEND_STRENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"18417:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"expression":{"id":4690,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18458:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18466:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"18458:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4693,"indexExpression":{"hexValue":"30","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18474:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18458:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4688,"name":"_createRandomNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"18386:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18386:101:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18347:140:13"},{"expression":{"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4696,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"18498:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"id":4703,"indexExpression":{"baseExpression":{"id":4697,"name":"playerTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"18509:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4702,"indexExpression":{"baseExpression":{"expression":{"id":4698,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18525:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18533:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"18525:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4701,"indexExpression":{"hexValue":"30","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18541:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18525:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18509:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18498:47:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage","typeString":"struct AVAXGods.GameToken storage ref"}},"id":4704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18560:14:13","memberName":"attackStrength","nodeType":"MemberAccess","referencedDeclaration":3196,"src":"18498:76:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4705,"name":"_randomAttackStrengthPlayer1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"18577:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18498:107:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4707,"nodeType":"ExpressionStatement","src":"18498:107:13"},{"expression":{"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4708,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"18616:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"id":4715,"indexExpression":{"baseExpression":{"id":4709,"name":"playerTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"18627:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4714,"indexExpression":{"baseExpression":{"expression":{"id":4710,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18643:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18651:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"18643:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4713,"indexExpression":{"hexValue":"30","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18659:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18643:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18627:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18616:47:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage","typeString":"struct AVAXGods.GameToken storage ref"}},"id":4716,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18664:15:13","memberName":"defenseStrength","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"18616:63:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4717,"name":"MAX_ATTACK_DEFEND_STRENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"18695:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4718,"name":"_randomAttackStrengthPlayer1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4687,"src":"18737:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18695:70:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18616:149:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4721,"nodeType":"ExpressionStatement","src":"18616:149:13"},{"assignments":[4723],"declarations":[{"constant":false,"id":4723,"mutability":"mutable","name":"_randomAttackStrengthPlayer2","nameLocation":"18786:28:13","nodeType":"VariableDeclaration","scope":4758,"src":"18778:36:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"18778:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4731,"initialValue":{"arguments":[{"id":4725,"name":"MAX_ATTACK_DEFEND_STRENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"18848:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"expression":{"id":4726,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18889:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18897:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"18889:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4729,"indexExpression":{"hexValue":"31","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18905:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18889:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4724,"name":"_createRandomNum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"18817:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18817:101:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18778:140:13"},{"expression":{"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4732,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"18929:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"id":4739,"indexExpression":{"baseExpression":{"id":4733,"name":"playerTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"18940:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4738,"indexExpression":{"baseExpression":{"expression":{"id":4734,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"18956:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18964:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"18956:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4737,"indexExpression":{"hexValue":"31","id":4736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18972:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18956:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18940:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18929:47:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage","typeString":"struct AVAXGods.GameToken storage ref"}},"id":4740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18991:14:13","memberName":"attackStrength","nodeType":"MemberAccess","referencedDeclaration":3196,"src":"18929:76:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4741,"name":"_randomAttackStrengthPlayer2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"19008:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18929:107:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4743,"nodeType":"ExpressionStatement","src":"18929:107:13"},{"expression":{"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4744,"name":"gameTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"19047:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_GameToken_$3200_storage_$dyn_storage","typeString":"struct AVAXGods.GameToken storage ref[] storage ref"}},"id":4751,"indexExpression":{"baseExpression":{"id":4745,"name":"playerTokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"19058:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4750,"indexExpression":{"baseExpression":{"expression":{"id":4746,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"19074:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19082:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"19074:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4749,"indexExpression":{"hexValue":"31","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19090:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19074:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19058:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19047:47:13","typeDescriptions":{"typeIdentifier":"t_struct$_GameToken_$3200_storage","typeString":"struct AVAXGods.GameToken storage ref"}},"id":4752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"19095:15:13","memberName":"defenseStrength","nodeType":"MemberAccess","referencedDeclaration":3199,"src":"19047:63:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"MAX_ATTACK_DEFEND_STRENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3140,"src":"19126:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4754,"name":"_randomAttackStrengthPlayer2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"19168:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19126:70:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19047:149:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4757,"nodeType":"ExpressionStatement","src":"19047:149:13"}]},"documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"14905:122:13","text":"@dev Resolve battle function to determine winner and loser of battle\n @param _battle battle; battle to resolve"},"id":4759,"implemented":true,"kind":"function","modifiers":[],"name":"_resolveBattle","nameLocation":"15042:14:13","nodeType":"FunctionDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"_battle","nameLocation":"15071:7:13","nodeType":"VariableDeclaration","scope":4759,"src":"15057:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":4278,"nodeType":"UserDefinedTypeName","pathNode":{"id":4277,"name":"Battle","nameLocations":["15057:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"15057:6:13"},"referencedDeclaration":3240,"src":"15057:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"src":"15056:23:13"},"returnParameters":{"id":4281,"nodeType":"ParameterList","parameters":[],"src":"15089:0:13"},"scope":5078,"src":"15033:4171:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4814,"nodeType":"Block","src":"19266:393:13","statements":[{"assignments":[4766],"declarations":[{"constant":false,"id":4766,"mutability":"mutable","name":"_battle","nameLocation":"19291:7:13","nodeType":"VariableDeclaration","scope":4814,"src":"19277:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":4765,"nodeType":"UserDefinedTypeName","pathNode":{"id":4764,"name":"Battle","nameLocations":["19277:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"19277:6:13"},"referencedDeclaration":3240,"src":"19277:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"id":4770,"initialValue":{"arguments":[{"id":4768,"name":"_battleName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"19311:11:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4767,"name":"getBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"19301:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (string memory) view returns (struct AVAXGods.Battle memory)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19301:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"nodeType":"VariableDeclarationStatement","src":"19277:46:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4772,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"19356:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19364:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"19356:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4775,"indexExpression":{"hexValue":"30","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19372:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19356:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4776,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19378:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19382:6:13","memberName":"sender","nodeType":"MemberAccess","src":"19378:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19356:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4779,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"19409:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19417:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"19409:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4782,"indexExpression":{"hexValue":"31","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19409:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4783,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19431:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19435:6:13","memberName":"sender","nodeType":"MemberAccess","src":"19431:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19409:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19356:85:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520617265206e6f7420696e207468697320626174746c6521","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19456:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb8312fb3e8387edbfcef33c574ed85b30fb9d1826f3cefc1e785c7de5012f83","typeString":"literal_string \"You are not in this battle!\""},"value":"You are not in this battle!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb8312fb3e8387edbfcef33c574ed85b30fb9d1826f3cefc1e785c7de5012f83","typeString":"literal_string \"You are not in this battle!\""}],"id":4771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19334:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19334:162:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4789,"nodeType":"ExpressionStatement","src":"19334:162:13"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":4790,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"19509:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19517:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"19509:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4794,"indexExpression":{"hexValue":"30","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19525:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19509:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4795,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19531:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19535:6:13","memberName":"sender","nodeType":"MemberAccess","src":"19531:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19509:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"baseExpression":{"expression":{"id":4806,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"19623:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4807,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19631:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"19623:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4809,"indexExpression":{"hexValue":"30","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19639:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19623:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4810,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"19643:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4805,"name":"_endBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"19612:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Battle_$3240_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (address,struct AVAXGods.Battle memory) returns (struct AVAXGods.Battle memory)"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19612:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19509:142:13","trueExpression":{"arguments":[{"baseExpression":{"expression":{"id":4799,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"19568:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19576:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"19568:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4802,"indexExpression":{"hexValue":"31","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19584:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19568:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4803,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"19588:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4798,"name":"_endBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4943,"src":"19557:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_struct$_Battle_$3240_memory_ptr_$returns$_t_struct$_Battle_$3240_memory_ptr_$","typeString":"function (address,struct AVAXGods.Battle memory) returns (struct AVAXGods.Battle memory)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19557:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4813,"nodeType":"ExpressionStatement","src":"19509:142:13"}]},"functionSelector":"996d7bea","id":4815,"implemented":true,"kind":"function","modifiers":[],"name":"quitBattle","nameLocation":"19221:10:13","nodeType":"FunctionDefinition","parameters":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4761,"mutability":"mutable","name":"_battleName","nameLocation":"19246:11:13","nodeType":"VariableDeclaration","scope":4815,"src":"19232:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4760,"name":"string","nodeType":"ElementaryTypeName","src":"19232:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19231:27:13"},"returnParameters":{"id":4763,"nodeType":"ParameterList","parameters":[],"src":"19266:0:13"},"scope":5078,"src":"19212:447:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4942,"nodeType":"Block","src":"19949:910:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4828,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"19982:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19990:12:13","memberName":"battleStatus","nodeType":"MemberAccess","referencedDeclaration":3220,"src":"19982:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4830,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"20006:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$3187_$","typeString":"type(enum AVAXGods.BattleStatus)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20019:5:13","memberName":"ENDED","nodeType":"MemberAccess","referencedDeclaration":3186,"src":"20006:18:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"src":"19982:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426174746c6520616c726561647920656e646564","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20039:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e3ea1fdc906e862393ab47635e2c950f9c5ac34ffb6cb90c5527bb068a21acd","typeString":"literal_string \"Battle already ended\""},"value":"Battle already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e3ea1fdc906e862393ab47635e2c950f9c5ac34ffb6cb90c5527bb068a21acd","typeString":"literal_string \"Battle already ended\""}],"id":4827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19960:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19960:112:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4835,"nodeType":"ExpressionStatement","src":"19960:112:13"},{"expression":{"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4836,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20122:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20130:12:13","memberName":"battleStatus","nodeType":"MemberAccess","referencedDeclaration":3220,"src":"20122:20:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4839,"name":"BattleStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"20145:12:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BattleStatus_$3187_$","typeString":"type(enum AVAXGods.BattleStatus)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20158:5:13","memberName":"ENDED","nodeType":"MemberAccess","referencedDeclaration":3186,"src":"20145:18:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"src":"20122:41:13","typeDescriptions":{"typeIdentifier":"t_enum$_BattleStatus_$3187","typeString":"enum AVAXGods.BattleStatus"}},"id":4842,"nodeType":"ExpressionStatement","src":"20122:41:13"},{"expression":{"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4843,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20174:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20182:6:13","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":3239,"src":"20174:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4846,"name":"battleEnder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"20191:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20174:28:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4848,"nodeType":"ExpressionStatement","src":"20174:28:13"},{"expression":{"arguments":[{"expression":{"id":4850,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20226:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20234:4:13","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3226,"src":"20226:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4852,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20240:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}],"id":4849,"name":"updateBattle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"20213:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_struct$_Battle_$3240_memory_ptr_$returns$__$","typeString":"function (string memory,struct AVAXGods.Battle memory)"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20213:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4854,"nodeType":"ExpressionStatement","src":"20213:35:13"},{"assignments":[4856],"declarations":[{"constant":false,"id":4856,"mutability":"mutable","name":"p1","nameLocation":"20266:2:13","nodeType":"VariableDeclaration","scope":4942,"src":"20261:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint","nodeType":"ElementaryTypeName","src":"20261:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4863,"initialValue":{"baseExpression":{"id":4857,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"20271:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4862,"indexExpression":{"baseExpression":{"expression":{"id":4858,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20282:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20290:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"20282:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4861,"indexExpression":{"hexValue":"30","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20298:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20282:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20271:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20261:40:13"},{"assignments":[4865],"declarations":[{"constant":false,"id":4865,"mutability":"mutable","name":"p2","nameLocation":"20317:2:13","nodeType":"VariableDeclaration","scope":4942,"src":"20312:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint","nodeType":"ElementaryTypeName","src":"20312:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4872,"initialValue":{"baseExpression":{"id":4866,"name":"playerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"20322:10:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4871,"indexExpression":{"baseExpression":{"expression":{"id":4867,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20333:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20341:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"20333:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4870,"indexExpression":{"hexValue":"31","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20349:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20333:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20322:30:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20312:40:13"},{"expression":{"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4873,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"20365:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4875,"indexExpression":{"id":4874,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"20373:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20365:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20377:8:13","memberName":"inBattle","nodeType":"MemberAccess","referencedDeclaration":3215,"src":"20365:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20388:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"20365:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"ExpressionStatement","src":"20365:28:13"},{"expression":{"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4880,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"20404:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4882,"indexExpression":{"id":4881,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"20412:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20404:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20416:12:13","memberName":"playerHealth","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"20404:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3235","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20431:2:13","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"20404:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4886,"nodeType":"ExpressionStatement","src":"20404:29:13"},{"expression":{"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4887,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"20444:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4889,"indexExpression":{"id":4888,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4856,"src":"20452:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20444:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20456:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"20444:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20469:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"20444:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4893,"nodeType":"ExpressionStatement","src":"20444:27:13"},{"expression":{"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4894,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"20484:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4896,"indexExpression":{"id":4895,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"20492:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20484:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20496:8:13","memberName":"inBattle","nodeType":"MemberAccess","referencedDeclaration":3215,"src":"20484:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20507:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"20484:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4900,"nodeType":"ExpressionStatement","src":"20484:28:13"},{"expression":{"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4901,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"20523:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4903,"indexExpression":{"id":4902,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"20531:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20523:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20535:12:13","memberName":"playerHealth","nodeType":"MemberAccess","referencedDeclaration":3212,"src":"20523:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3235","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20550:2:13","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"20523:29:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4907,"nodeType":"ExpressionStatement","src":"20523:29:13"},{"expression":{"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4908,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"20563:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Player_$3216_storage_$dyn_storage","typeString":"struct AVAXGods.Player storage ref[] storage ref"}},"id":4910,"indexExpression":{"id":4909,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"20571:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20563:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$3216_storage","typeString":"struct AVAXGods.Player storage ref"}},"id":4911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"20575:10:13","memberName":"playerMana","nodeType":"MemberAccess","referencedDeclaration":3209,"src":"20563:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3130","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20588:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"20563:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4914,"nodeType":"ExpressionStatement","src":"20563:27:13"},{"assignments":[4916],"declarations":[{"constant":false,"id":4916,"mutability":"mutable","name":"_battleLoser","nameLocation":"20611:12:13","nodeType":"VariableDeclaration","scope":4942,"src":"20603:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4915,"name":"address","nodeType":"ElementaryTypeName","src":"20603:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4932,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"battleEnder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"20626:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"expression":{"id":4918,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20641:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20649:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"20641:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4921,"indexExpression":{"hexValue":"30","id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20657:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20641:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20626:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"expression":{"id":4927,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20709:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20717:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"20709:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4930,"indexExpression":{"hexValue":"30","id":4929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20725:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20709:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"20626:101:13","trueExpression":{"baseExpression":{"expression":{"id":4923,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20675:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20683:7:13","memberName":"players","nodeType":"MemberAccess","referencedDeclaration":3231,"src":"20675:15:13","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$2_memory_ptr","typeString":"address[2] memory"}},"id":4926,"indexExpression":{"hexValue":"31","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20691:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20675:18:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20603:124:13"},{"eventCall":{"arguments":[{"expression":{"id":4934,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20757:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"id":4935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20765:4:13","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":3226,"src":"20757:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4936,"name":"battleEnder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"20771:11:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4937,"name":"_battleLoser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"20784:12:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4933,"name":"BattleEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"20745:11:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20745:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4939,"nodeType":"EmitStatement","src":"20740:57:13"},{"expression":{"id":4940,"name":"_battle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"20844:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle memory"}},"functionReturnParameters":4826,"id":4941,"nodeType":"Return","src":"20837:14:13"}]},"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"19667:154:13","text":"@dev internal function to end the battle\n @param battleEnder winner address\n @param _battle battle; taken from attackOrDefend function"},"id":4943,"implemented":true,"kind":"function","modifiers":[],"name":"_endBattle","nameLocation":"19836:10:13","nodeType":"FunctionDefinition","parameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"battleEnder","nameLocation":"19865:11:13","nodeType":"VariableDeclaration","scope":4943,"src":"19857:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4817,"name":"address","nodeType":"ElementaryTypeName","src":"19857:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4821,"mutability":"mutable","name":"_battle","nameLocation":"19901:7:13","nodeType":"VariableDeclaration","scope":4943,"src":"19887:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":4820,"nodeType":"UserDefinedTypeName","pathNode":{"id":4819,"name":"Battle","nameLocations":["19887:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"19887:6:13"},"referencedDeclaration":3240,"src":"19887:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"src":"19846:69:13"},"returnParameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4943,"src":"19934:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_memory_ptr","typeString":"struct AVAXGods.Battle"},"typeName":{"id":4824,"nodeType":"UserDefinedTypeName","pathNode":{"id":4823,"name":"Battle","nameLocations":["19934:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":3240,"src":"19934:6:13"},"referencedDeclaration":3240,"src":"19934:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_Battle_$3240_storage_ptr","typeString":"struct AVAXGods.Battle"}},"visibility":"internal"}],"src":"19933:15:13"},"scope":5078,"src":"19827:1032:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5037,"nodeType":"Block","src":"21000:507:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"21015:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21021:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21015:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4956,"nodeType":"IfStatement","src":"21011:50:13","trueBody":{"id":4955,"nodeType":"Block","src":"21024:37:13","statements":[{"expression":{"hexValue":"30","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21046:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":4949,"id":4954,"nodeType":"Return","src":"21039:10:13"}]}},{"assignments":[4958],"declarations":[{"constant":false,"id":4958,"mutability":"mutable","name":"j","nameLocation":"21079:1:13","nodeType":"VariableDeclaration","scope":5037,"src":"21071:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4957,"name":"uint256","nodeType":"ElementaryTypeName","src":"21071:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4960,"initialValue":{"id":4959,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"21083:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21071:14:13"},{"assignments":[4962],"declarations":[{"constant":false,"id":4962,"mutability":"mutable","name":"len","nameLocation":"21104:3:13","nodeType":"VariableDeclaration","scope":5037,"src":"21096:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4961,"name":"uint256","nodeType":"ElementaryTypeName","src":"21096:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4963,"nodeType":"VariableDeclarationStatement","src":"21096:11:13"},{"body":{"id":4974,"nodeType":"Block","src":"21133:54:13","statements":[{"expression":{"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"21148:5:13","subExpression":{"id":4967,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"21148:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4969,"nodeType":"ExpressionStatement","src":"21148:5:13"},{"expression":{"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4970,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"21168:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21173:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"21168:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4973,"nodeType":"ExpressionStatement","src":"21168:7:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4964,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"21125:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21130:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21125:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4975,"nodeType":"WhileStatement","src":"21118:69:13"},{"assignments":[4977],"declarations":[{"constant":false,"id":4977,"mutability":"mutable","name":"bstr","nameLocation":"21210:4:13","nodeType":"VariableDeclaration","scope":5037,"src":"21197:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4976,"name":"bytes","nodeType":"ElementaryTypeName","src":"21197:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4982,"initialValue":{"arguments":[{"id":4980,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"21227:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"21217:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4978,"name":"bytes","nodeType":"ElementaryTypeName","src":"21221:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21217:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"21197:34:13"},{"assignments":[4984],"declarations":[{"constant":false,"id":4984,"mutability":"mutable","name":"k","nameLocation":"21250:1:13","nodeType":"VariableDeclaration","scope":5037,"src":"21242:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"21242:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4986,"initialValue":{"id":4985,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4962,"src":"21254:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21242:15:13"},{"body":{"id":5030,"nodeType":"Block","src":"21284:186:13","statements":[{"expression":{"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4990,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"21299:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4991,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"21303:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21307:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"21303:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21299:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4995,"nodeType":"ExpressionStatement","src":"21299:9:13"},{"assignments":[4997],"declarations":[{"constant":false,"id":4997,"mutability":"mutable","name":"temp","nameLocation":"21329:4:13","nodeType":"VariableDeclaration","scope":5030,"src":"21323:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4996,"name":"uint8","nodeType":"ElementaryTypeName","src":"21323:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5012,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21337:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"21348:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"21354:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130","id":5003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21359:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"21354:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21353:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21365:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"21353:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21348:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21342:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4999,"name":"uint8","nodeType":"ElementaryTypeName","src":"21342:5:13","typeDescriptions":{}}},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21342:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"21337:31:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":5011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21336:33:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"21323:46:13"},{"assignments":[5014],"declarations":[{"constant":false,"id":5014,"mutability":"mutable","name":"b1","nameLocation":"21391:2:13","nodeType":"VariableDeclaration","scope":5030,"src":"21384:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5013,"name":"bytes1","nodeType":"ElementaryTypeName","src":"21384:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5019,"initialValue":{"arguments":[{"id":5017,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"21403:4:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21396:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5015,"name":"bytes1","nodeType":"ElementaryTypeName","src":"21396:6:13","typeDescriptions":{}}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21396:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"21384:24:13"},{"expression":{"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5020,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"21423:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5022,"indexExpression":{"id":5021,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"21428:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"21423:7:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5023,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5014,"src":"21433:2:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"21423:12:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5025,"nodeType":"ExpressionStatement","src":"21423:12:13"},{"expression":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5026,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"21450:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21456:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"21450:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5029,"nodeType":"ExpressionStatement","src":"21450:8:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4987,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4945,"src":"21275:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21281:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21275:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5031,"nodeType":"WhileStatement","src":"21268:202:13"},{"expression":{"arguments":[{"id":5034,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"21494:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21487:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5032,"name":"string","nodeType":"ElementaryTypeName","src":"21487:6:13","typeDescriptions":{}}},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21487:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4949,"id":5036,"nodeType":"Return","src":"21480:19:13"}]},"id":5038,"implemented":true,"kind":"function","modifiers":[],"name":"uintToStr","nameLocation":"20910:9:13","nodeType":"FunctionDefinition","parameters":{"id":4946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4945,"mutability":"mutable","name":"_i","nameLocation":"20938:2:13","nodeType":"VariableDeclaration","scope":5038,"src":"20930:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"20930:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20919:28:13"},"returnParameters":{"id":4949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4948,"mutability":"mutable","name":"_uintAsString","nameLocation":"20985:13:13","nodeType":"VariableDeclaration","scope":5038,"src":"20971:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4947,"name":"string","nodeType":"ElementaryTypeName","src":"20971:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20970:29:13"},"scope":5078,"src":"20901:606:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5058,"nodeType":"Block","src":"21620:106:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":5049,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"21675:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"2f","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21684:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},"value":"/"},{"arguments":[{"id":5052,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"21699:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5051,"name":"uintToStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"21689:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21689:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e6a736f6e","id":5054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21709:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""},"value":".json"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527","typeString":"literal_string \"/\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972","typeString":"literal_string \".json\""}],"expression":{"id":5047,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21658:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21662:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"21658:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21658:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21651:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5045,"name":"string","nodeType":"ElementaryTypeName","src":"21651:6:13","typeDescriptions":{}}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21651:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5044,"id":5057,"nodeType":"Return","src":"21631:87:13"}]},"functionSelector":"c87b56dd","id":5059,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"21558:8:13","nodeType":"FunctionDefinition","parameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"tokenId","nameLocation":"21575:7:13","nodeType":"VariableDeclaration","scope":5059,"src":"21567:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"21567:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21566:17:13"},"returnParameters":{"id":5044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5059,"src":"21605:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5042,"name":"string","nodeType":"ElementaryTypeName","src":"21605:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21604:15:13"},"scope":5078,"src":"21549:177:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5076,"nodeType":"Block","src":"22013:87:13","statements":[]},"id":5077,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"21811:20:13","nodeType":"FunctionDefinition","parameters":{"id":5074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5061,"mutability":"mutable","name":"operator","nameLocation":"21850:8:13","nodeType":"VariableDeclaration","scope":5077,"src":"21842:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5060,"name":"address","nodeType":"ElementaryTypeName","src":"21842:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5063,"mutability":"mutable","name":"from","nameLocation":"21877:4:13","nodeType":"VariableDeclaration","scope":5077,"src":"21869:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5062,"name":"address","nodeType":"ElementaryTypeName","src":"21869:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5065,"mutability":"mutable","name":"to","nameLocation":"21900:2:13","nodeType":"VariableDeclaration","scope":5077,"src":"21892:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5064,"name":"address","nodeType":"ElementaryTypeName","src":"21892:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5068,"mutability":"mutable","name":"ids","nameLocation":"21930:3:13","nodeType":"VariableDeclaration","scope":5077,"src":"21913:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"21913:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5067,"nodeType":"ArrayTypeName","src":"21913:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5071,"mutability":"mutable","name":"amounts","nameLocation":"21961:7:13","nodeType":"VariableDeclaration","scope":5077,"src":"21944:24:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"21944:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5070,"nodeType":"ArrayTypeName","src":"21944:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5073,"mutability":"mutable","name":"data","nameLocation":"21992:4:13","nodeType":"VariableDeclaration","scope":5077,"src":"21979:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5072,"name":"bytes","nodeType":"ElementaryTypeName","src":"21979:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21831:172:13"},"returnParameters":{"id":5075,"nodeType":"ParameterList","parameters":[],"src":"22013:0:13"},"scope":5078,"src":"21802:298:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5079,"src":"507:21596:13","usedErrors":[13,18,249,254,259,266,271,276,283],"usedEvents":[24,1355,1370,1379,1386,3438,3446,3454,3460,3470,3476]}],"src":"35:22070:13"},"id":13}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol":{"ERC1155Supply":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","exists(uint256)":"4f558e79","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0x1cebc792116430641b9ec887f245ce5dde0ace17a8d5fc38e03fd087e061b537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21fea8da292377bdc2930254fd5536c1d2be84a1fcb6268527ab8dd1142b23ee\",\"dweb:/ipfs/QmS5AwrNHbvcFB7TmwcXZNXPgMXZxRxmmcey4eP8YTvBgX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220edbc73be4f033202e858bf0ae65134701f31ae75b886d192897e09f8bda5261564736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xBC PUSH20 0xBE4F033202E858BF0AE65134701F31AE75B886D1 SWAP3 DUP10 PUSH31 0x9F8BDA5261564736F6C634300081800330000000000000000000000000000 ","sourceMap":"276:4526:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220edbc73be4f033202e858bf0ae65134701f31ae75b886d192897e09f8bda5261564736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xBC PUSH20 0xBE4F033202E858BF0AE65134701F31AE75B886D1 SWAP3 DUP10 PUSH31 0x9F8BDA5261564736F6C634300081800330000000000000000000000000000 ","sourceMap":"276:4526:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b90462cec09126e3ce3eacb5a84c55d10765d056d0ee15bc270c046c5c65bbcb64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 DIV PUSH3 0xCEC091 0x26 0xE3 0xCE RETURNDATACOPY 0xAC 0xB5 0xA8 0x4C SSTORE 0xD1 SMOD PUSH6 0xD056D0EE15BC 0x27 0xC DIV PUSH13 0x5C65BBCB64736F6C6343000818 STOP CALLER ","sourceMap":"1245:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b90462cec09126e3ce3eacb5a84c55d10765d056d0ee15bc270c046c5c65bbcb64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 DIV PUSH3 0xCEC091 0x26 0xE3 0xCE RETURNDATACOPY 0xAC 0xB5 0xA8 0x4C SSTORE 0xD1 SMOD PUSH6 0xD056D0EE15BC 0x27 0xC DIV PUSH13 0x5C65BBCB64736F6C6343000818 STOP CALLER ","sourceMap":"1245:2685:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220639825d6c6f9eb714f309a133aa4141be7a444661fbddff6e93ae3555982186f64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x9825D6C6 0xF9 0xEB PUSH18 0x4F309A133AA4141BE7A444661FBDDFF6E93A 0xE3 SSTORE MSIZE DUP3 XOR PUSH16 0x64736F6C634300081800330000000000 ","sourceMap":"203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220639825d6c6f9eb714f309a133aa4141be7a444661fbddff6e93ae3555982186f64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x9825D6C6 0xF9 0xEB PUSH18 0x4F309A133AA4141BE7A444661FBDDFF6E93A 0xE3 SSTORE MSIZE DUP3 XOR PUSH16 0x64736F6C634300081800330000000000 ","sourceMap":"203:14914:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"contracts/AvaxGods.sol":{"AVAXGods":{"abi":[{"inputs":[{"internalType":"string","name":"_metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"battleName","type":"string"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":true,"internalType":"address","name":"loser","type":"address"}],"name":"BattleEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"battleName","type":"string"},{"indexed":true,"internalType":"bool","name":"isFirstMove","type":"bool"}],"name":"BattleMove","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"battleName","type":"string"},{"indexed":true,"internalType":"address","name":"player1","type":"address"},{"indexed":true,"internalType":"address","name":"player2","type":"address"}],"name":"NewBattle","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"attackStrength","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"defenseStrength","type":"uint256"}],"name":"NewGameToken","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"NewPlayer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[2]","name":"damagedPlayers","type":"address[2]"}],"name":"RoundEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"CELESTION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEVIL","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FIREBIRD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GRIFFIN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"KAMO","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"KUKULKAN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_ATTACK_DEFEND_STRENGTH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"_choice","type":"uint8"},{"internalType":"string","name":"_battleName","type":"string"}],"name":"attackOrDefendChoice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"battles","outputs":[{"internalType":"enum AVAXGods.BattleStatus","name":"battleStatus","type":"uint8"},{"internalType":"bytes32","name":"battleHash","type":"bytes32"},{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"winner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"createBattle","outputs":[{"components":[{"internalType":"enum AVAXGods.BattleStatus","name":"battleStatus","type":"uint8"},{"internalType":"bytes32","name":"battleHash","type":"bytes32"},{"internalType":"string","name":"name","type":"string"},{"internalType":"address[2]","name":"players","type":"address[2]"},{"internalType":"uint8[2]","name":"moves","type":"uint8[2]"},{"internalType":"address","name":"winner","type":"address"}],"internalType":"struct AVAXGods.Battle","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"createRandomGameToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"gameTokens","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"attackStrength","type":"uint256"},{"internalType":"uint256","name":"defenseStrength","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllBattles","outputs":[{"components":[{"internalType":"enum AVAXGods.BattleStatus","name":"battleStatus","type":"uint8"},{"internalType":"bytes32","name":"battleHash","type":"bytes32"},{"internalType":"string","name":"name","type":"string"},{"internalType":"address[2]","name":"players","type":"address[2]"},{"internalType":"uint8[2]","name":"moves","type":"uint8[2]"},{"internalType":"address","name":"winner","type":"address"}],"internalType":"struct AVAXGods.Battle[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllPlayerTokens","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"attackStrength","type":"uint256"},{"internalType":"uint256","name":"defenseStrength","type":"uint256"}],"internalType":"struct AVAXGods.GameToken[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllPlayers","outputs":[{"components":[{"internalType":"address","name":"playerAddress","type":"address"},{"internalType":"string","name":"playerName","type":"string"},{"internalType":"uint256","name":"playerMana","type":"uint256"},{"internalType":"uint256","name":"playerHealth","type":"uint256"},{"internalType":"bool","name":"inBattle","type":"bool"}],"internalType":"struct AVAXGods.Player[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"getBattle","outputs":[{"components":[{"internalType":"enum AVAXGods.BattleStatus","name":"battleStatus","type":"uint8"},{"internalType":"bytes32","name":"battleHash","type":"bytes32"},{"internalType":"string","name":"name","type":"string"},{"internalType":"address[2]","name":"players","type":"address[2]"},{"internalType":"uint8[2]","name":"moves","type":"uint8[2]"},{"internalType":"address","name":"winner","type":"address"}],"internalType":"struct AVAXGods.Battle","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_battleName","type":"string"}],"name":"getBattleMoves","outputs":[{"internalType":"uint256","name":"P1Move","type":"uint256"},{"internalType":"uint256","name":"P2Move","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getPlayer","outputs":[{"components":[{"internalType":"address","name":"playerAddress","type":"address"},{"internalType":"string","name":"playerName","type":"string"},{"internalType":"uint256","name":"playerMana","type":"uint256"},{"internalType":"uint256","name":"playerHealth","type":"uint256"},{"internalType":"bool","name":"inBattle","type":"bool"}],"internalType":"struct AVAXGods.Player","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getPlayerToken","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"attackStrength","type":"uint256"},{"internalType":"uint256","name":"defenseStrength","type":"uint256"}],"internalType":"struct AVAXGods.GameToken","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"isBattle","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isPlayer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isPlayerToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"joinBattle","outputs":[{"components":[{"internalType":"enum AVAXGods.BattleStatus","name":"battleStatus","type":"uint8"},{"internalType":"bytes32","name":"battleHash","type":"bytes32"},{"internalType":"string","name":"name","type":"string"},{"internalType":"address[2]","name":"players","type":"address[2]"},{"internalType":"uint8[2]","name":"moves","type":"uint8[2]"},{"internalType":"address","name":"winner","type":"address"}],"internalType":"struct AVAXGods.Battle","name":"","type":"tuple"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"players","outputs":[{"internalType":"address","name":"playerAddress","type":"address"},{"internalType":"string","name":"playerName","type":"string"},{"internalType":"uint256","name":"playerMana","type":"uint256"},{"internalType":"uint256","name":"playerHealth","type":"uint256"},{"internalType":"bool","name":"inBattle","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_battleName","type":"string"}],"name":"quitBattle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_gameTokenName","type":"string"}],"name":"registerPlayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newuri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTokenMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":2860,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory_12510":{"entryPoint":2796,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_15702":{"entryPoint":2828,"id":null,"parameterSlots":0,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":2898,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xAE7 JUMPI PUSH3 0x4A6E DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0xB2C JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH3 0xAE7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xAE7 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xAE7 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x73A JUMPI PUSH3 0x74 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH3 0xB2C JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0xAE7 JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0xAD1 JUMPI PUSH1 0x0 DUP4 DUP6 ADD PUSH1 0x20 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x73A JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xAC6 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x719 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0xA84 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0xA0C JUMPI PUSH1 0x0 SWAP2 PUSH3 0xA00 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE JUMPDEST CALLER ISZERO PUSH3 0x9E7 JUMPI PUSH1 0x3 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x73A JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x9DC JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x719 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x989 JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x91F JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH3 0x913 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0x73A JUMPI PUSH1 0x40 MSTORE PUSH3 0x1D9 PUSH3 0xB0C JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x9 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x73A JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x9 SSTORE DUP2 LT ISZERO PUSH3 0x766 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE SWAP3 MLOAD DUP1 MLOAD SWAP5 PUSH1 0x2 SWAP5 SWAP1 SWAP5 SHL PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP7 GT PUSH3 0x73A JUMPI DUP5 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x908 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x719 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x8D2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP8 GT PUSH1 0x1 EQ PUSH3 0x863 JUMPI SWAP6 DUP1 SWAP2 PUSH1 0x3 SWAP7 SWAP8 PUSH1 0x0 SWAP3 PUSH3 0x857 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP8 SHL SHR NOT AND OR DUP6 SSTORE JUMPDEST MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH3 0x73A JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH3 0x2F5 PUSH3 0xB0C JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x8 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH3 0x73A JUMPI PUSH1 0x1 DUP4 ADD DUP1 PUSH1 0x8 SSTORE DUP4 LT ISZERO PUSH3 0x766 JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE DUP2 MLOAD PUSH1 0x5 DUP5 MUL PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP1 MLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x73A JUMPI PUSH1 0x1 PUSH1 0x5 DUP4 MUL DUP5 ADD ADD SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x84C JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x719 JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x80E JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x788 JUMPI SWAP2 DUP2 PUSH1 0x5 SWAP3 PUSH1 0x4 SWAP6 SWAP5 PUSH1 0x80 SWAP8 SWAP9 PUSH1 0x0 SWAP3 PUSH3 0x77C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 DUP4 MUL DUP6 ADD ADD SSTORE JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x2 DUP4 DUP4 MUL DUP6 ADD ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP4 DUP4 MUL DUP6 ADD ADD SSTORE MUL ADD ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH3 0x448 PUSH3 0xAEC JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x45D PUSH3 0xAEC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0xC0 DUP5 ADD SWAP1 DUP2 GT SWAP1 DUP5 GT OR PUSH3 0x73A JUMPI PUSH1 0xC0 DUP4 ADD PUSH1 0x40 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x49F PUSH3 0xB0C JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH3 0x73A JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH3 0x766 JUMPI PUSH1 0xA PUSH1 0x0 MSTORE DUP1 MLOAD PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH3 0x750 JUMPI PUSH1 0x7 DUP5 MUL DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x73A JUMPI DUP3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x72F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x719 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x6D7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x66C JUMPI PUSH1 0x0 SWAP3 PUSH3 0x660 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x63A JUMPI POP POP PUSH1 0x80 DUP3 ADD MLOAD SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH3 0x615 JUMPI PUSH1 0x7 DUP4 MUL DUP5 ADD PUSH1 0x5 DUP2 ADD DUP8 SWAP1 SSTORE PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x3EE2 SWAP1 DUP2 PUSH3 0xB6C DUP3 CODECOPY RETURN JUMPDEST SWAP1 SWAP5 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP9 MLOAD AND SWAP1 PUSH1 0xFF DUP6 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP7 ADD SWAP2 ADD PUSH3 0x5C6 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 PUSH1 0x7 DUP8 MUL DUP6 ADD DUP4 ADD ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH3 0x5AF JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH3 0x592 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x6BE JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x6A4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x5A7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH3 0x696 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x67E JUMP JUMPDEST PUSH3 0x707 SWAP1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH3 0x70E JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0xB52 JUMP JUMPDEST DUP8 PUSH3 0x579 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x6F9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x563 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH3 0x3F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP5 MUL DUP6 ADD ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP6 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH3 0x7F5 JUMPI POP DUP3 PUSH1 0x80 SWAP7 SWAP8 PUSH1 0x4 SWAP7 SWAP6 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0x5 SWAP7 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x7DB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 DUP4 MUL DUP6 ADD ADD SSTORE PUSH3 0x40E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH3 0x7C6 JUMP JUMPDEST DUP3 DUP3 ADD MLOAD DUP9 SSTORE PUSH1 0x1 SWAP1 SWAP8 ADD SWAP7 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH3 0x79D JUMP JUMPDEST PUSH3 0x845 SWAP1 PUSH1 0x1 PUSH1 0x5 DUP6 MUL DUP7 ADD ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x70E JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0xB52 JUMP JUMPDEST DUP6 PUSH3 0x3CD JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x3B9 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH3 0x2A6 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP8 AND SWAP2 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x8B9 JUMPI POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP10 PUSH1 0x3 SWAP10 SWAP11 SWAP5 LT PUSH3 0x8A0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH3 0x2BA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP10 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH3 0x892 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x877 JUMP JUMPDEST PUSH3 0x901 SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP10 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP11 LT PUSH3 0x70E JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0xB52 JUMP JUMPDEST DUP7 PUSH3 0x286 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x272 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP3 DUP1 PUSH3 0x19C JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH3 0x970 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH3 0x956 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH3 0x1B2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH3 0x947 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x933 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE PUSH3 0x9D5 SWAP1 PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x70E JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0xB52 JUMP JUMPDEST DUP3 PUSH3 0x180 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 ADD MLOAD DUP4 PUSH3 0xEA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4A4E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 POP PUSH1 0x1F NOT DUP5 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0xA6B JUMPI POP SWAP1 DUP4 PUSH1 0x1 SWAP5 SWAP4 SWAP3 LT PUSH3 0xA51 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0xFF JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP4 DUP1 PUSH3 0xA43 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0xA2C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH3 0xABF SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x4A4E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x70E JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH3 0xB52 JUMP JUMPDEST DUP3 PUSH3 0xD1 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xBD JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH3 0x87 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x73A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x73A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x73A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH3 0xB5E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xB52 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x15A3792 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x677AA4E EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x9C95E10 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xDAEA2CD EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x10898E4C EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x1107AE3D EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x16801D17 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x2CA04522 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x579B526D EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x5C12CD4B EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x5C93FC3D EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x606D2E96 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x703730A5 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x845F433B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x996D7BEA EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x9B09CC87 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x9E4ECD11 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x9EC40AA3 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xA1B4F57C EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xBA274956 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xBF034B69 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xBF103A4D EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xD2198CC5 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xDE96CEFC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xEFA1C482 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xF1DA7339 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20F JUMPI PUSH4 0xF71D96CB EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E62 JUMP JUMPDEST PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0x199D JUMP JUMPDEST PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH2 0xA7D JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FC JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH2 0x36F PUSH2 0x349 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x38B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37B JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x3B4 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x378 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP1 PUSH2 0x3D7 DUP5 MLOAD PUSH1 0x80 DUP6 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH1 0x9 SLOAD PUSH2 0x412 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP1 PUSH2 0x420 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x5E6 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 DUP2 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x4B7 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP3 DUP5 DUP5 ADD SWAP1 DUP6 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x48B JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x4A7 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x3C0 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x4 DUP9 PUSH1 0x1 SWAP3 PUSH2 0x4CA DUP6 SWAP12 SWAP11 SWAP9 SWAP12 PUSH2 0x1EE8 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP4 SWAP6 SWAP7 PUSH2 0x452 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x2FC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x510 DUP2 PUSH2 0x4DF JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x54E JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x53D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x532 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x52B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x614 DUP3 PUSH2 0x595 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x614 DUP3 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x614 DUP3 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x614 DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x590 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2FC JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x66F DUP3 PUSH2 0x63D JUMP JUMPDEST SWAP3 PUSH2 0x67D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5E6 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2FC JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2FC JUMPI PUSH2 0x6C9 SWAP2 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x6DA CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x6E2 PUSH2 0x2CAE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x590 JUMPI PUSH2 0x706 DUP2 PUSH2 0x701 PUSH1 0x2 SLOAD PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x22A2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x748 JUMPI POP DUP2 SWAP1 PUSH2 0x738 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x73D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP4 SWAP1 SWAP2 SWAP1 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x7B3 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x79A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x78F JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x77C JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH2 0x80A PUSH2 0x805 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x6C9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x2 SLOAD PUSH2 0x865 DUP2 PUSH2 0x1003 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x1 EQ PUSH2 0x89F JUMPI JUMPDEST PUSH2 0x89B DUP5 PUSH2 0x88F DUP2 DUP9 SUB DUP3 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x830 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP PUSH1 0x2 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x8CC JUMPI POP POP POP DUP2 PUSH2 0x89B SWAP4 PUSH2 0x88F SWAP3 DUP3 ADD ADD SWAP4 PUSH2 0x87F JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 POP PUSH2 0x88F DUP2 PUSH2 0x89B PUSH2 0x87F JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0x923 PUSH2 0x91E PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C0 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH2 0x80A PUSH2 0x94A CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x959 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x959 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x2 DUP4 LT PUSH2 0x98D JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0xFF DUP4 MLOAD AND DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST SWAP1 PUSH2 0x100 SWAP2 PUSH2 0x9B7 DUP3 DUP3 MLOAD PUSH2 0x96F JUMP JUMPDEST PUSH2 0x9DB PUSH1 0x20 SWAP4 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD SWAP1 DUP1 PUSH1 0x40 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 DUP5 ADD PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0xA20 JUMPI POP POP POP POP SWAP1 PUSH1 0xE0 PUSH1 0xA0 DUP4 PUSH2 0xA10 PUSH1 0x80 PUSH2 0x6C9 SWAP7 ADD MLOAD DUP4 DUP7 ADD SWAP1 PUSH2 0x97C JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 DUP3 ADD PUSH2 0x9EA JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x6C9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9A7 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0xA69 PUSH2 0xA64 CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x9A7 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0xAAC CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0xAB4 PUSH2 0x203B JUMP JUMPDEST POP PUSH2 0xAC6 PUSH2 0xAC1 CALLER PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xADE PUSH2 0xAD9 PUSH2 0xAD5 DUP4 PUSH2 0x2028 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB02 DUP2 PUSH2 0xAF4 DUP6 DUP6 PUSH2 0x830 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x5E6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0xB0E PUSH2 0x630 JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xB20 PUSH2 0x630 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB34 PUSH2 0x607 JUMP JUMPDEST SWAP4 PUSH1 0x0 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE DUP3 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xB61 PUSH1 0xA SLOAD SWAP2 PUSH2 0x2002 JUMP JUMPDEST SSTORE PUSH2 0xB6B DUP2 PUSH2 0x248A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x590 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2FC JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0xBA8 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP4 PUSH2 0xBB6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x5E6 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2FC JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xBDF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0xBD1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0xC07 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x301 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP5 GT PUSH2 0x2FC JUMPI PUSH2 0xC33 PUSH1 0x4 SWAP5 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0xC4B SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0xC63 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x658 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0xCF2 JUMPI JUMPDEST PUSH2 0xCC5 JUMPI DUP4 AND ISZERO PUSH2 0xCAD JUMPI ISZERO PUSH2 0xC96 JUMPI PUSH2 0xC94 SWAP6 POP PUSH2 0x342D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP10 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC7A JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD36 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD28 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x6C9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0xD16 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x2FC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x2FC JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xD97 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP3 PUSH2 0xDA5 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5E6 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 PUSH1 0x20 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2FC JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xDFE JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x89B SWAP2 PUSH2 0xDEC PUSH2 0xDF2 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD4A JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xE0A DUP5 PUSH2 0x317 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xDC5 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x80 DUP1 PUSH2 0xE8A PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0xA0 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0xECD PUSH2 0xEC8 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xE61 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH1 0xA SLOAD PUSH2 0xEFF DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP1 PUSH2 0xF0D PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x5E6 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 DUP2 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xFA4 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP3 DUP5 DUP5 ADD SWAP1 DUP6 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0xF78 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0xF94 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x9A7 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x7 DUP9 PUSH1 0x1 SWAP3 PUSH2 0xFB7 DUP6 SWAP12 SWAP11 SWAP9 SWAP12 PUSH2 0x20B5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP4 SWAP6 SWAP7 PUSH2 0xF3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1033 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x101D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1012 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x1050 DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x10BE JUMPI POP PUSH1 0x1 EQ PUSH2 0x107F JUMPI JUMPDEST POP POP POP PUSH2 0x614 SWAP3 POP SUB DUP4 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x10A6 JUMPI POP POP PUSH2 0x614 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x1070 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x108D JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x614 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x1070 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x110A PUSH2 0x1141 SWAP2 PUSH2 0xFDF JUMP JUMPDEST POP PUSH1 0xFF DUP2 SLOAD AND SWAP1 PUSH2 0x1157 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x1126 PUSH1 0x2 DUP3 ADD PUSH2 0x103D JUMP JUMPDEST SWAP1 PUSH1 0x6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP7 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD DUP2 PUSH1 0x6 SLOAD PUSH2 0x1199 DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1204 JUMPI POP PUSH1 0x1 EQ PUSH2 0x11C9 JUMPI JUMPDEST PUSH2 0x89B DUP6 PUSH2 0x88F DUP2 DUP10 SUB DUP3 PUSH2 0x5E6 JUMP JUMPDEST SWAP3 SWAP5 POP PUSH1 0x6 DUP4 MSTORE DUP5 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x11F1 JUMPI POP POP POP DUP2 PUSH2 0x89B SWAP4 PUSH2 0x88F SWAP3 DUP3 ADD ADD SWAP4 CODESIZE PUSH2 0x11B9 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 POP PUSH2 0x88F DUP2 PUSH2 0x89B CODESIZE PUSH2 0x11B9 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH2 0x125C PUSH2 0x2CAE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x12D1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x12EA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST PUSH2 0x12F3 CALLER PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x1376 JUMPI PUSH2 0x1341 SWAP1 PUSH1 0x8 SLOAD PUSH2 0x132C PUSH2 0x1309 PUSH2 0x616 JUMP JUMPDEST CALLER DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x26F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2871 JUMP JUMPDEST PUSH32 0x81EF79D1CDA814A60C0FC60792E648A06D9C6BAE67176346D1CC8B63030BFCCD PUSH1 0x40 MLOAD DUP1 PUSH2 0x1371 CALLER SWAP5 DUP3 PUSH2 0x830 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x141B185E595C88185B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x13F1 PUSH2 0xA64 CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 MLOAD AND CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x1492 JUMPI JUMPDEST POP ISZERO PUSH2 0x144D JUMPI DUP3 MLOAD MLOAD AND CALLER DUP2 SUB PUSH2 0x1443 JUMPI POP PUSH2 0x143E PUSH2 0x1431 PUSH2 0xC94 SWAP4 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2D1D JUMP JUMPDEST PUSH2 0xC94 SWAP3 POP PUSH2 0x2D1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420696E207468697320626174746C65210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD MLOAD DUP3 AND CALLER EQ SWAP1 POP CODESIZE PUSH2 0x140E JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x80 PUSH2 0x14B5 PUSH2 0xA64 CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST ADD MLOAD PUSH1 0xFF PUSH1 0x20 DUP2 DUP4 MLOAD AND SWAP3 ADD MLOAD AND SWAP1 PUSH2 0x89B PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0xC94 PUSH2 0x150D CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2871 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0x1523 CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x152B PUSH2 0x203B JUMP JUMPDEST POP PUSH2 0x1535 DUP2 PUSH2 0x2173 JUMP JUMPDEST SWAP1 PUSH2 0x1553 DUP3 MLOAD PUSH2 0x1544 DUP2 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x154D DUP2 PUSH2 0x94F JUMP JUMPDEST ISZERO PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD DUP1 MLOAD MLOAD SWAP1 SWAP2 PUSH2 0x15C8 SWAP2 DUP5 SWAP2 SWAP1 PUSH2 0x1581 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x2A57 JUMP JUMPDEST PUSH2 0x15A1 PUSH2 0x159C PUSH2 0xAD5 PUSH1 0x80 PUSH2 0x1595 CALLER PUSH2 0x2658 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH2 0x15C3 CALLER PUSH2 0x15B4 DUP7 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2FE6 JUMP JUMPDEST DUP1 MLOAD MLOAD PUSH2 0x1613 SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x1604 SWAP1 PUSH2 0x15FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x162C PUSH1 0x4 PUSH2 0x1604 PUSH2 0x15FE PUSH2 0x15E4 PUSH2 0x1431 DUP7 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD SWAP1 MLOAD MLOAD PUSH2 0x164E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH32 0x24187B16C217A79F8D8E6252B542EC6E278FA91304ACD9CFD866F2BBF00BD08 PUSH1 0x40 MLOAD DUP1 PUSH2 0x167E CALLER SWAP6 DUP3 PUSH2 0x830 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA3F JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x16A6 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x2FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0x1731 JUMPI PUSH2 0x16F2 PUSH2 0x1703 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x2FC JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x1786 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 PUSH2 0x1870 DUP3 PUSH2 0x1794 DUP2 PUSH2 0x2173 JUMP JUMPDEST SWAP3 DUP4 MLOAD SWAP4 PUSH2 0x17A1 DUP6 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x17AA DUP6 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x17B7 PUSH1 0x1 DUP1 SWAP7 EQ PUSH2 0x2AED JUMP JUMPDEST PUSH2 0x17D7 PUSH1 0x2 DUP3 MLOAD PUSH2 0x17C7 DUP2 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x17D0 DUP2 PUSH2 0x94F JUMP JUMPDEST EQ ISZERO PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP1 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x184A SWAP3 PUSH1 0xFF SWAP3 PUSH2 0x1843 SWAP3 PUSH2 0x183C SWAP3 PUSH1 0x80 SWAP3 PUSH2 0x1813 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER EQ SWAP2 DUP3 ISZERO PUSH2 0x1939 JUMPI JUMPDEST POP POP PUSH2 0x2BB0 JUMP JUMPDEST ADD MLOAD DUP6 MLOAD MLOAD CALLER SWAP1 PUSH2 0x182C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1642 JUMP JUMPDEST SUB PUSH2 0x1932 JUMPI DUP4 PUSH1 0x0 JUMPDEST AND SWAP1 PUSH2 0x2860 JUMP JUMPDEST MLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST AND ISZERO PUSH2 0x2BFC JUMP JUMPDEST MLOAD MLOAD CALLER SWAP1 PUSH2 0x1860 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1642 JUMP JUMPDEST SUB PUSH2 0x192A JUMPI PUSH1 0xFF PUSH1 0x0 JUMPDEST AND PUSH2 0x313C JUMP JUMPDEST PUSH2 0x18BE PUSH2 0x188D PUSH1 0x80 PUSH2 0x1881 DUP6 PUSH2 0x2173 JUMP JUMPDEST ADD DUP1 MLOAD MLOAD PUSH2 0x1893 SWAP1 PUSH1 0xFF AND JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1918 JUMPI PUSH2 0x18B2 PUSH2 0x188D PUSH2 0x183C PUSH2 0x18AA PUSH1 0x0 PUSH2 0x2C48 JUMP JUMPDEST SWAP4 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1911 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 DUP1 DUP3 SUB PUSH2 0x1909 JUMPI JUMPDEST PUSH2 0x18D0 DUP4 PUSH2 0x2C6D JUMP JUMPDEST SWAP1 ISZERO ISZERO SWAP1 PUSH32 0x54B82B77E7AE55A8E6C9E89DEBA70C7191DEA2A3B08AE647B380E9F981D6A0F8 PUSH1 0x0 DUP1 LOG3 ISZERO PUSH2 0x1900 JUMPI STOP JUMPDEST PUSH2 0xC94 SWAP1 PUSH2 0x325E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x18C7 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH2 0x18B2 PUSH2 0x188D PUSH2 0x183C PUSH2 0x18AA DUP8 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0xFF DUP5 PUSH2 0x186A JUMP JUMPDEST DUP4 DUP11 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER EQ CODESIZE DUP1 PUSH2 0x180C JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x19C7 PUSH2 0x19F7 SWAP2 PUSH2 0x197E JUMP JUMPDEST POP PUSH2 0x19D1 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x80 DUP7 MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH2 0x80A PUSH2 0x1A29 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x2C8D JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x1A4B PUSH1 0x4 CALLDATALOAD PUSH2 0x337E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 SWAP3 PUSH1 0x6 SLOAD PUSH2 0x1A5E DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AE6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1AA5 JUMPI JUMPDEST PUSH1 0x2F PUSH1 0xF8 SHL DUP7 MSTORE PUSH2 0x89B DUP6 PUSH2 0x88F DUP2 PUSH2 0xAF4 PUSH2 0x1A94 PUSH1 0x1 DUP13 ADD DUP11 PUSH2 0x1FEB JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 POP PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1AD3 JUMPI POP POP POP DUP3 ADD SWAP1 SWAP3 ADD SWAP2 DUP2 PUSH2 0xAF4 PUSH2 0x1A94 PUSH2 0x1A75 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP5 ADD DUP9 ADD MSTORE SWAP2 DUP7 ADD SWAP2 DUP2 ADD PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 DUP8 ADD MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP4 ADD ADD SWAP3 POP DUP2 PUSH2 0xAF4 PUSH2 0x1A94 PUSH2 0x1A75 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1B8E PUSH2 0x1B5D PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1B65 PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH1 0x8 SLOAD PUSH2 0x1BB8 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP1 PUSH2 0x1BC6 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x5E6 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x8 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 DUP2 PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C5D JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP3 DUP5 DUP5 ADD SWAP1 DUP6 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x1C31 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x1C4D PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0xE61 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x5 DUP9 PUSH1 0x1 SWAP3 PUSH2 0x1C70 DUP6 SWAP12 SWAP11 SWAP9 SWAP12 PUSH2 0x2608 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP4 SWAP6 SWAP7 PUSH2 0x1BF8 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x4 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x1CB7 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1CBF PUSH2 0x301 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x1CDE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x1D97 JUMPI JUMPDEST PUSH2 0x1D70 JUMPI DUP3 AND ISZERO PUSH2 0x1D57 JUMPI ISZERO PUSH2 0x1D3F JUMPI PUSH2 0xC94 SWAP3 PUSH2 0x1D37 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x342D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CF5 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x1DD4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1DDC PUSH2 0x2CAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x1E89 SWAP1 PUSH2 0x1E43 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EA1 PUSH1 0x1 DUP4 ADD PUSH2 0x103D JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP1 PUSH2 0x1ED2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1EF5 DUP2 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP3 SWAP5 PUSH2 0x1F04 DUP2 PUSH2 0x103D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F42 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F54 DUP3 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP2 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1F74 PUSH2 0x1F47 JUMP JUMPDEST POP PUSH2 0x1F7E DUP2 PUSH2 0x2C8D JUMP JUMPDEST ISZERO PUSH2 0x1FAA JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x6C9 PUSH2 0x1FA4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x197E JUMP JUMPDEST POP PUSH2 0x1EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x47616D6520746F6B656E20646F65736E277420657869737421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1FFE PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x378 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x201B SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x378 JUMP JUMPDEST DUP2 ADD PUSH1 0xD DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2031 SWAP1 PUSH2 0x2002 JUMP JUMPDEST SLOAD PUSH2 0x1F42 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP4 MLOAD PUSH2 0x204D DUP2 PUSH2 0x595 JUMP JUMPDEST DUP1 SWAP5 DUP4 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP2 DUP4 ADD MSTORE DUP1 MLOAD PUSH2 0x2069 DUP2 PUSH2 0x5CB JUMP JUMPDEST DUP2 CALLDATASIZE DUP3 CALLDATACOPY PUSH1 0x60 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH2 0x207E DUP3 PUSH2 0x5CB JUMP JUMPDEST CALLDATASIZE DUP3 CALLDATACOPY PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x959 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP3 SLOAD DUP2 DUP2 AND DUP5 MSTORE PUSH1 0x8 SHR AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x614 DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x20C2 DUP2 PUSH2 0x595 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x20D2 PUSH1 0xFF DUP3 SLOAD AND DUP4 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x1 DUP1 DUP3 ADD SLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 PUSH2 0x20EF PUSH1 0x2 DUP6 ADD PUSH2 0x103D JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 PUSH1 0x3 DUP7 ADD PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x2157 JUMPI POP POP POP POP POP POP PUSH2 0x2149 PUSH1 0x6 PUSH2 0x614 SWAP5 SWAP4 DUP4 PUSH2 0x2125 PUSH1 0xA0 SWAP6 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2136 PUSH1 0x5 DUP3 ADD PUSH2 0x2096 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 DUP3 ADD PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x217B PUSH2 0x203B JUMP JUMPDEST POP PUSH2 0x2185 DUP2 PUSH2 0x2028 JUMP JUMPDEST ISZERO PUSH2 0x21A5 JUMPI PUSH2 0x219F PUSH2 0x2199 PUSH2 0x6C9 SWAP3 PUSH2 0x2002 JUMP JUMPDEST SLOAD PUSH2 0xFDF JUMP JUMPDEST POP PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x426174746C6520646F65736E277420657869737421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x21E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6561736520526567697374657220506C6179657220466972737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2235 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x426174746C6520616C72656164792065786973747321 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2296 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x228B JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x22AF JUMPI POP POP JUMP JUMPDEST PUSH2 0x614 SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x22DD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x228B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x22F6 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x614 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x22DD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x228B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x590 JUMPI PUSH2 0x2348 DUP2 PUSH2 0x2342 DUP5 SLOAD PUSH2 0x1003 JUMP JUMPDEST DUP5 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x237F JUMPI POP DUP2 SWAP1 PUSH2 0x237B SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x73D JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x2395 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x23D2 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x23B9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x23AF JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0xA DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH2 0x23EA JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x242C JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x241F JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x245C JUMPI POP POP SSTORE JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x20 PUSH2 0x2481 PUSH1 0x1 SWAP3 DUP5 PUSH1 0xFF DUP9 MLOAD AND SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP2 ADD PUSH2 0x244F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x590 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0xA SSTORE DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD DUP2 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH2 0x614 SWAP3 PUSH2 0x24D2 PUSH1 0x6 SWAP3 DUP5 PUSH2 0x2273 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x24ED PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP6 ADD PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x24FE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP6 ADD PUSH2 0x241B JUMP JUMPDEST PUSH2 0x250F PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x5 DUP6 ADD PUSH2 0x2449 JUMP JUMPDEST PUSH1 0xA0 ADD MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x25E6 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x257E PUSH2 0x2568 DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP3 PUSH2 0x2576 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5E6 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x25DE JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD DUP5 ADD MLOAD SWAP1 DUP8 ADD DUP5 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x25D7 DUP3 DUP8 PUSH2 0x2535 JUMP JUMPDEST MSTORE ADD PUSH2 0x258E JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2615 DUP2 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP4 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP6 MSTORE PUSH2 0x2635 PUSH1 0x1 DUP3 ADD PUSH2 0x103D JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x2668 DUP2 PUSH2 0x5B0 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH2 0x2689 DUP2 PUSH2 0x1F21 JUMP JUMPDEST ISZERO PUSH2 0x26B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x6C9 SWAP1 PUSH2 0x26B2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST POP PUSH2 0x2608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C6179657220646F65736E277420657869737421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x590 JUMPI PUSH2 0x2717 PUSH1 0x1 SWAP3 PUSH1 0x1 DUP2 ADD PUSH1 0x8 SSTORE PUSH2 0x1E43 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x285B JUMPI DUP2 MLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD SWAP1 PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x590 JUMPI PUSH2 0x276B DUP5 PUSH2 0x2765 DUP8 SLOAD PUSH2 0x1003 JUMP JUMPDEST DUP8 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x27DC JUMPI POP POP SWAP4 PUSH1 0x4 SWAP4 PUSH2 0x27AB DUP5 PUSH2 0x27C9 SWAP6 PUSH1 0x80 SWAP6 PUSH2 0x614 SWAP11 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x73D JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH2 0x27F4 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2844 JUMPI POP POP POP DUP5 PUSH1 0x80 SWAP5 PUSH2 0x614 SWAP10 SWAP9 SWAP5 PUSH1 0x4 SWAP9 SWAP5 PUSH2 0x27C9 SWAP9 PUSH1 0x1 SWAP6 LT PUSH2 0x282B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27AE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x281E JUMP JUMPDEST DUP5 DUP7 ADD MLOAD DUP8 SSTORE SWAP6 DUP7 ADD SWAP6 SWAP5 DUP2 ADD SWAP5 SWAP2 DUP2 ADD SWAP2 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1161 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 PUSH2 0x287C CALLER PUSH2 0x2658 JUMP JUMPDEST ADD MLOAD PUSH2 0x29D4 JUMPI PUSH2 0x288E PUSH2 0xAC1 CALLER PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x2896 PUSH2 0x1F47 JUMP JUMPDEST POP PUSH2 0x28A0 CALLER PUSH2 0x357C JUMP JUMPDEST PUSH2 0x28A9 DUP2 PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xFF PUSH2 0x28ED PUSH2 0x188D PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x28E3 DUP2 PUSH2 0xAF4 CALLER TIMESTAMP DUP7 SWAP1 SWAP2 PUSH1 0x34 SWAP3 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x64 SWAP1 MOD SWAP1 JUMP JUMPDEST AND MOD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x299F JUMPI JUMPDEST PUSH2 0x296D PUSH32 0xCA8AB07E9ED17D119729FC652DD24DF9D8430CA862DDA4631925B5B4B99DA362 SWAP4 SWAP5 PUSH2 0x2928 PUSH2 0x623 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0xFF DUP7 AND SWAP1 DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x294E PUSH1 0x9 SLOAD SWAP2 PUSH2 0x2EA0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2966 PUSH2 0x2FB8 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x35C3 JUMP JUMPDEST PUSH2 0x2980 PUSH2 0x297B PUSH1 0x7 SLOAD PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x60 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x296D PUSH2 0x29CC PUSH32 0xCA8AB07E9ED17D119729FC652DD24DF9D8430CA862DDA4631925B5B4B99DA362 SWAP5 PUSH2 0x2E8F JUMP JUMPDEST SWAP4 POP POP PUSH2 0x28FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C6179657220697320696E206120626174746C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A18 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x426174746C6520616C7265616479207374617274656421 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A5E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920706C617965722074776F2063616E206A6F696E206120626174746C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2AB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x416C726561647920696E20626174746C65 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2AF4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174746C65206E6F7420737461727465642E20506C656173652074656C6C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E6F7468657220706C6179657220746F206A6F696E2074686520626174746C PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2B70 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x10985D1D1B19481A185CC8185B1C9958591E48195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2BB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420696E207468697320626174746C65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2C03 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C7265616479206D6164652061206D6F766521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x2 SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 SWAP2 AND SWAP2 AND SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH2 0x2C85 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x378 JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F42 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2CC2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2CE1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10985D1D1B1948185B1C9958591E48195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2D25 PUSH2 0x203B JUMP JUMPDEST POP PUSH2 0x2D46 PUSH1 0x2 DUP4 MLOAD PUSH2 0x2D36 DUP2 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x2D3F DUP2 PUSH2 0x94F JUMP JUMPDEST EQ ISZERO PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH2 0x2D69 DUP4 DUP4 MLOAD PUSH2 0x2FE6 JUMP JUMPDEST PUSH32 0xAE6E5EAFB6CD1CB4B139E7A0B9140AA182EE7D50E99F50D660156F79212ACBC0 PUSH1 0x60 DUP5 ADD PUSH2 0x2E11 PUSH1 0x2 PUSH2 0x2DFB PUSH2 0x2DAB PUSH2 0x15E4 DUP6 MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x2E03 DUP4 PUSH2 0x2DFB PUSH2 0x2DC4 PUSH2 0x15E4 PUSH2 0x1431 DUP11 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SLOAD SWAP4 PUSH2 0x2DE0 PUSH1 0x4 PUSH2 0x2DD4 DUP4 PUSH2 0x1E43 JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2DF6 PUSH1 0x3 PUSH2 0x2DEE DUP4 PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH1 0x19 SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH1 0xA SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2DE0 PUSH1 0x4 PUSH2 0x2DD4 DUP4 PUSH2 0x1E43 JUMP JUMPDEST MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP2 DUP3 SWAP2 DUP3 AND DUP6 DUP2 SUB PUSH2 0x2E4D JUMPI POP PUSH1 0x20 ADD MLOAD AND SWAP4 JUMPDEST MLOAD SWAP4 PUSH2 0x2E47 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 AND SWAP6 DUP3 PUSH2 0x830 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST SWAP2 POP POP SWAP4 PUSH2 0x2E34 JUMP JUMPDEST PUSH1 0xA SUB SWAP1 PUSH1 0xA DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH1 0x2 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xFF DUP2 EQ PUSH2 0x2416 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x590 JUMPI PUSH2 0x2EC2 PUSH1 0x1 SWAP3 PUSH1 0x1 DUP2 ADD PUSH1 0x9 SSTORE PUSH2 0x197E JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x285B JUMPI DUP2 MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x590 JUMPI PUSH2 0x2EEB DUP4 PUSH2 0x2765 DUP8 SLOAD PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1F DUP7 GT EQ PUSH2 0x2F42 JUMPI POP POP DUP3 PUSH1 0x60 SWAP4 PUSH1 0x3 SWAP6 SWAP4 PUSH2 0x2F24 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x73D JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST DUP5 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH2 0x2F5A DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2FA1 JUMPI POP POP POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x60 SWAP7 PUSH1 0x3 SWAP9 SWAP7 LT PUSH2 0x2F89 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH2 0x2F27 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2F7C JUMP JUMPDEST DUP5 DUP7 ADD MLOAD DUP8 SSTORE SWAP6 DUP7 ADD SWAP6 SWAP5 DUP2 ADD SWAP5 SWAP2 DUP2 ADD SWAP2 PUSH2 0x2F5F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2FC5 DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x30783 PUSH1 0xEC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2416 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2FEF DUP2 PUSH2 0x2028 JUMP JUMPDEST ISZERO PUSH2 0x3090 JUMPI PUSH2 0x2199 PUSH2 0x3000 SWAP2 PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x285B JUMPI DUP2 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH2 0x306F PUSH1 0xA0 PUSH2 0x614 SWAP5 PUSH2 0x3024 PUSH1 0x6 SWAP5 DUP7 PUSH2 0x2273 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE PUSH2 0x303F PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP8 ADD PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x3050 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP8 ADD PUSH2 0x241B JUMP JUMPDEST PUSH2 0x3061 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x5 DUP8 ADD PUSH2 0x2449 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10985D1D1B1948191BD95CDB89DD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x30D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D616E61206E6F742073756666696369656E7420666F722061747461636B696E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6721 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x2 DUP4 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x1F SWAP1 DUP4 PUSH1 0x5 SHR ADD SWAP3 AND SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xFF DUP3 AND SWAP3 PUSH1 0x1 DUP5 EQ DUP1 SWAP5 DUP2 ISZERO PUSH2 0x31FD JUMPI JUMPDEST POP ISZERO PUSH2 0x31B8 JUMPI PUSH1 0x5 PUSH2 0x318A PUSH2 0x2199 PUSH2 0x3191 SWAP5 PUSH2 0x614 SWAP8 PUSH1 0x0 EQ PUSH2 0x31AE JUMPI PUSH2 0x3185 PUSH1 0x3 PUSH1 0x40 PUSH2 0x317C CALLER PUSH2 0x2658 JUMP JUMPDEST ADD MLOAD LT ISZERO PUSH2 0x30CC JUMP JUMPDEST PUSH2 0x2002 JUMP JUMPDEST POP ADD PUSH2 0x3123 JUMP JUMPDEST SWAP1 DUP1 SLOAD SWAP1 SWAP3 PUSH1 0xFF PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL DUP4 DUP2 SHL NOT SWAP1 SWAP3 AND SWAP3 AND SWAP1 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3185 PUSH1 0x1 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43686F6963652073686F756C64206265206569746865722031206F7220322100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ CODESIZE PUSH2 0x314F JUMP JUMPDEST ISZERO PUSH2 0x320F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6179657273207374696C6C206E65656420746F206D616B652061206D6F76 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x3267 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP2 DUP3 ISZERO PUSH2 0x3319 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x32C0 JUMPI DUP1 PUSH2 0x32AA PUSH1 0x80 PUSH2 0x614 SWAP4 ADD MLOAD PUSH1 0xFF DUP2 MLOAD AND ISZERO ISZERO SWAP1 DUP2 PUSH2 0x32AF JUMPI JUMPDEST POP PUSH2 0x3208 JUMP JUMPDEST PUSH2 0x370C JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920706C617965727320696E207468697320626174746C652063616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6D616B652061206D6F7665 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP3 POP ADD MLOAD AND CALLER EQ CODESIZE DUP1 PUSH2 0x3283 JUMP JUMPDEST SWAP1 PUSH2 0x3334 DUP3 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x3341 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x5E6 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3352 PUSH1 0x1F NOT SWAP2 PUSH2 0x63D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x30 ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFFE JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x340F JUMPI DUP1 PUSH1 0x0 DUP3 PUSH1 0x0 SWAP4 JUMPDEST PUSH2 0x33FB JUMPI POP DUP2 PUSH2 0x339B DUP5 PUSH2 0x332A JUMP JUMPDEST SWAP4 SWAP1 JUMPDEST PUSH2 0x33A8 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x33B1 SWAP1 PUSH2 0x2E64 JUMP JUMPDEST SWAP2 PUSH2 0x33E7 PUSH2 0x33D7 PUSH2 0x33D2 PUSH2 0x188D PUSH1 0xA DUP6 DIV SWAP5 PUSH2 0x33CC DUP7 PUSH2 0x2400 JUMP JUMPDEST SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH2 0x335C JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP3 BYTE PUSH2 0x33F3 DUP5 DUP7 PUSH2 0x336D JUMP JUMPDEST MSTORE8 SWAP2 DUP3 PUSH2 0x339E JUMP JUMPDEST SWAP3 PUSH2 0x3407 PUSH1 0xA SWAP2 PUSH2 0x2FD7 JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x338C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x341C DUP2 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 DUP1 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x25E6 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 PUSH2 0x3458 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 SUB PUSH2 0x3481 JUMPI POP SWAP4 PUSH1 0x20 DUP1 PUSH2 0x3476 SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x3DF2 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3450 JUMP JUMPDEST DUP6 SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 EXTCODESIZE PUSH2 0x3498 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x3476 JUMP JUMPDEST PUSH2 0x34C1 SWAP4 PUSH1 0x0 PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP12 DUP13 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0x3CD1 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x354B JUMPI JUMPDEST POP PUSH2 0x350D JUMPI DUP3 PUSH2 0x34DC PUSH2 0x3D03 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x3506 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x3528 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x348D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x356E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3575 JUMPI JUMPDEST PUSH2 0x3566 DUP2 DUP4 PUSH2 0x5E6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3C71 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x34CE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x355C JUMP JUMPDEST PUSH1 0xA SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PREVRANDAO DUP4 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH2 0x35B0 DUP2 PUSH2 0x575 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD DUP1 ISZERO PUSH2 0x35BD JUMPI SWAP1 JUMP JUMPDEST POP PUSH1 0x5 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x1D57 JUMPI PUSH2 0x35FE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 SWAP4 DUP5 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x25E6 JUMPI POP POP DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x362B JUMPI POP PUSH1 0x20 DUP1 PUSH2 0x614 SWAP6 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x3D97 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 DUP5 EXTCODESIZE PUSH2 0x363C JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3664 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP11 DUP12 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x3C86 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3699 JUMPI JUMPDEST POP PUSH2 0x367F JUMPI DUP3 PUSH2 0x34DC PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x3528 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x3635 JUMP JUMPDEST PUSH2 0x36B3 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3575 JUMPI PUSH2 0x3566 DUP2 DUP4 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x2 DUP4 LT PUSH2 0x36EC JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 PUSH2 0x39A4 PUSH2 0x393C PUSH2 0x3922 PUSH2 0x1431 PUSH1 0x60 PUSH2 0x3733 PUSH2 0x15E4 DUP3 DUP10 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x80 DUP9 ADD MLOAD MLOAD PUSH1 0xFF AND DUP9 DUP4 ADD MLOAD MLOAD SWAP1 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x3759 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2658 JUMP JUMPDEST ADD MLOAD DUP10 DUP5 PUSH2 0x378F PUSH2 0x91E DUP3 PUSH1 0x40 PUSH2 0x377D PUSH2 0x91E DUP4 DUP9 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 JUMP JUMPDEST ADD MLOAD SWAP5 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ADD MLOAD SWAP2 PUSH2 0x379A PUSH2 0x616 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF PUSH1 0x20 DUP6 ADD SWAP6 AND DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x37C8 PUSH2 0x15E4 PUSH2 0x1431 DUP6 DUP13 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x37DB PUSH2 0x183C PUSH1 0x80 DUP13 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP11 DUP6 PUSH2 0x37F0 PUSH2 0xEC8 PUSH2 0x1431 DUP4 DUP6 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0xFF DUP8 PUSH2 0x381F PUSH2 0x91E PUSH2 0x1431 DUP4 PUSH1 0x40 PUSH2 0x3814 PUSH2 0x91E PUSH2 0x1431 DUP5 DUP13 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ADD MLOAD SWAP8 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ADD MLOAD SWAP4 PUSH2 0x382A PUSH2 0x616 JUMP JUMPDEST SWAP7 DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE DUP6 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH2 0x384A PUSH2 0x630 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP5 MLOAD PUSH1 0x1 DUP2 EQ DUP1 DUP1 SWAP2 PUSH2 0x3C63 JUMPI JUMPDEST ISZERO PUSH2 0x3A5F JUMPI POP POP POP DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD GT PUSH2 0x39A9 JUMPI POP POP DUP2 DUP9 ADD MLOAD MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x38B6 SWAP2 PUSH2 0x38A8 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D1D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x36D5 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x80 DUP9 ADD MLOAD MSTORE PUSH1 0x0 PUSH2 0x38D1 PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MSTORE PUSH2 0x38E0 DUP8 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2FE6 JUMP JUMPDEST PUSH2 0x394A DUP2 DUP9 PUSH1 0x2 PUSH2 0x3942 PUSH2 0x393C PUSH2 0x3922 PUSH2 0x390C PUSH2 0x3907 DUP8 DUP8 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x357C JUMP JUMPDEST SWAP5 SWAP1 SWAP6 ADD MLOAD MLOAD SWAP4 SWAP5 DUP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x197E JUMP JUMPDEST POP ADD SSTORE PUSH2 0x2E56 JUMP JUMPDEST DUP8 DUP3 ADD MLOAD MLOAD DUP8 SWAP1 PUSH2 0x3967 SWAP1 PUSH2 0x393C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3922 JUMP JUMPDEST POP ADD SSTORE PUSH2 0x399B DUP2 DUP9 PUSH1 0x2 PUSH2 0x3942 PUSH2 0x393C PUSH2 0x3922 PUSH2 0x1431 PUSH2 0x3990 PUSH2 0x3907 PUSH2 0x1431 DUP10 DUP10 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP7 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP ADD SSTORE JUMP JUMPDEST DUP2 DUP5 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD DUP2 LT PUSH2 0x39E8 JUMPI POP POP POP PUSH2 0x38B6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x39E2 DUP11 PUSH2 0x143E PUSH2 0x1431 DUP8 DUP4 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x38AA JUMP JUMPDEST PUSH1 0x2 SWAP4 POP PUSH2 0x3A2A DUP3 DUP6 SWAP3 PUSH2 0x3A0E DUP14 PUSH2 0x3A04 PUSH2 0x3A36 SWAP9 SWAP8 MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD SWAP2 DUP3 SLOAD PUSH2 0x2E82 JUMP JUMPDEST SWAP1 SSTORE DUP7 DUP2 ADD MLOAD PUSH2 0x3A22 DUP14 PUSH2 0x3A04 DUP8 MLOAD PUSH2 0x1E43 JUMP JUMPDEST SWAP1 SSTORE MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH2 0x3A22 DUP2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST POP ADD PUSH2 0x3A42 DUP2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x38B6 DUP3 DUP10 ADD MLOAD PUSH2 0x38AA JUMP JUMPDEST SWAP4 PUSH2 0x38B6 SWAP6 SWAP2 DUP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP9 SWAP7 SWAP1 PUSH2 0x3C55 JUMPI JUMPDEST ISZERO PUSH2 0x3B41 JUMPI POP DUP14 PUSH2 0x3A97 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD SWAP1 PUSH2 0x36C8 JUMP JUMPDEST DUP6 DUP4 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 DUP4 DUP4 LT PUSH2 0x3AC5 JUMPI SWAP6 DUP7 ADD MLOAD MLOAD PUSH2 0x39E2 SWAP7 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH2 0x143E SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SWAP7 PUSH2 0x3AFF SWAP7 DUP9 SWAP6 PUSH2 0x3A2A SWAP6 DUP1 PUSH1 0x80 DUP11 ADD MLOAD GT PUSH1 0x0 EQ PUSH2 0x3B12 JUMPI POP POP POP POP POP PUSH1 0x40 DUP5 ADD MLOAD JUMPDEST DUP16 PUSH2 0x3AF6 DUP7 MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD SSTORE MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH2 0x3B0B DUP2 SLOAD PUSH2 0x36BA JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x3B3C SWAP4 PUSH2 0x3B26 PUSH2 0x1431 SWAP3 PUSH2 0x3B2F SWAP5 PUSH2 0x2E82 JUMP JUMPDEST SWAP6 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x3AEB JUMP JUMPDEST SWAP4 POP SWAP2 PUSH1 0x2 DUP1 SWAP5 EQ DUP1 DUP1 SWAP2 PUSH2 0x3C47 JUMPI JUMPDEST ISZERO PUSH2 0x3C01 JUMPI POP DUP14 PUSH2 0x3B6B PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD SWAP1 PUSH2 0x36C8 JUMP JUMPDEST DUP4 DUP11 ADD MLOAD SWAP1 SWAP5 SWAP1 SWAP2 DUP6 DUP4 LT PUSH2 0x3B95 JUMPI SWAP5 POP POP POP POP POP PUSH2 0x39E2 SWAP2 POP PUSH2 0x143E PUSH2 0x1431 DUP8 DUP4 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3BD0 SWAP6 DUP8 SWAP5 PUSH2 0x3BC4 SWAP5 DUP14 DUP2 PUSH1 0x80 DUP8 ADD MLOAD GT PUSH1 0x0 EQ PUSH2 0x3BDC JUMPI POP POP POP POP POP PUSH1 0x40 DUP2 ADD MLOAD JUMPDEST DUP16 PUSH2 0x3AF6 DUP4 MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH2 0x3A22 DUP2 SLOAD PUSH2 0x36BA JUMP JUMPDEST POP ADD PUSH2 0x3B0B DUP2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST PUSH2 0x3BEC PUSH2 0x3B2F SWAP3 PUSH2 0x3BFC SWAP6 PUSH2 0x2E82 JUMP JUMPDEST SWAP5 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3BB9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3C3A JUMPI JUMPDEST PUSH2 0x3C16 JUMPI JUMPDEST POP POP POP PUSH2 0x38AA JUMP JUMPDEST DUP3 PUSH2 0x3BC4 PUSH2 0x3C24 SWAP4 MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH2 0x3C30 DUP2 SLOAD PUSH2 0x36BA JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3C0E JUMP JUMPDEST POP DUP3 PUSH1 0x20 DUP3 ADD MLOAD EQ PUSH2 0x3C09 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x20 DUP5 ADD MLOAD EQ PUSH2 0x3B51 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x20 DUP5 ADD MLOAD EQ PUSH2 0x3A7D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x20 DUP8 ADD MLOAD EQ PUSH2 0x3864 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2FC JUMPI MLOAD PUSH2 0x6C9 DUP2 PUSH2 0x4DF JUMP JUMPDEST SWAP3 PUSH2 0x3CB5 PUSH2 0x6C9 SWAP6 SWAP4 PUSH2 0x3CC3 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xD16 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xD16 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x39B JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x6C9 SWAP6 SWAP4 PUSH2 0x3CB5 SWAP2 PUSH2 0x3CC3 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xD16 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3D2E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3D14 DUP3 PUSH2 0x63D JUMP JUMPDEST SWAP2 PUSH2 0x3D22 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x5E6 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x6C9 SWAP6 SWAP5 PUSH1 0x1 DUP1 DUP7 SHL SUB AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x6C9 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 DUP1 DUP8 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x3DA9 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x3DCC PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x3D33 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3699 JUMPI POP PUSH2 0x367F JUMPI DUP3 PUSH2 0x34DC PUSH2 0x3D03 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x3E06 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3E29 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x3D64 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3E6B JUMPI JUMPDEST POP PUSH2 0x3E50 JUMPI DUP3 PUSH2 0x34DC PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x3528 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x3E85 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3575 JUMPI PUSH2 0x3566 DUP2 DUP4 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3E42 JUMP INVALID 0xC6 0xBF DUP7 0xC 0xBC ISZERO 0xF7 MUL 0xF PUSH20 0x993A671F01BBB1831A8A7A12C126CA735EB632E7 JUMPI PUSH22 0xA2646970667358221220A67CF72AED72E96424AA257C SMOD 0xFB SLOAD 0xDC 0x29 0xBE PUSH19 0xF4AE416CF259161DF2D265690964736F6C6343 STOP ADDMOD XOR STOP CALLER BLOCKHASH JUMPI DUP8 STATICCALL SLT 0xA8 0x23 0xE0 CALLCODE 0xB7 PUSH4 0x1CC41B3B 0xA8 DUP3 DUP12 CALLER 0x21 0xCA DUP2 GT GT STATICCALL PUSH22 0xCD3AA3BB5ACE00000000000000000000000000000000 ","sourceMap":"507:21596:13:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;-1:-1:-1;;507:21596:13;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;10348:13:2;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;10348:13:2;507:21596:13;;545:10;1273:26:0;1269:95;;3004:6;507:21596:13;;545:10;-1:-1:-1;;;;;;507:21596:13;;;;;;;-1:-1:-1;;;;;507:21596:13;3052:40:0;-1:-1:-1;;3052:40:0;507:21596:13;;-1:-1:-1;;;;;507:21596:13;;;;6229:22;507:21596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;3004:6:0;507:21596:13;;;;;6229:22;507:21596;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;507:21596:13;;;;;6459:22;;507:21596;-1:-1:-1;507:21596:13;;;6459:22;;-1:-1:-1;507:21596:13;;6459:22;;;507:21596;-1:-1:-1;507:21596:13;;6443:10;507:21596;;;;;;;;;;;6443:10;507:21596;;;;;;6443:10;-1:-1:-1;507:21596:13;;;;;;10348:13:2;507:21596:13;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3004:6:0;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;10348:13:2;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;-1:-1:-1;507:21596:13;;;;:::i;:::-;;-1:-1:-1;507:21596:13;;;6506:35;;507:21596;;;-1:-1:-1;507:21596:13;6506:35;;507:21596;-1:-1:-1;6459:22:13;6506:35;;507:21596;-1:-1:-1;507:21596:13;6506:35;;507:21596;6493:7;507:21596;;;;;;;;;;;;6493:7;507:21596;;;;;;6493:7;-1:-1:-1;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;;;;507:21596:13;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;3004:6:0;507:21596:13;;;;;;;;;;;;;;;6506:35;;507:21596;10348:13:2;507:21596:13;;;;;;;6459:22;6506:35;;507:21596;3004:6:0;507:21596:13;;;;;;;;;;6506:35;;507:21596;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;6694:24;;507:21596;;;:::i;:::-;-1:-1:-1;507:21596:13;;;;6737:6;;507:21596;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;6580:207;;507:21596;;;:::i;:::-;-1:-1:-1;507:21596:13;;;6580:207;;507:21596;6459:22;6580:207;;507:21596;;6580:207;;507:21596;-1:-1:-1;507:21596:13;6580:207;;507:21596;6553:7;507:21596;;;;;;;;;;;;6553:7;507:21596;;;;;;6553:7;-1:-1:-1;507:21596:13;;;;;3004:6:0;507:21596:13;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;6580:207;;507:21596;-1:-1:-1;507:21596:13;;;;6580:207;;507:21596;;;10348:13:2;507:21596:13;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;3004:6:0;507:21596:13;;;;;;;;6459:22;6580:207;;507:21596;-1:-1:-1;507:21596:13;10348:13:2;507:21596:13;;;;6580:207;;507:21596;6580:207;;507:21596;;-1:-1:-1;507:21596:13;-1:-1:-1;507:21596:13;10348:13:2;507:21596:13;;;;;;;;;;;;;;;;6580:207;;507:21596;6229:22;507:21596;;;;;;-1:-1:-1;;;;;;507:21596:13;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3004:6:0;507:21596:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;3004:6:0;507:21596:13;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3004:6:0;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3004:6:0;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;3004:6:0;507:21596:13;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;6229:22;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;6229:22;507:21596;;;;;;;;;;3004:6:0;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6229:22;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;1269:95:0;507:21596:13;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;507:21596:13;;;1322:31:0;507:21596:13;;;;;;;;;;10348:13:2;-1:-1:-1;507:21596:13;;;-1:-1:-1;;;;;;;;;;;507:21596:13;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;10348:13:2;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10348:13:2;-1:-1:-1;507:21596:13;;;-1:-1:-1;;;;;;;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;507:21596:13;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_19943":{"entryPoint":742,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_19966":{"entryPoint":769,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":2958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":15473,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":1695,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_memory_ptr":{"entryPoint":1624,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":15569,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes_35336":{"entryPoint":15494,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":15716,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes_42746":{"entryPoint":15667,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_address":{"entryPoint":14037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":3402,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":3350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint8":{"entryPoint":2428,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_BattleStatus":{"entryPoint":2415,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_packed_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":2096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":8171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":923,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fba9":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_Battle":{"entryPoint":2471,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_GameToken":{"entryPoint":960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Player":{"entryPoint":3681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_struct_Battle":{"entryPoint":2623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint8_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_and_zero_memory_array_bytes":{"entryPoint":13098,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Battle":{"entryPoint":8251,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_GameToken":{"entryPoint":8007,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":1543,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_19974":{"entryPoint":1558,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_20076":{"entryPoint":1571,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_35319":{"entryPoint":1584,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":2935,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":1597,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_struct_Battle_storage_dyn":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_array_struct_Battle_storage_dyn_19947":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_push_from_struct_Battle_to_array_struct_Battle_storage_dyn_ptr":{"entryPoint":9354,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_struct_GameToken_to_array_struct_GameToken_storage_dyn_ptr":{"entryPoint":11936,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_struct_Player_to_array_struct_Player_storage_dyn_ptr":{"entryPoint":9973,"id":null,"parameterSlots":1,"returnSlots":0},"checked_add_uint256":{"entryPoint":14024,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_20170":{"entryPoint":14010,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint8":{"entryPoint":13148,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":9216,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":11906,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256_20073":{"entryPoint":11862,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256_20146":{"entryPoint":11876,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256_20179":{"entryPoint":11891,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint8":{"entryPoint":11353,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint8_20007":{"entryPoint":11336,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":8935,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_19946":{"entryPoint":8866,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":8843,"id":null,"parameterSlots":2,"returnSlots":0},"convert_uint8_to_bytes1":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_array_uint":{"entryPoint":8342,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":4157,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_to_storage_from_array_address_to_array_address":{"entryPoint":9243,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_to_storage_from_array_uint8_to_array_uint":{"entryPoint":9289,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":8993,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810":{"entryPoint":12216,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":888,"id":null,"parameterSlots":3,"returnSlots":0},"external_fun_CELESTION":{"entryPoint":5344,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_DEVIL":{"entryPoint":6917,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_FIREBIRD":{"entryPoint":4646,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_GRIFFIN":{"entryPoint":6945,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_KAMO":{"entryPoint":1995,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_KUKULKAN":{"entryPoint":7298,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_MAX_ATTACK_DEFEND_STRENGTH":{"entryPoint":2068,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_attackOrDefendChoice":{"entryPoint":5961,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":811,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOfBatch":{"entryPoint":3419,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_baseURI":{"entryPoint":4471,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_battles":{"entryPoint":4320,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createBattle":{"entryPoint":2715,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_createRandomGameToken":{"entryPoint":5372,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_exists":{"entryPoint":3605,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_gameTokens":{"entryPoint":6557,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAllBattles":{"entryPoint":3809,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAllPlayerTokens":{"entryPoint":1012,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAllPlayers":{"entryPoint":7066,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getBattle":{"entryPoint":2640,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getBattleMoves":{"entryPoint":5282,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPlayer":{"entryPoint":3753,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getPlayerToken":{"entryPoint":2303,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":6973,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isBattle":{"entryPoint":2359,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isPlayer":{"entryPoint":2023,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isPlayerToken":{"entryPoint":6667,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_joinBattle":{"entryPoint":5394,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":5047,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_players":{"entryPoint":7778,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_quitBattle":{"entryPoint":5088,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_registerPlayer":{"entryPoint":4768,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":4674,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":3054,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":7326,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":5773,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setURI":{"entryPoint":1740,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":1265,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":6702,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":2685,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply_1526":{"entryPoint":6482,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalTokenMinted":{"entryPoint":3651,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":7611,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":2113,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4099,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":15619,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1510,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_20025":{"entryPoint":1397,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_20036":{"entryPoint":1429,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_20057":{"entryPoint":1456,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_35321":{"entryPoint":1483,"id":null,"parameterSlots":1,"returnSlots":0},"fun_asSingletonArrays":{"entryPoint":null,"id":1334,"parameterSlots":2,"returnSlots":2},"fun_asSingletonArrays_35335":{"entryPoint":null,"id":1334,"parameterSlots":1,"returnSlots":2},"fun_awaitBattleResults":{"entryPoint":12894,"id":4264,"parameterSlots":1,"returnSlots":0},"fun_balanceOf":{"entryPoint":null,"id":404,"parameterSlots":2,"returnSlots":1},"fun_balanceOfBatch":{"entryPoint":9545,"id":474,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":11438,"id":84,"parameterSlots":0,"returnSlots":0},"fun_createRandomGameToken":{"entryPoint":10353,"id":3800,"parameterSlots":1,"returnSlots":0},"fun_createRandomNum":{"entryPoint":13692,"id":3664,"parameterSlots":1,"returnSlots":1},"fun_doSafeTransferAcceptanceCheck":{"entryPoint":15858,"id":1248,"parameterSlots":6,"returnSlots":0},"fun_doSafeTransferAcceptanceCheck_35337":{"entryPoint":15767,"id":1248,"parameterSlots":5,"returnSlots":0},"fun_endBattle":{"entryPoint":11549,"id":4943,"parameterSlots":2,"returnSlots":1},"fun_getBattle":{"entryPoint":8563,"id":3398,"parameterSlots":1,"returnSlots":1},"fun_getPlayer":{"entryPoint":9816,"id":3294,"parameterSlots":1,"returnSlots":1},"fun_getPlayerToken":{"entryPoint":8044,"id":3346,"parameterSlots":1,"returnSlots":1},"fun_isBattle":{"entryPoint":8232,"id":3376,"parameterSlots":1,"returnSlots":1},"fun_isPlayer":{"entryPoint":7969,"id":3272,"parameterSlots":1,"returnSlots":1},"fun_isPlayerToken":{"entryPoint":11405,"id":3324,"parameterSlots":1,"returnSlots":1},"fun_mint":{"entryPoint":13763,"id":1010,"parameterSlots":3,"returnSlots":0},"fun_registerPlayerMove":{"entryPoint":12604,"id":4074,"parameterSlots":3,"returnSlots":0},"fun_resolveBattle":{"entryPoint":14092,"id":4759,"parameterSlots":1,"returnSlots":0},"fun_uintToStr":{"entryPoint":13182,"id":5038,"parameterSlots":1,"returnSlots":1},"fun_updateBattle":{"entryPoint":12262,"id":3432,"parameterSlots":2,"returnSlots":0},"fun_updateWithAcceptanceCheck":{"entryPoint":13357,"id":826,"parameterSlots":5,"returnSlots":0},"increment_uint256":{"entryPoint":12247,"id":null,"parameterSlots":1,"returnSlots":1},"increment_uint8":{"entryPoint":11919,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_19977":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_20078":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address":{"entryPoint":10336,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_address_19982":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_bytes":{"entryPoint":13165,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":9525,"id":null,"parameterSlots":2,"returnSlots":1},"mod_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_to_string":{"entryPoint":11373,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_uint256_to_string_uint":{"entryPoint":8194,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x00":{"entryPoint":4449,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":9194,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4041,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1375,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_memoryt_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Battle":{"entryPoint":8373,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_GameToken":{"entryPoint":7912,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_Player":{"entryPoint":9736,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":11113,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0b5a":{"entryPoint":11260,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3dc5":{"entryPoint":12808,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_3e3e":{"entryPoint":11482,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_45bc":{"entryPoint":10925,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4b90":{"entryPoint":8674,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_532b":{"entryPoint":10769,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_537f":{"entryPoint":8750,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7167":{"entryPoint":10839,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_b6fc":{"entryPoint":11184,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c218":{"entryPoint":12492,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e7f3":{"entryPoint":10989,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_Battle__dyn":{"entryPoint":4063,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_GameToken__dyn":{"entryPoint":6526,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_Player__dyn":{"entryPoint":7747,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_uint":{"entryPoint":12579,"id":null,"parameterSlots":2,"returnSlots":2},"update_byte_slice_dynamic1":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_19993":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_20112":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_enum_BattleStatus_to_enum_BattleStatus":{"entryPoint":8819,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_20080":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_20116":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_uint8_to_uint8":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_enum_BattleStatus":{"entryPoint":2383,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":1247,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_BattleStatus":{"entryPoint":8330,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_BattleStatus_19988":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_enum_BattleStatus_20106":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x15A3792 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x677AA4E EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x9C95E10 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xDAEA2CD EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x10898E4C EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x1107AE3D EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x16801D17 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x2CA04522 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x579B526D EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x5C12CD4B EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x5C93FC3D EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x606D2E96 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x703730A5 EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x845F433B EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x996D7BEA EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x9B09CC87 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x9E4ECD11 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x9EC40AA3 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xA1B4F57C EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xBA274956 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xBF034B69 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0xBF103A4D EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xD2198CC5 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xDE96CEFC EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0xEFA1C482 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xF1DA7339 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x20F JUMPI PUSH4 0xF71D96CB EQ PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E62 JUMP JUMPDEST PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1B05 JUMP JUMPDEST PUSH2 0x1A2E JUMP JUMPDEST PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0x199D JUMP JUMPDEST PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1749 JUMP JUMPDEST PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1512 JUMP JUMPDEST PUSH2 0x14FC JUMP JUMPDEST PUSH2 0x14E0 JUMP JUMPDEST PUSH2 0x14A2 JUMP JUMPDEST PUSH2 0x13E0 JUMP JUMPDEST PUSH2 0x13B7 JUMP JUMPDEST PUSH2 0x12A0 JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST PUSH2 0x1226 JUMP JUMPDEST PUSH2 0x1177 JUMP JUMPDEST PUSH2 0x10E0 JUMP JUMPDEST PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST PUSH2 0xE15 JUMP JUMPDEST PUSH2 0xD5B JUMP JUMPDEST PUSH2 0xBEE JUMP JUMPDEST PUSH2 0xA9B JUMP JUMPDEST PUSH2 0xA7D JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST PUSH2 0x937 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH2 0x32B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FC JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FC JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH2 0x36F PUSH2 0x349 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x38B JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37B JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x3B4 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x378 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP1 PUSH2 0x3D7 DUP5 MLOAD PUSH1 0x80 DUP6 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH1 0x9 SLOAD PUSH2 0x412 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP1 PUSH2 0x420 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x5E6 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 DUP2 PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x4B7 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP3 DUP5 DUP5 ADD SWAP1 DUP6 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x48B JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x4A7 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x3C0 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x4 DUP9 PUSH1 0x1 SWAP3 PUSH2 0x4CA DUP6 SWAP12 SWAP11 SWAP9 SWAP12 PUSH2 0x1EE8 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP4 SWAP6 SWAP7 PUSH2 0x452 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x2FC JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x510 DUP2 PUSH2 0x4DF JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x54E JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x53D JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x532 JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x52B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x590 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x614 DUP3 PUSH2 0x595 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x614 DUP3 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x614 DUP3 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x614 DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x590 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2FC JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x66F DUP3 PUSH2 0x63D JUMP JUMPDEST SWAP3 PUSH2 0x67D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5E6 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2FC JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2FC JUMPI PUSH2 0x6C9 SWAP2 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x6DA CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x6E2 PUSH2 0x2CAE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x590 JUMPI PUSH2 0x706 DUP2 PUSH2 0x701 PUSH1 0x2 SLOAD PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x22A2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x748 JUMPI POP DUP2 SWAP1 PUSH2 0x738 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x73D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP4 SWAP1 SWAP2 SWAP1 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x7B3 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x79A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x78F JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x77C JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH2 0x80A PUSH2 0x805 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1F21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x6C9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x2 SLOAD PUSH2 0x865 DUP2 PUSH2 0x1003 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x8DF JUMPI POP PUSH1 0x1 EQ PUSH2 0x89F JUMPI JUMPDEST PUSH2 0x89B DUP5 PUSH2 0x88F DUP2 DUP9 SUB DUP3 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x830 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 POP PUSH1 0x2 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x8CC JUMPI POP POP POP DUP2 PUSH2 0x89B SWAP4 PUSH2 0x88F SWAP3 DUP3 ADD ADD SWAP4 PUSH2 0x87F JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 POP PUSH2 0x88F DUP2 PUSH2 0x89B PUSH2 0x87F JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0x923 PUSH2 0x91E PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x3C0 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH2 0x80A PUSH2 0x94A CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2028 JUMP JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x959 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x959 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x2 DUP4 LT PUSH2 0x98D JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0xFF DUP4 MLOAD AND DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x980 JUMP JUMPDEST SWAP1 PUSH2 0x100 SWAP2 PUSH2 0x9B7 DUP3 DUP3 MLOAD PUSH2 0x96F JUMP JUMPDEST PUSH2 0x9DB PUSH1 0x20 SWAP4 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD SWAP1 DUP1 PUSH1 0x40 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 DUP5 ADD PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0xA20 JUMPI POP POP POP POP SWAP1 PUSH1 0xE0 PUSH1 0xA0 DUP4 PUSH2 0xA10 PUSH1 0x80 PUSH2 0x6C9 SWAP7 ADD MLOAD DUP4 DUP7 ADD SWAP1 PUSH2 0x97C JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SWAP3 DUP3 ADD SWAP3 PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SWAP1 DUP3 ADD PUSH2 0x9EA JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x6C9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x9A7 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0xA69 PUSH2 0xA64 CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x9A7 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0xAAC CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0xAB4 PUSH2 0x203B JUMP JUMPDEST POP PUSH2 0xAC6 PUSH2 0xAC1 CALLER PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x21E2 JUMP JUMPDEST PUSH2 0xADE PUSH2 0xAD9 PUSH2 0xAD5 DUP4 PUSH2 0x2028 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x222E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB02 DUP2 PUSH2 0xAF4 DUP6 DUP6 PUSH2 0x830 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x5E6 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0xB0E PUSH2 0x630 JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xB20 PUSH2 0x630 JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB34 PUSH2 0x607 JUMP JUMPDEST SWAP4 PUSH1 0x0 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE DUP3 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0xB61 PUSH1 0xA SLOAD SWAP2 PUSH2 0x2002 JUMP JUMPDEST SSTORE PUSH2 0xB6B DUP2 PUSH2 0x248A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x590 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2FC JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0xBA8 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP4 PUSH2 0xBB6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x5E6 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x2FC JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xBDF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0xBD1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0xC07 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0xC0F PUSH2 0x301 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP5 GT PUSH2 0x2FC JUMPI PUSH2 0xC33 PUSH1 0x4 SWAP5 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0xC4B SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0xC63 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x658 JUMP JUMPDEST SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0xCF2 JUMPI JUMPDEST PUSH2 0xCC5 JUMPI DUP4 AND ISZERO PUSH2 0xCAD JUMPI ISZERO PUSH2 0xC96 JUMPI PUSH2 0xC94 SWAP6 POP PUSH2 0x342D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP9 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 DUP2 DUP10 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER DUP2 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 ADD SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC7A JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xD36 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xD28 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x6C9 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0xD16 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT PUSH2 0x2FC JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x2FC JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0xD97 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP3 PUSH2 0xDA5 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5E6 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x24 PUSH1 0x20 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2FC JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xDFE JUMPI DUP6 PUSH1 0x24 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x89B SWAP2 PUSH2 0xDEC PUSH2 0xDF2 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xB8E JUMP JUMPDEST SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD4A JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0xE0A DUP5 PUSH2 0x317 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0xDC5 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND DUP2 MSTORE PUSH1 0x80 DUP1 PUSH2 0xE8A PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0xA0 PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0xECD PUSH2 0xEC8 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xE61 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH1 0xA SLOAD PUSH2 0xEFF DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP1 PUSH2 0xF0D PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x5E6 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xA DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 DUP2 PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0xFA4 JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP3 DUP5 DUP5 ADD SWAP1 DUP6 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0xF78 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0xF94 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x9A7 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x7 DUP9 PUSH1 0x1 SWAP3 PUSH2 0xFB7 DUP6 SWAP12 SWAP11 SWAP9 SWAP12 PUSH2 0x20B5 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP4 SWAP6 SWAP7 PUSH2 0xF3F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0xFC9 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1033 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x101D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1012 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x1050 DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x10BE JUMPI POP PUSH1 0x1 EQ PUSH2 0x107F JUMPI JUMPDEST POP POP POP PUSH2 0x614 SWAP3 POP SUB DUP4 PUSH2 0x5E6 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x10A6 JUMPI POP POP PUSH2 0x614 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x1070 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x108D JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x614 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x1070 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x110A PUSH2 0x1141 SWAP2 PUSH2 0xFDF JUMP JUMPDEST POP PUSH1 0xFF DUP2 SLOAD AND SWAP1 PUSH2 0x1157 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x1126 PUSH1 0x2 DUP3 ADD PUSH2 0x103D JUMP JUMPDEST SWAP1 PUSH1 0x6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP7 PUSH2 0x96F JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD DUP2 PUSH1 0x6 SLOAD PUSH2 0x1199 DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1204 JUMPI POP PUSH1 0x1 EQ PUSH2 0x11C9 JUMPI JUMPDEST PUSH2 0x89B DUP6 PUSH2 0x88F DUP2 DUP10 SUB DUP3 PUSH2 0x5E6 JUMP JUMPDEST SWAP3 SWAP5 POP PUSH1 0x6 DUP4 MSTORE DUP5 DUP4 KECCAK256 JUMPDEST DUP3 DUP5 LT PUSH2 0x11F1 JUMPI POP POP POP DUP2 PUSH2 0x89B SWAP4 PUSH2 0x88F SWAP3 DUP3 ADD ADD SWAP4 CODESIZE PUSH2 0x11B9 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0x11D4 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 POP PUSH2 0x88F DUP2 PUSH2 0x89B CODESIZE PUSH2 0x11B9 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH2 0x125C PUSH2 0x2CAE JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x12D1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x12EA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST PUSH2 0x12F3 CALLER PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x1376 JUMPI PUSH2 0x1341 SWAP1 PUSH1 0x8 SLOAD PUSH2 0x132C PUSH2 0x1309 PUSH2 0x616 JUMP JUMPDEST CALLER DUP2 MSTORE DUP6 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x26F5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2871 JUMP JUMPDEST PUSH32 0x81EF79D1CDA814A60C0FC60792E648A06D9C6BAE67176346D1CC8B63030BFCCD PUSH1 0x40 MLOAD DUP1 PUSH2 0x1371 CALLER SWAP5 DUP3 PUSH2 0x830 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x141B185E595C88185B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x3A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x13F1 PUSH2 0xA64 CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 MLOAD AND CALLER EQ SWAP1 DUP2 ISZERO PUSH2 0x1492 JUMPI JUMPDEST POP ISZERO PUSH2 0x144D JUMPI DUP3 MLOAD MLOAD AND CALLER DUP2 SUB PUSH2 0x1443 JUMPI POP PUSH2 0x143E PUSH2 0x1431 PUSH2 0xC94 SWAP4 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x2D1D JUMP JUMPDEST PUSH2 0xC94 SWAP3 POP PUSH2 0x2D1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420696E207468697320626174746C65210000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 ADD MLOAD DUP3 AND CALLER EQ SWAP1 POP CODESIZE PUSH2 0x140E JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x80 PUSH2 0x14B5 PUSH2 0xA64 CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST ADD MLOAD PUSH1 0xFF PUSH1 0x20 DUP2 DUP4 MLOAD AND SWAP3 ADD MLOAD AND SWAP1 PUSH2 0x89B PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x5 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0xC94 PUSH2 0x150D CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x2871 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH2 0x89B PUSH2 0x1523 CALLDATASIZE PUSH2 0x69F JUMP JUMPDEST PUSH2 0x152B PUSH2 0x203B JUMP JUMPDEST POP PUSH2 0x1535 DUP2 PUSH2 0x2173 JUMP JUMPDEST SWAP1 PUSH2 0x1553 DUP3 MLOAD PUSH2 0x1544 DUP2 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x154D DUP2 PUSH2 0x94F JUMP JUMPDEST ISZERO PUSH2 0x2A11 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD DUP1 MLOAD MLOAD SWAP1 SWAP2 PUSH2 0x15C8 SWAP2 DUP5 SWAP2 SWAP1 PUSH2 0x1581 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO PUSH2 0x2A57 JUMP JUMPDEST PUSH2 0x15A1 PUSH2 0x159C PUSH2 0xAD5 PUSH1 0x80 PUSH2 0x1595 CALLER PUSH2 0x2658 JUMP JUMPDEST ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2AAD JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH2 0x15C3 CALLER PUSH2 0x15B4 DUP7 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x2FE6 JUMP JUMPDEST DUP1 MLOAD MLOAD PUSH2 0x1613 SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x1604 SWAP1 PUSH2 0x15FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x162C PUSH1 0x4 PUSH2 0x1604 PUSH2 0x15FE PUSH2 0x15E4 PUSH2 0x1431 DUP7 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD SWAP1 MLOAD MLOAD PUSH2 0x164E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH32 0x24187B16C217A79F8D8E6252B542EC6E278FA91304ACD9CFD866F2BBF00BD08 PUSH1 0x40 MLOAD DUP1 PUSH2 0x167E CALLER SWAP6 DUP3 PUSH2 0x830 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xA3F JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x16A6 PUSH2 0x2E6 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x2FC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 DUP4 ISZERO PUSH2 0x1731 JUMPI PUSH2 0x16F2 PUSH2 0x1703 SWAP3 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xCED3E1 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x2FC JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x1786 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 PUSH2 0x1870 DUP3 PUSH2 0x1794 DUP2 PUSH2 0x2173 JUMP JUMPDEST SWAP3 DUP4 MLOAD SWAP4 PUSH2 0x17A1 DUP6 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x17AA DUP6 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x17B7 PUSH1 0x1 DUP1 SWAP7 EQ PUSH2 0x2AED JUMP JUMPDEST PUSH2 0x17D7 PUSH1 0x2 DUP3 MLOAD PUSH2 0x17C7 DUP2 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x17D0 DUP2 PUSH2 0x94F JUMP JUMPDEST EQ ISZERO PUSH2 0x2B69 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD DUP1 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x184A SWAP3 PUSH1 0xFF SWAP3 PUSH2 0x1843 SWAP3 PUSH2 0x183C SWAP3 PUSH1 0x80 SWAP3 PUSH2 0x1813 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER EQ SWAP2 DUP3 ISZERO PUSH2 0x1939 JUMPI JUMPDEST POP POP PUSH2 0x2BB0 JUMP JUMPDEST ADD MLOAD DUP6 MLOAD MLOAD CALLER SWAP1 PUSH2 0x182C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1642 JUMP JUMPDEST SUB PUSH2 0x1932 JUMPI DUP4 PUSH1 0x0 JUMPDEST AND SWAP1 PUSH2 0x2860 JUMP JUMPDEST MLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST AND ISZERO PUSH2 0x2BFC JUMP JUMPDEST MLOAD MLOAD CALLER SWAP1 PUSH2 0x1860 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1642 JUMP JUMPDEST SUB PUSH2 0x192A JUMPI PUSH1 0xFF PUSH1 0x0 JUMPDEST AND PUSH2 0x313C JUMP JUMPDEST PUSH2 0x18BE PUSH2 0x188D PUSH1 0x80 PUSH2 0x1881 DUP6 PUSH2 0x2173 JUMP JUMPDEST ADD DUP1 MLOAD MLOAD PUSH2 0x1893 SWAP1 PUSH1 0xFF AND JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1918 JUMPI PUSH2 0x18B2 PUSH2 0x188D PUSH2 0x183C PUSH2 0x18AA PUSH1 0x0 PUSH2 0x2C48 JUMP JUMPDEST SWAP4 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1911 JUMPI PUSH1 0x0 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST SWAP1 DUP1 DUP3 SUB PUSH2 0x1909 JUMPI JUMPDEST PUSH2 0x18D0 DUP4 PUSH2 0x2C6D JUMP JUMPDEST SWAP1 ISZERO ISZERO SWAP1 PUSH32 0x54B82B77E7AE55A8E6C9E89DEBA70C7191DEA2A3B08AE647B380E9F981D6A0F8 PUSH1 0x0 DUP1 LOG3 ISZERO PUSH2 0x1900 JUMPI STOP JUMPDEST PUSH2 0xC94 SWAP1 PUSH2 0x325E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x18C7 JUMP JUMPDEST DUP4 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH2 0x18B2 PUSH2 0x188D PUSH2 0x183C PUSH2 0x18AA DUP8 PUSH2 0x2C48 JUMP JUMPDEST PUSH1 0xFF DUP5 PUSH2 0x186A JUMP JUMPDEST DUP4 DUP11 PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER EQ CODESIZE DUP1 PUSH2 0x180C JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x19C7 PUSH2 0x19F7 SWAP2 PUSH2 0x197E JUMP JUMPDEST POP PUSH2 0x19D1 DUP2 PUSH2 0x103D JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x80 DUP7 MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH2 0x80A PUSH2 0x1A29 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x2C8D JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x1A4B PUSH1 0x4 CALLDATALOAD PUSH2 0x337E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 SWAP3 PUSH1 0x6 SLOAD PUSH2 0x1A5E DUP2 PUSH2 0x1003 JUMP JUMPDEST SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AE6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1AA5 JUMPI JUMPDEST PUSH1 0x2F PUSH1 0xF8 SHL DUP7 MSTORE PUSH2 0x89B DUP6 PUSH2 0x88F DUP2 PUSH2 0xAF4 PUSH2 0x1A94 PUSH1 0x1 DUP13 ADD DUP11 PUSH2 0x1FEB JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 POP PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1AD3 JUMPI POP POP POP DUP3 ADD SWAP1 SWAP3 ADD SWAP2 DUP2 PUSH2 0xAF4 PUSH2 0x1A94 PUSH2 0x1A75 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP5 ADD DUP9 ADD MSTORE SWAP2 DUP7 ADD SWAP2 DUP2 ADD PUSH2 0x1AB7 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 DUP8 ADD MSTORE POP POP DUP1 ISZERO ISZERO MUL DUP4 ADD ADD SWAP3 POP DUP2 PUSH2 0xAF4 PUSH2 0x1A94 PUSH2 0x1A75 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1B8E PUSH2 0x1B5D PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1B65 PUSH2 0x301 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4DC JUMPI PUSH1 0x8 SLOAD PUSH2 0x1BB8 DUP2 PUSH2 0xB77 JUMP JUMPDEST SWAP1 PUSH2 0x1BC6 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x5E6 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x8 DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP4 ADD SWAP2 DUP2 PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 DUP5 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C5D JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP3 DUP5 DUP5 ADD SWAP1 DUP6 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 SWAP3 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x1C31 JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0x1C4D PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0xE61 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x1C24 JUMP JUMPDEST PUSH1 0x5 DUP9 PUSH1 0x1 SWAP3 PUSH2 0x1C70 DUP6 SWAP12 SWAP11 SWAP9 SWAP12 PUSH2 0x2608 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP4 SWAP6 SWAP7 PUSH2 0x1BF8 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x4 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x1CB7 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1CBF PUSH2 0x301 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2FC JUMPI PUSH2 0x1CDE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x658 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP1 CALLER DUP3 EQ ISZERO DUP1 PUSH2 0x1D97 JUMPI JUMPDEST PUSH2 0x1D70 JUMPI DUP3 AND ISZERO PUSH2 0x1D57 JUMPI ISZERO PUSH2 0x1D3F JUMPI PUSH2 0xC94 SWAP3 PUSH2 0x1D37 PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH2 0x342D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x6A0D45 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x711BEC91 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1CF5 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH2 0x1DD4 PUSH2 0x2E6 JUMP JUMPDEST PUSH2 0x1DDC PUSH2 0x2CAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1E2A JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x8 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2FC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2FC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x2FC JUMPI PUSH2 0x1E89 SWAP1 PUSH2 0x1E43 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EA1 PUSH1 0x1 DUP4 ADD PUSH2 0x103D JUMP JUMPDEST SWAP2 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP1 PUSH2 0x1ED2 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1EF5 DUP2 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP3 SWAP5 PUSH2 0x1F04 DUP2 PUSH2 0x103D JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F42 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F54 DUP3 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 DUP2 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x1F74 PUSH2 0x1F47 JUMP JUMPDEST POP PUSH2 0x1F7E DUP2 PUSH2 0x2C8D JUMP JUMPDEST ISZERO PUSH2 0x1FAA JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0x6C9 PUSH2 0x1FA4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x197E JUMP JUMPDEST POP PUSH2 0x1EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x47616D6520746F6B656E20646F65736E277420657869737421 PUSH1 0x38 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x1FFE PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x378 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x201B SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x378 JUMP JUMPDEST DUP2 ADD PUSH1 0xD DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x2031 SWAP1 PUSH2 0x2002 JUMP JUMPDEST SLOAD PUSH2 0x1F42 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x0 PUSH1 0xA0 DUP4 MLOAD PUSH2 0x204D DUP2 PUSH2 0x595 JUMP JUMPDEST DUP1 SWAP5 DUP4 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 DUP2 DUP4 ADD MSTORE DUP1 MLOAD PUSH2 0x2069 DUP2 PUSH2 0x5CB JUMP JUMPDEST DUP2 CALLDATASIZE DUP3 CALLDATACOPY PUSH1 0x60 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH2 0x207E DUP3 PUSH2 0x5CB JUMP JUMPDEST CALLDATASIZE DUP3 CALLDATACOPY PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x959 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP3 SLOAD DUP2 DUP2 AND DUP5 MSTORE PUSH1 0x8 SHR AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x614 DUP3 PUSH2 0x5CB JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x20C2 DUP2 PUSH2 0x595 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x20D2 PUSH1 0xFF DUP3 SLOAD AND DUP4 PUSH2 0x208A JUMP JUMPDEST PUSH1 0x1 DUP1 DUP3 ADD SLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 PUSH2 0x20EF PUSH1 0x2 DUP6 ADD PUSH2 0x103D JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP1 PUSH1 0x3 DUP7 ADD PUSH1 0x0 SWAP3 JUMPDEST DUP5 DUP5 LT PUSH2 0x2157 JUMPI POP POP POP POP POP POP PUSH2 0x2149 PUSH1 0x6 PUSH2 0x614 SWAP5 SWAP4 DUP4 PUSH2 0x2125 PUSH1 0xA0 SWAP6 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x2136 PUSH1 0x5 DUP3 ADD PUSH2 0x2096 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 DUP3 ADD PUSH2 0x2102 JUMP JUMPDEST PUSH2 0x217B PUSH2 0x203B JUMP JUMPDEST POP PUSH2 0x2185 DUP2 PUSH2 0x2028 JUMP JUMPDEST ISZERO PUSH2 0x21A5 JUMPI PUSH2 0x219F PUSH2 0x2199 PUSH2 0x6C9 SWAP3 PUSH2 0x2002 JUMP JUMPDEST SLOAD PUSH2 0xFDF JUMP JUMPDEST POP PUSH2 0x20B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x426174746C6520646F65736E277420657869737421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x21E9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6561736520526567697374657220506C6179657220466972737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2235 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x426174746C6520616C72656164792065786973747321 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2296 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x228B JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x22AF JUMPI POP POP JUMP JUMPDEST PUSH2 0x614 SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x22DD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x228B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x22F6 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x614 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x22DD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x228B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x590 JUMPI PUSH2 0x2348 DUP2 PUSH2 0x2342 DUP5 SLOAD PUSH2 0x1003 JUMP JUMPDEST DUP5 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x237F JUMPI POP DUP2 SWAP1 PUSH2 0x237B SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x73D JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x2395 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x23D2 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x23B9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x23AF JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x239A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0xA DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH2 0x23EA JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x242C JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP5 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x241F JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x245C JUMPI POP POP SSTORE JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0x20 PUSH2 0x2481 PUSH1 0x1 SWAP3 DUP5 PUSH1 0xFF DUP9 MLOAD AND SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP5 ADD SWAP2 ADD PUSH2 0x244F JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x590 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0xA SSTORE DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0xA PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD DUP2 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH2 0x614 SWAP3 PUSH2 0x24D2 PUSH1 0x6 SWAP3 DUP5 PUSH2 0x2273 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH2 0x24ED PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP6 ADD PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x24FE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP6 ADD PUSH2 0x241B JUMP JUMPDEST PUSH2 0x250F PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x5 DUP6 ADD PUSH2 0x2449 JUMP JUMPDEST PUSH1 0xA0 ADD MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x25E6 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x257E PUSH2 0x2568 DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP3 PUSH2 0x2576 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x5E6 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0xB77 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x25DE JUMPI PUSH1 0x5 DUP2 SWAP1 SHL DUP3 DUP2 ADD DUP5 ADD MLOAD SWAP1 DUP8 ADD DUP5 ADD MLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 SWAP2 SWAP1 PUSH2 0x25D7 DUP3 DUP8 PUSH2 0x2535 JUMP JUMPDEST MSTORE ADD PUSH2 0x258E JUMP JUMPDEST POP SWAP2 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5B059991 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2615 DUP2 PUSH2 0x5B0 JUMP JUMPDEST PUSH1 0x80 PUSH1 0xFF PUSH1 0x4 DUP4 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND DUP6 MSTORE PUSH2 0x2635 PUSH1 0x1 DUP3 ADD PUSH2 0x103D JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x2668 DUP2 PUSH2 0x5B0 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE PUSH2 0x2689 DUP2 PUSH2 0x1F21 JUMP JUMPDEST ISZERO PUSH2 0x26B8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x6C9 SWAP1 PUSH2 0x26B2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST POP PUSH2 0x2608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C6179657220646F65736E277420657869737421 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x590 JUMPI PUSH2 0x2717 PUSH1 0x1 SWAP3 PUSH1 0x1 DUP2 ADD PUSH1 0x8 SSTORE PUSH2 0x1E43 JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x285B JUMPI DUP2 MLOAD DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD SWAP1 PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x590 JUMPI PUSH2 0x276B DUP5 PUSH2 0x2765 DUP8 SLOAD PUSH2 0x1003 JUMP JUMPDEST DUP8 PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x27DC JUMPI POP POP SWAP4 PUSH1 0x4 SWAP4 PUSH2 0x27AB DUP5 PUSH2 0x27C9 SWAP6 PUSH1 0x80 SWAP6 PUSH2 0x614 SWAP11 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x73D JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH2 0x27F4 DUP8 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2844 JUMPI POP POP POP DUP5 PUSH1 0x80 SWAP5 PUSH2 0x614 SWAP10 SWAP9 SWAP5 PUSH1 0x4 SWAP9 SWAP5 PUSH2 0x27C9 SWAP9 PUSH1 0x1 SWAP6 LT PUSH2 0x282B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27AE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x281E JUMP JUMPDEST DUP5 DUP7 ADD MLOAD DUP8 SSTORE SWAP6 DUP7 ADD SWAP6 SWAP5 DUP2 ADD SWAP5 SWAP2 DUP2 ADD SWAP2 PUSH2 0x27F9 JUMP JUMPDEST PUSH2 0x1161 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP2 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 PUSH2 0x287C CALLER PUSH2 0x2658 JUMP JUMPDEST ADD MLOAD PUSH2 0x29D4 JUMPI PUSH2 0x288E PUSH2 0xAC1 CALLER PUSH2 0x1F21 JUMP JUMPDEST PUSH2 0x2896 PUSH2 0x1F47 JUMP JUMPDEST POP PUSH2 0x28A0 CALLER PUSH2 0x357C JUMP JUMPDEST PUSH2 0x28A9 DUP2 PUSH2 0x2E56 JUMP JUMPDEST PUSH1 0x6 PUSH1 0xFF PUSH2 0x28ED PUSH2 0x188D PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x28E3 DUP2 PUSH2 0xAF4 CALLER TIMESTAMP DUP7 SWAP1 SWAP2 PUSH1 0x34 SWAP3 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x64 SWAP1 MOD SWAP1 JUMP JUMPDEST AND MOD SWAP2 PUSH1 0xFF DUP4 AND ISZERO PUSH2 0x299F JUMPI JUMPDEST PUSH2 0x296D PUSH32 0xCA8AB07E9ED17D119729FC652DD24DF9D8430CA862DDA4631925B5B4B99DA362 SWAP4 SWAP5 PUSH2 0x2928 PUSH2 0x623 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0xFF DUP7 AND SWAP1 DUP2 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x294E PUSH1 0x9 SLOAD SWAP2 PUSH2 0x2EA0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2966 PUSH2 0x2FB8 JUMP JUMPDEST SWAP1 CALLER PUSH2 0x35C3 JUMP JUMPDEST PUSH2 0x2980 PUSH2 0x297B PUSH1 0x7 SLOAD PUSH2 0x2FD7 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ADD MSTORE CALLER SWAP2 PUSH1 0x60 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x296D PUSH2 0x29CC PUSH32 0xCA8AB07E9ED17D119729FC652DD24DF9D8430CA862DDA4631925B5B4B99DA362 SWAP5 PUSH2 0x2E8F JUMP JUMPDEST SWAP4 POP POP PUSH2 0x28FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C6179657220697320696E206120626174746C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A18 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x426174746C6520616C7265616479207374617274656421 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A5E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920706C617965722074776F2063616E206A6F696E206120626174746C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2AB4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x416C726561647920696E20626174746C65 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2AF4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x41 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426174746C65206E6F7420737461727465642E20506C656173652074656C6C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E6F7468657220706C6179657220746F206A6F696E2074686520626174746C PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2B70 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x10985D1D1B19481A185CC8185B1C9958591E48195B991959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2BB7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420696E207468697320626174746C65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2C03 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206861766520616C7265616479206D6164652061206D6F766521000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF AND PUSH1 0x2 SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 SWAP2 AND SWAP2 AND SUB SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH2 0x2C85 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x378 JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1F42 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2CC2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2CE1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10985D1D1B1948185B1C9958591E48195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2D25 PUSH2 0x203B JUMP JUMPDEST POP PUSH2 0x2D46 PUSH1 0x2 DUP4 MLOAD PUSH2 0x2D36 DUP2 PUSH2 0x94F JUMP JUMPDEST PUSH2 0x2D3F DUP2 PUSH2 0x94F JUMP JUMPDEST EQ ISZERO PUSH2 0x2CDA JUMP JUMPDEST PUSH1 0x2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH2 0x2D69 DUP4 DUP4 MLOAD PUSH2 0x2FE6 JUMP JUMPDEST PUSH32 0xAE6E5EAFB6CD1CB4B139E7A0B9140AA182EE7D50E99F50D660156F79212ACBC0 PUSH1 0x60 DUP5 ADD PUSH2 0x2E11 PUSH1 0x2 PUSH2 0x2DFB PUSH2 0x2DAB PUSH2 0x15E4 DUP6 MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x2E03 DUP4 PUSH2 0x2DFB PUSH2 0x2DC4 PUSH2 0x15E4 PUSH2 0x1431 DUP11 MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SLOAD SWAP4 PUSH2 0x2DE0 PUSH1 0x4 PUSH2 0x2DD4 DUP4 PUSH2 0x1E43 JUMP JUMPDEST POP ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2DF6 PUSH1 0x3 PUSH2 0x2DEE DUP4 PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH1 0x19 SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH1 0xA SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2DE0 PUSH1 0x4 PUSH2 0x2DD4 DUP4 PUSH2 0x1E43 JUMP JUMPDEST MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP2 DUP3 SWAP2 DUP3 AND DUP6 DUP2 SUB PUSH2 0x2E4D JUMPI POP PUSH1 0x20 ADD MLOAD AND SWAP4 JUMPDEST MLOAD SWAP4 PUSH2 0x2E47 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 AND SWAP6 DUP3 PUSH2 0x830 JUMP JUMPDEST SUB SWAP1 LOG3 SWAP1 JUMP JUMPDEST SWAP2 POP POP SWAP4 PUSH2 0x2E34 JUMP JUMPDEST PUSH1 0xA SUB SWAP1 PUSH1 0xA DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH1 0x2 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xFF DUP2 EQ PUSH2 0x2416 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x590 JUMPI PUSH2 0x2EC2 PUSH1 0x1 SWAP3 PUSH1 0x1 DUP2 ADD PUSH1 0x9 SSTORE PUSH2 0x197E JUMP JUMPDEST SWAP3 SWAP1 SWAP3 PUSH2 0x285B JUMPI DUP2 MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x590 JUMPI PUSH2 0x2EEB DUP4 PUSH2 0x2765 DUP8 SLOAD PUSH2 0x1003 JUMP JUMPDEST PUSH1 0x20 SWAP2 DUP3 PUSH1 0x1 PUSH1 0x1F DUP7 GT EQ PUSH2 0x2F42 JUMPI POP POP DUP3 PUSH1 0x60 SWAP4 PUSH1 0x3 SWAP6 SWAP4 PUSH2 0x2F24 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x73D JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST DUP5 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 PUSH2 0x2F5A DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2FA1 JUMPI POP POP POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x60 SWAP7 PUSH1 0x3 SWAP9 SWAP7 LT PUSH2 0x2F89 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH2 0x2F27 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP9 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2F7C JUMP JUMPDEST DUP5 DUP7 ADD MLOAD DUP8 SSTORE SWAP6 DUP7 ADD SWAP6 SWAP5 DUP2 ADD SWAP5 SWAP2 DUP2 ADD SWAP2 PUSH2 0x2F5F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2FC5 DUP3 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x3 DUP3 MSTORE PUSH3 0x30783 PUSH1 0xEC SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2416 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2FEF DUP2 PUSH2 0x2028 JUMP JUMPDEST ISZERO PUSH2 0x3090 JUMPI PUSH2 0x2199 PUSH2 0x3000 SWAP2 PUSH2 0x2002 JUMP JUMPDEST PUSH2 0x285B JUMPI DUP2 MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH2 0x306F PUSH1 0xA0 PUSH2 0x614 SWAP5 PUSH2 0x3024 PUSH1 0x6 SWAP5 DUP7 PUSH2 0x2273 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE PUSH2 0x303F PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP8 ADD PUSH2 0x2321 JUMP JUMPDEST PUSH2 0x3050 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP8 ADD PUSH2 0x241B JUMP JUMPDEST PUSH2 0x3061 PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x5 DUP8 ADD PUSH2 0x2449 JUMP JUMPDEST ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10985D1D1B1948191BD95CDB89DD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x30D3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D616E61206E6F742073756666696369656E7420666F722061747461636B696E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6721 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x2 DUP4 LT ISZERO PUSH2 0xFFE JUMPI PUSH1 0x1F SWAP1 DUP4 PUSH1 0x5 SHR ADD SWAP3 AND SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0xFF DUP3 AND SWAP3 PUSH1 0x1 DUP5 EQ DUP1 SWAP5 DUP2 ISZERO PUSH2 0x31FD JUMPI JUMPDEST POP ISZERO PUSH2 0x31B8 JUMPI PUSH1 0x5 PUSH2 0x318A PUSH2 0x2199 PUSH2 0x3191 SWAP5 PUSH2 0x614 SWAP8 PUSH1 0x0 EQ PUSH2 0x31AE JUMPI PUSH2 0x3185 PUSH1 0x3 PUSH1 0x40 PUSH2 0x317C CALLER PUSH2 0x2658 JUMP JUMPDEST ADD MLOAD LT ISZERO PUSH2 0x30CC JUMP JUMPDEST PUSH2 0x2002 JUMP JUMPDEST POP ADD PUSH2 0x3123 JUMP JUMPDEST SWAP1 DUP1 SLOAD SWAP1 SWAP3 PUSH1 0xFF PUSH1 0x3 SWAP4 SWAP1 SWAP4 SHL DUP4 DUP2 SHL NOT SWAP1 SWAP3 AND SWAP3 AND SWAP1 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3185 PUSH1 0x1 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43686F6963652073686F756C64206265206569746865722031206F7220322100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ CODESIZE PUSH2 0x314F JUMP JUMPDEST ISZERO PUSH2 0x320F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6179657273207374696C6C206E65656420746F206D616B652061206D6F76 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x3267 SWAP1 PUSH2 0x2173 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND EQ SWAP2 DUP3 ISZERO PUSH2 0x3319 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x32C0 JUMPI DUP1 PUSH2 0x32AA PUSH1 0x80 PUSH2 0x614 SWAP4 ADD MLOAD PUSH1 0xFF DUP2 MLOAD AND ISZERO ISZERO SWAP1 DUP2 PUSH2 0x32AF JUMPI JUMPDEST POP PUSH2 0x3208 JUMP JUMPDEST PUSH2 0x370C JUMP JUMPDEST PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND SWAP1 POP ISZERO ISZERO CODESIZE PUSH2 0x32A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920706C617965727320696E207468697320626174746C652063616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6D616B652061206D6F7665 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP3 POP ADD MLOAD AND CALLER EQ CODESIZE DUP1 PUSH2 0x3283 JUMP JUMPDEST SWAP1 PUSH2 0x3334 DUP3 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x3341 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x5E6 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x3352 PUSH1 0x1F NOT SWAP2 PUSH2 0x63D JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x30 ADD SWAP1 PUSH1 0xFF DUP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xFFE JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x340F JUMPI DUP1 PUSH1 0x0 DUP3 PUSH1 0x0 SWAP4 JUMPDEST PUSH2 0x33FB JUMPI POP DUP2 PUSH2 0x339B DUP5 PUSH2 0x332A JUMP JUMPDEST SWAP4 SWAP1 JUMPDEST PUSH2 0x33A8 JUMPI POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x33B1 SWAP1 PUSH2 0x2E64 JUMP JUMPDEST SWAP2 PUSH2 0x33E7 PUSH2 0x33D7 PUSH2 0x33D2 PUSH2 0x188D PUSH1 0xA DUP6 DIV SWAP5 PUSH2 0x33CC DUP7 PUSH2 0x2400 JUMP JUMPDEST SWAP1 PUSH2 0x2E82 JUMP JUMPDEST PUSH2 0x335C JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 JUMP JUMPDEST DUP3 BYTE PUSH2 0x33F3 DUP5 DUP7 PUSH2 0x336D JUMP JUMPDEST MSTORE8 SWAP2 DUP3 PUSH2 0x339E JUMP JUMPDEST SWAP3 PUSH2 0x3407 PUSH1 0xA SWAP2 PUSH2 0x2FD7 JUMP JUMPDEST SWAP4 DIV DUP1 PUSH2 0x338C JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x341C DUP2 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 SWAP1 SWAP4 DUP1 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x25E6 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 PUSH2 0x3458 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 SUB PUSH2 0x3481 JUMPI POP SWAP4 PUSH1 0x20 DUP1 PUSH2 0x3476 SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0x3DF2 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3450 JUMP JUMPDEST DUP6 SWAP5 SWAP2 SWAP3 SWAP4 SWAP5 EXTCODESIZE PUSH2 0x3498 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x3476 JUMP JUMPDEST PUSH2 0x34C1 SWAP4 PUSH1 0x0 PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP12 DUP13 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD PUSH2 0x3CD1 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x354B JUMPI JUMPDEST POP PUSH2 0x350D JUMPI DUP3 PUSH2 0x34DC PUSH2 0x3D03 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x3506 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x3528 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x348D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x356E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3575 JUMPI JUMPDEST PUSH2 0x3566 DUP2 DUP4 PUSH2 0x5E6 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3C71 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x34CE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x355C JUMP JUMPDEST PUSH1 0xA SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PREVRANDAO DUP4 MSTORE TIMESTAMP PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x54 DUP2 MSTORE PUSH2 0x35B0 DUP2 PUSH2 0x575 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 MOD DUP1 ISZERO PUSH2 0x35BD JUMPI SWAP1 JUMP JUMPDEST POP PUSH1 0x5 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP2 DUP4 ISZERO PUSH2 0x1D57 JUMPI PUSH2 0x35FE PUSH1 0x40 MLOAD SWAP2 PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 SWAP4 DUP5 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x25E6 JUMPI POP POP DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0x362B JUMPI POP PUSH1 0x20 DUP1 PUSH2 0x614 SWAP6 ADD MLOAD SWAP2 ADD MLOAD SWAP2 CALLER PUSH2 0x3D97 JUMP JUMPDEST SWAP2 SWAP4 SWAP3 DUP5 EXTCODESIZE PUSH2 0x363C JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3664 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP11 DUP12 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x3C86 JUMP JUMPDEST SUB SWAP3 GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3699 JUMPI JUMPDEST POP PUSH2 0x367F JUMPI DUP3 PUSH2 0x34DC PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x3528 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x3635 JUMP JUMPDEST PUSH2 0x36B3 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3575 JUMPI PUSH2 0x3566 DUP2 DUP4 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3671 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2416 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH1 0x0 SWAP2 JUMPDEST PUSH1 0x2 DUP4 LT PUSH2 0x36EC JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x36DF JUMP JUMPDEST PUSH1 0x3 PUSH2 0x39A4 PUSH2 0x393C PUSH2 0x3922 PUSH2 0x1431 PUSH1 0x60 PUSH2 0x3733 PUSH2 0x15E4 DUP3 DUP10 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x80 DUP9 ADD MLOAD MLOAD PUSH1 0xFF AND DUP9 DUP4 ADD MLOAD MLOAD SWAP1 SWAP2 SWAP1 DUP4 SWAP1 PUSH2 0x3759 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2658 JUMP JUMPDEST ADD MLOAD DUP10 DUP5 PUSH2 0x378F PUSH2 0x91E DUP3 PUSH1 0x40 PUSH2 0x377D PUSH2 0x91E DUP4 DUP9 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 JUMP JUMPDEST ADD MLOAD SWAP5 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST ADD MLOAD SWAP2 PUSH2 0x379A PUSH2 0x616 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0xFF PUSH1 0x20 DUP6 ADD SWAP6 AND DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x37C8 PUSH2 0x15E4 PUSH2 0x1431 DUP6 DUP13 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SLOAD SWAP1 PUSH2 0x37DB PUSH2 0x183C PUSH1 0x80 DUP13 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP11 DUP6 PUSH2 0x37F0 PUSH2 0xEC8 PUSH2 0x1431 DUP4 DUP6 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0xFF DUP8 PUSH2 0x381F PUSH2 0x91E PUSH2 0x1431 DUP4 PUSH1 0x40 PUSH2 0x3814 PUSH2 0x91E PUSH2 0x1431 DUP5 DUP13 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ADD MLOAD SWAP8 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ADD MLOAD SWAP4 PUSH2 0x382A PUSH2 0x616 JUMP JUMPDEST SWAP7 DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE DUP6 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE DUP4 PUSH2 0x384A PUSH2 0x630 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP5 MLOAD PUSH1 0x1 DUP2 EQ DUP1 DUP1 SWAP2 PUSH2 0x3C63 JUMPI JUMPDEST ISZERO PUSH2 0x3A5F JUMPI POP POP POP DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD GT PUSH2 0x39A9 JUMPI POP POP DUP2 DUP9 ADD MLOAD MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x38B6 SWAP2 PUSH2 0x38A8 SWAP1 DUP12 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D1D JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x36D5 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x80 DUP9 ADD MLOAD MSTORE PUSH1 0x0 PUSH2 0x38D1 PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MSTORE PUSH2 0x38E0 DUP8 PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2FE6 JUMP JUMPDEST PUSH2 0x394A DUP2 DUP9 PUSH1 0x2 PUSH2 0x3942 PUSH2 0x393C PUSH2 0x3922 PUSH2 0x390C PUSH2 0x3907 DUP8 DUP8 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x357C JUMP JUMPDEST SWAP5 SWAP1 SWAP6 ADD MLOAD MLOAD SWAP4 SWAP5 DUP6 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0x197E JUMP JUMPDEST POP ADD SSTORE PUSH2 0x2E56 JUMP JUMPDEST DUP8 DUP3 ADD MLOAD MLOAD DUP8 SWAP1 PUSH2 0x3967 SWAP1 PUSH2 0x393C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3922 JUMP JUMPDEST POP ADD SSTORE PUSH2 0x399B DUP2 DUP9 PUSH1 0x2 PUSH2 0x3942 PUSH2 0x393C PUSH2 0x3922 PUSH2 0x1431 PUSH2 0x3990 PUSH2 0x3907 PUSH2 0x1431 DUP10 DUP10 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP7 DUP8 SWAP7 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP7 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP ADD SSTORE JUMP JUMPDEST DUP2 DUP5 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD DUP2 LT PUSH2 0x39E8 JUMPI POP POP POP PUSH2 0x38B6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x39E2 DUP11 PUSH2 0x143E PUSH2 0x1431 DUP8 DUP4 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST POP PUSH2 0x38AA JUMP JUMPDEST PUSH1 0x2 SWAP4 POP PUSH2 0x3A2A DUP3 DUP6 SWAP3 PUSH2 0x3A0E DUP14 PUSH2 0x3A04 PUSH2 0x3A36 SWAP9 SWAP8 MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD SWAP2 DUP3 SLOAD PUSH2 0x2E82 JUMP JUMPDEST SWAP1 SSTORE DUP7 DUP2 ADD MLOAD PUSH2 0x3A22 DUP14 PUSH2 0x3A04 DUP8 MLOAD PUSH2 0x1E43 JUMP JUMPDEST SWAP1 SSTORE MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH2 0x3A22 DUP2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST POP ADD PUSH2 0x3A42 DUP2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x38B6 DUP3 DUP10 ADD MLOAD PUSH2 0x38AA JUMP JUMPDEST SWAP4 PUSH2 0x38B6 SWAP6 SWAP2 DUP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3E8D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP9 SWAP7 SWAP1 PUSH2 0x3C55 JUMPI JUMPDEST ISZERO PUSH2 0x3B41 JUMPI POP DUP14 PUSH2 0x3A97 PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD SWAP1 PUSH2 0x36C8 JUMP JUMPDEST DUP6 DUP4 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 DUP4 DUP4 LT PUSH2 0x3AC5 JUMPI SWAP6 DUP7 ADD MLOAD MLOAD PUSH2 0x39E2 SWAP7 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 POP PUSH2 0x143E SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SWAP7 PUSH2 0x3AFF SWAP7 DUP9 SWAP6 PUSH2 0x3A2A SWAP6 DUP1 PUSH1 0x80 DUP11 ADD MLOAD GT PUSH1 0x0 EQ PUSH2 0x3B12 JUMPI POP POP POP POP POP PUSH1 0x40 DUP5 ADD MLOAD JUMPDEST DUP16 PUSH2 0x3AF6 DUP7 MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD SSTORE MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH2 0x3B0B DUP2 SLOAD PUSH2 0x36BA JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x3B3C SWAP4 PUSH2 0x3B26 PUSH2 0x1431 SWAP3 PUSH2 0x3B2F SWAP5 PUSH2 0x2E82 JUMP JUMPDEST SWAP6 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH2 0x3AEB JUMP JUMPDEST SWAP4 POP SWAP2 PUSH1 0x2 DUP1 SWAP5 EQ DUP1 DUP1 SWAP2 PUSH2 0x3C47 JUMPI JUMPDEST ISZERO PUSH2 0x3C01 JUMPI POP DUP14 PUSH2 0x3B6B PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD SWAP1 PUSH2 0x36C8 JUMP JUMPDEST DUP4 DUP11 ADD MLOAD SWAP1 SWAP5 SWAP1 SWAP2 DUP6 DUP4 LT PUSH2 0x3B95 JUMPI SWAP5 POP POP POP POP POP PUSH2 0x39E2 SWAP2 POP PUSH2 0x143E PUSH2 0x1431 DUP8 DUP4 ADD MLOAD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x3BD0 SWAP6 DUP8 SWAP5 PUSH2 0x3BC4 SWAP5 DUP14 DUP2 PUSH1 0x80 DUP8 ADD MLOAD GT PUSH1 0x0 EQ PUSH2 0x3BDC JUMPI POP POP POP POP POP PUSH1 0x40 DUP2 ADD MLOAD JUMPDEST DUP16 PUSH2 0x3AF6 DUP4 MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH2 0x3A22 DUP2 SLOAD PUSH2 0x36BA JUMP JUMPDEST POP ADD PUSH2 0x3B0B DUP2 SLOAD PUSH2 0x2E73 JUMP JUMPDEST PUSH2 0x3BEC PUSH2 0x3B2F SWAP3 PUSH2 0x3BFC SWAP6 PUSH2 0x2E82 JUMP JUMPDEST SWAP5 ADD MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3BB9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3C3A JUMPI JUMPDEST PUSH2 0x3C16 JUMPI JUMPDEST POP POP POP PUSH2 0x38AA JUMP JUMPDEST DUP3 PUSH2 0x3BC4 PUSH2 0x3C24 SWAP4 MLOAD PUSH2 0x1E43 JUMP JUMPDEST POP ADD PUSH2 0x3C30 DUP2 SLOAD PUSH2 0x36BA JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3C0E JUMP JUMPDEST POP DUP3 PUSH1 0x20 DUP3 ADD MLOAD EQ PUSH2 0x3C09 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x20 DUP5 ADD MLOAD EQ PUSH2 0x3B51 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x20 DUP5 ADD MLOAD EQ PUSH2 0x3A7D JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x20 DUP8 ADD MLOAD EQ PUSH2 0x3864 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2FC JUMPI MLOAD PUSH2 0x6C9 DUP2 PUSH2 0x4DF JUMP JUMPDEST SWAP3 PUSH2 0x3CB5 PUSH2 0x6C9 SWAP6 SWAP4 PUSH2 0x3CC3 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xD16 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xD16 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x39B JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x6C9 SWAP6 SWAP4 PUSH2 0x3CB5 SWAP2 PUSH2 0x3CC3 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP9 MSTORE AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD SWAP1 PUSH2 0xD16 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x3D2E JUMPI RETURNDATASIZE SWAP1 PUSH2 0x3D14 DUP3 PUSH2 0x63D JUMP JUMPDEST SWAP2 PUSH2 0x3D22 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x5E6 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x6C9 SWAP6 SWAP5 PUSH1 0x1 DUP1 DUP7 SHL SUB AND DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP2 SWAP3 PUSH2 0x6C9 SWAP6 SWAP5 SWAP2 PUSH1 0xA0 SWAP5 PUSH1 0x1 DUP1 DUP8 SHL SUB DUP1 SWAP3 AND DUP6 MSTORE AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP2 PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x39B JUMP JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 SWAP4 DUP5 EXTCODESIZE PUSH2 0x3DA9 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH2 0x3DCC PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP4 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP9 DUP10 DUP7 MSTORE PUSH1 0x4 DUP7 ADD PUSH2 0x3D33 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3699 JUMPI POP PUSH2 0x367F JUMPI DUP3 PUSH2 0x34DC PUSH2 0x3D03 JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP5 SWAP2 SWAP5 DUP6 EXTCODESIZE PUSH2 0x3E06 JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3E29 PUSH1 0x20 SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP10 DUP11 DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x3D64 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x3E6B JUMPI JUMPDEST POP PUSH2 0x3E50 JUMPI DUP3 PUSH2 0x34DC PUSH2 0x3D03 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SUB PUSH2 0x3528 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x3450 JUMP JUMPDEST PUSH2 0x3E85 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3575 JUMPI PUSH2 0x3566 DUP2 DUP4 PUSH2 0x5E6 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x3E42 JUMP INVALID 0xC6 0xBF DUP7 0xC 0xBC ISZERO 0xF7 MUL 0xF PUSH20 0x993A671F01BBB1831A8A7A12C126CA735EB632E7 JUMPI PUSH22 0xA2646970667358221220A67CF72AED72E96424AA257C SMOD 0xFB SLOAD 0xDC 0x29 0xBE PUSH19 0xF4AE416CF259161DF2D265690964736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"507:21596:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;507:21596:13;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;:::o;:::-;;;-1:-1:-1;;;;;507:21596:13;;;;;;:::o;:::-;;;;;;-1:-1:-1;;507:21596:13;;;;;2350:22:2;507:21596:13;;:::i;:::-;;;-1:-1:-1;507:21596:13;-1:-1:-1;507:21596:13;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;2350:22:2;507:21596:13;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;507:21596:13;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;4593:10;507:21596;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4593:10;507:21596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;507:21596:13;;;;;:::o;:::-;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;;;:::i;:::-;;;;;1532:26:2;;;1517:41;;:109;;;;;507:21596:13;1517:161:2;;;;507:21596:13;;;;;;;;;;1517:161:2;-1:-1:-1;;;861:40:10;;-1:-1:-1;1517:161:2;;;:109;-1:-1:-1;;;1574:52:2;;;-1:-1:-1;1517:109:2;;507:21596:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;;;507:21596:13;;;;;;-1:-1:-1;;507:21596:13;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;507:21596:13;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;507:21596:13;;-1:-1:-1;;;;;507:21596:13;;;;;;;10348:13:2;507:21596:13;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10348:13:2;507:21596:13;;;;;;-1:-1:-1;507:21596:13;;;;;10348:13:2;507:21596:13;;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;10348:13:2;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;876:1;507:21596;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;1024:2;507:21596;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;2176:4:2;507:21596:13;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2176:4:2;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;-1:-1:-1;;507:21596:13;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;-1:-1:-1;507:21596:13;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;507:21596:13;;;;;1205:15:5;507:21596:13;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;10010:61;10018:20;10027:10;10018:20;:::i;:::-;10010:61;:::i;:::-;10123:51;10131:16;10132:15;;;:::i;:::-;10131:16;;507:21596;10131:16;10123:51;:::i;:::-;507:21596;;10268:17;;;;;;;;;;:::i;:::-;;507:21596;;10268:17;;;;;;:::i;:::-;507:21596;10258:28;;507:21596;;;:::i;:::-;10027:10;507:21596;;-1:-1:-1;10268:17:13;10472:24;;507:21596;;;:::i;:::-;;-1:-1:-1;507:21596:13;;-1:-1:-1;10268:17:13;10571:6;;507:21596;;;:::i;:::-;;-1:-1:-1;507:21596:13;;10268:17;10323:358;;507:21596;10323:358;507:21596;10323:358;;507:21596;10323:358;;;507:21596;10323:358;;;507:21596;-1:-1:-1;10323:358:13;;;507:21596;;10708:7;507:21596;;;:::i;:::-;;10767:21;;;:::i;:::-;507:21596;;;;;;;:::i;:::-;-1:-1:-1;;;;;507:21596:13;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;507:21596:13;;;;735:10:8;4251:14:2;;;;:49;;507:21596:13;4247:129:2;;507:21596:13;;9208:16:2;9204:88;;9305:18;9301:88;;9448:4;;;;:::i;:::-;507:21596:13;9301:88:2;507:21596:13;;-1:-1:-1;;;9346:32:2;;9222:1;9346:32;;;507:21596:13;;;9346:32:2;9204:88;507:21596:13;;-1:-1:-1;;;9247:34:2;;9222:1;9247:34;;;507:21596:13;;;9247:34:2;4247:129;507:21596:13;;;-1:-1:-1;;;4323:42:2;;735:10:8;4323:42:2;;;507:21596:13;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;4323:42:2;;;4251:49;-1:-1:-1;;507:21596:13;;;3480:18:2;507:21596:13;;;;;;;;735:10:8;507:21596:13;;;;;;;;;;4269:31:2;4251:49;;507:21596:13;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;507:21596:13;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;-1:-1:-1;507:21596:13;;;;;;-1:-1:-1;507:21596:13;;1400:19:5;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;649:31;507:21596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5146:7;507:21596;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5146:7;507:21596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1145:23;507:21596;;;;;;1145:23;-1:-1:-1;507:21596:13;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;507:21596:13;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;1145:23;507:21596;1145:23;;;;;;507:21596;1145:23;;:::i;:::-;507:21596;;;;;1145:23;507:21596;1145:23;;;507:21596;1145:23;;;;;;:::i;:::-;507:21596;1145:23;507:21596;;;;;1145:23;;507:21596;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;579:21;507:21596;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;579:21;507:21596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;837:1;507:21596;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;507:21596:13;;-1:-1:-1;;;;;;507:21596:13;;;;;;;-1:-1:-1;;;;;507:21596:13;3052:40:0;507:21596:13;;3052:40:0;507:21596:13;;;;;;;;-1:-1:-1;;507:21596:13;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;7025:20;7034:10;7025:20;:::i;:::-;507:21596;;7367:14;507:21596;7151:7;507:21596;7176:54;507:21596;;:::i;:::-;7034:10;507:21596;;7189:40;507:21596;7189:40;;507:21596;7215:2;507:21596;7189:40;;507:21596;7219:2;7189:40;;;507:21596;-1:-1:-1;7189:40:13;;;507:21596;7176:54;:::i;:::-;7034:10;507:21596;;;;7273:10;507:21596;;;;;;7367:14;:::i;:::-;7400:28;507:21596;;7034:10;7400:28;7034:10;7400:28;;;:::i;:::-;;;;507:21596;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;1710:6:0;507:21596:13;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;19301:22;507:21596;;;:::i;19301:22::-;19356:15;;;;;;507:21596;;;;;;;;;;19378:10;19356:32;:85;;;;;507:21596;;;;;19509:15;;507:21596;;19378:10;19509:32;;19378:10;;19568:15;:18;;19557:39;19568:15;;507:21596;;;;19568:18;507:21596;-1:-1:-1;;;;;507:21596:13;;;19568:18;19557:39;:::i;19509:142::-;19612:39;;;;:::i;507:21596::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;19356:85;507:21596;;;;;19378:10;19409:32;;-1:-1:-1;19356:85:13;;;507:21596;;;;12190:13;12146:22;507:21596;;;:::i;12146:22::-;12190:13;;507:21596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;963:1;507:21596;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;11045:16;;;:::i;:::-;507:21596;11074:117;507:21596;;;;;:::i;:::-;;;;:::i;:::-;11096:44;11074:117;:::i;:::-;11263:15;;;;;507:21596;11263:15;;11654:7;;11263:15;;;11241:115;;-1:-1:-1;;;;;507:21596:13;-1:-1:-1;;;;;507:21596:13;11285:10;11263:32;;11241:115;:::i;:::-;11414:61;11422:31;11423:30;;:21;11285:10;11423:21;:::i;:::-;:30;507:21596;;;;;11422:31;11414:61;:::i;:::-;11561:20;507:21596;;11592:31;11285:10;11592:31;:15;;507:21596;;;;11592:31;-1:-1:-1;;;;;507:21596:13;;;;;;11592:31;11654:7;:::i;:::-;11694:15;;507:21596;11675:55;;507:21596;;11675:39;;11683:30;;-1:-1:-1;;;;;507:21596:13;11694:18;-1:-1:-1;;;;;507:21596:13;;;;;7273:10;507:21596;;;;;;;11683:30;507:21596;11675:39;:::i;:::-;-1:-1:-1;11675:48:13;507:21596;;-1:-1:-1;;507:21596:13;11561:20;507:21596;;;;11675:55;11741;507:21596;11741:39;11749:30;11760:18;;:15;;507:21596;;;;11741:55;11824:12;;;;11838:15;;507:21596;11814:55;;-1:-1:-1;;;;;507:21596:13;11838:18;-1:-1:-1;;;;;507:21596:13;;;11814:55;;11824:12;507:21596;11285:10;11814:55;11285:10;11814:55;;;:::i;:::-;;;;11824:12;507:21596;;;;;;:::i;:::-;;;;;;-1:-1:-1;;507:21596:13;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;13375:22:2;;13371:94;;13474:35;:46;735:10:8;;-1:-1:-1;507:21596:13;13474:18:2;507:21596:13;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;13474:35:2;507:21596:13;;;;;;;;;;;;;;;13474:46:2;507:21596:13;;;;;13535:41:2;507:21596:13;735:10:8;13535:41:2;;507:21596:13;13371:94:2;507:21596:13;;-1:-1:-1;;;13420:34:2;;-1:-1:-1;507:21596:13;13420:34:2;;507:21596:13;;;13420:34:2;507:21596:13;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;:::i;:::-;12984:22;13754:133;12984:22;;;;:::i;:::-;507:21596;;;;;;;:::i;:::-;;;;:::i;:::-;13019:159;13065:20;13041:44;;;13019:159;:::i;:::-;13224:116;13270:18;507:21596;;;;;:::i;:::-;;;;:::i;:::-;13246:42;;13224:116;:::i;:::-;13424:15;;;;;507:21596;;13424:15;;13602:139;;507:21596;;13624:55;;;;:13;;13388:161;;-1:-1:-1;;;;;507:21596:13;;;13410:10;:32;:85;;;;;507:21596;13388:161;;;:::i;:::-;13624:13;;13638:15;;507:21596;13410:10;;13638:32;;-1:-1:-1;;;;;507:21596:13;13638:18;507:21596;13638:32;;:40;;;-1:-1:-1;13638:40:13;507:21596;13624:55;;:::i;:::-;507:21596;;;;;13624:55;507:21596;13624:60;13602:139;:::i;:::-;13788:15;507:21596;13410:10;;13788:32;;-1:-1:-1;;;;;507:21596:13;13788:18;507:21596;13788:32;;:40;;507:21596;-1:-1:-1;13788:40:13;507:21596;13754:133;:::i;:::-;13943:113;13961:95;13624:13;13910:22;;;:::i;:::-;13979:13;;;507:21596;13979:21;;507:21596;;13979:16;507:21596;;;;13979:21;:29;;14026:21;:16;;13961:48;-1:-1:-1;13961:48:13;:::i;:::-;14026:13;;507:21596;;;;14026:21;:29;;-1:-1:-1;14026:29:13;13961:95;:::i;13943:113::-;14096:30;:15;;;13065:20;;14096:30;14072:55;;;:::i;:::-;507:21596;;;14072:55;;-1:-1:-1;14072:55:13;;14144:15;14140:80;;507:21596;14140:80;14196:11;;;:::i;14096:30::-;;-1:-1:-1;14096:30:13;;14026:29;;;13961:95;:::i;13979:29::-;14026:21;:16;;13961:48;13979:29;13961:48;:::i;13788:40::-;507:21596;13788:40;;;13638;;;;;13410:85;507:21596;;;;-1:-1:-1;;;;;507:21596:13;;-1:-1:-1;13410:10:13;13463:32;13410:85;;;;507:21596;;;;;;-1:-1:-1;;507:21596:13;;;;;;-1:-1:-1;507:21596:13;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;1085:29;507:21596;;;;;;1085:29;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;-1:-1:-1;507:21596:13;:::o;:::-;;;;;;-1:-1:-1;;507:21596:13;;;;;;1085:29;507:21596;1085:29;;;;;;507:21596;1085:29;;:::i;:::-;;;;;:::i;:::-;;;;;507:21596;1085:29;;;;;507:21596;1085:29;;507:21596;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;21689:18;507:21596;;21689:18;:::i;:::-;507:21596;;;-1:-1:-1;507:21596:13;21675:7;507:21596;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;21658:59;507:21596;;;;;;;;:::i;:::-;-1:-1:-1;;;507:21596:13;;;;;;;;;;;21675:7;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;21658:59;;;507:21596;-1:-1:-1;;507:21596:13;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;794:1;507:21596;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;3480:37:2;507:21596:13;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;507:21596:13;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;3480:37:2;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;4048:7;507:21596;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;4048:7;507:21596;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;507:21596:13;;;;735:10:8;3757:14:2;;;;:49;;507:21596:13;3753:129:2;;507:21596:13;;8273:16:2;8269:88;;8370:18;8366:88;;8602:4;507:21596:13;8513:29:2;507:21596:13;;;;16080:849:2;16291:632;;;;;;;;;;;;;;;;;;;;;;;;;;16080:849;8513:29;8602:4;;;;:::i;8366:88::-;507:21596:13;;-1:-1:-1;;;8411:32:2;;-1:-1:-1;507:21596:13;8411:32:2;;507:21596:13;;;8411:32:2;8269:88;507:21596:13;;-1:-1:-1;;;8312:34:2;;-1:-1:-1;507:21596:13;8312:34:2;;507:21596:13;;;8312:34:2;3753:129;507:21596:13;;-1:-1:-1;;;3829:42:2;;735:10:8;507:21596:13;3829:42:2;;507:21596:13;-1:-1:-1;;;;;507:21596:13;;;;;;;;4323:42:2;3757:49;-1:-1:-1;;507:21596:13;;;3480:18:2;507:21596:13;;;;;;;;735:10:8;507:21596:13;;;;;;;;;;3775:31:2;3757:49;;507:21596:13;;;;;;-1:-1:-1;;507:21596:13;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;507:21596:13;;;;2627:22:0;;2623:91;;3004:6;507:21596:13;;-1:-1:-1;;;;;;507:21596:13;;;;;;;;3052:40:0;-1:-1:-1;;3052:40:0;507:21596:13;2623:91:0;507:21596:13;;-1:-1:-1;;;2672:31:0;;-1:-1:-1;507:21596:13;2672:31:0;;507:21596:13;;;2672:31:0;507:21596:13;11675:7;507:21596;;;;;;11675:7;-1:-1:-1;507:21596:13;;;-1:-1:-1;507:21596:13;;;;;-1:-1:-1;507:21596:13;:::o;:::-;;;;;;-1:-1:-1;;507:21596:13;;;;;;1035:23;507:21596;1035:23;;;;;;;;:::i;:::-;-1:-1:-1;507:21596:13;;-1:-1:-1;;;;;507:21596:13;1035:23;507:21596;1035:23;;;:::i;:::-;;;;;507:21596;1035:23;507:21596;;1035:23;;;507:21596;1035:23;;507:21596;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;3585:187::-;-1:-1:-1;;;;;507:21596:13;-1:-1:-1;507:21596:13;;;3659:10;507:21596;;;;;;;;-1:-1:-1;3697:12:13;:::o;3655:110::-;3749:4;3742:11;:::o;507:21596::-;;;;;;;:::i;:::-;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;:::o;4276:220::-;507:21596;;:::i;:::-;;4388:19;;;:::i;:::-;507:21596;;;;;;;;;-1:-1:-1;507:21596:13;4466:15;507:21596;;;4455:33;507:21596;-1:-1:-1;507:21596:13;;4455:33;:::i;:::-;507:21596;;:::i;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;10733:10;507:21596;;;;;;;:::o;4650:195::-;507:21596;4650:195;507:21596;:::i;:::-;;4731:17;;-1:-1:-1;4770:12:13;:::o;507:21596::-;;;-1:-1:-1;507:21596:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;4853:204;507:21596;;:::i;:::-;;4964:15;;;:::i;:::-;507:21596;;;5023:26;507:21596;;;;:::i;:::-;;5023:26;:::i;:::-;507:21596;;:::i;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;10348:13:2;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;507:21596:13;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21173:2;507:21596;;;;;;21173:2;507:21596;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10708:7;507:21596;-1:-1:-1;;;507:21596:13;;;;;;;;;10708:7;507:21596;;;;;;10708:7;-1:-1:-1;507:21596:13;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;507:21596:13;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2536:552:2:-;;;;507:21596:13;;;;2692:29:2;;;2688:121;;507:21596:13;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;-1:-1:-1;;507:21596:13;;;;;;-1:-1:-1;2934:3:2;507:21596:13;;2913:19:2;;;;;4712:82:7;;;;;;;;;;4313;;;;;;2350:9:2;507:21596:13;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;4712:82:7;2953:87:2;;;;:::i;:::-;507:21596:13;;2898:13:2;;2913:19;-1:-1:-1;2913:19:2;;-1:-1:-1;;;2536:552:2:o;2688:121::-;507:21596:13;;-1:-1:-1;;;2744:54:2;;;;;507:21596:13;;;;;;;;;;;;;4323:42:2;507:21596:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3780:179::-;-1:-1:-1;507:21596:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3868:14;;;:::i;:::-;507:21596;;;-1:-1:-1;;;;;507:21596:13;;;;;7273:10;507:21596;;;;;;;3926:25;;3934:16;507:21596;3926:25;507:21596;;:::i;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;7151:7;507:21596;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;7151:7;507:21596;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;507:21596:13;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;9343:364::-;9422:30;:21;9432:10;9422:21;:::i;:::-;:30;507:21596;;;9539:61;9547:20;9432:10;9547:20;:::i;9539:61::-;507:21596;;:::i;:::-;;8240:93;9432:10;8240:93;:::i;:::-;8374:60;;;:::i;:::-;507:21596;;8462:119;8482:88;507:21596;;8500:45;;;9432:10;8500:45;9432:10;8500:45;9432:10;8517:15;8500:45;507:21596;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;8500:45;507:21596;8490:56;;8567:3;507:21596;;;;8462:119;507:21596;;;;;;8626:11;8622:52;;9343:364;8987:35;9069:136;507:21596;;;;:::i;:::-;;;;;;;8718:128;;8500:45;8718:128;;507:21596;8718:128;507:21596;8718:128;;507:21596;8718:128;;;;507:21596;8901:29;8873:10;507:21596;8901:29;;:::i;:::-;9432:10;507:21596;;;;8941:15;507:21596;;;;;;;;:::i;:::-;9432:10;;8987:35;:::i;:::-;9033:18;;;507:21596;9033:18;:::i;:::-;;507:21596;;9033:18;507:21596;;;;;;;;;;;;;;;;;;;;9432:10;;507:21596;;9069:136;9343:364::o;8622:52::-;8987:35;8654:8;9069:136;8654:8;;:::i;:::-;8622:52;;;;;507:21596;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;4071:197::-;-1:-1:-1;;;;;507:21596:13;-1:-1:-1;507:21596:13;;;4150:15;507:21596;;;;;;;;-1:-1:-1;4193:12:13;:::o;1796:162:0:-;1710:6;507:21596:13;-1:-1:-1;;;;;507:21596:13;735:10:8;1855:23:0;1851:101;;1796:162::o;1851:101::-;507:21596:13;;-1:-1:-1;;;1901:40:0;;735:10:8;1901:40:0;;;507:21596:13;;;1901:40:0;507:21596:13;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;19827:1032;507:21596;;:::i;:::-;;19960:112;20006:18;507:21596;;;;;:::i;:::-;;;;:::i;:::-;19982:42;;19960:112;:::i;:::-;20006:18;507:21596;;-1:-1:-1;;;;;507:21596:13;;20174:14;;;507:21596;20226:12;;;;20240:7;20226:12;;;20240:7;:::i;:::-;20745:52;20282:15;;;20563:27;20006:18;20563:11;20271:30;20282:18;:15;;507:21596;;;;;;;;;;20271:30;507:21596;20444:27;20333:15;20444:11;20322:30;20333:18;;:15;;507:21596;;;;20322:30;507:21596;20365:11;:28;:20;:11;;;:::i;:::-;-1:-1:-1;20365:20:13;507:21596;;-1:-1:-1;;507:21596:13;;;;20365:28;20404:29;:24;:11;;;:::i;:::-;:24;;20431:2;507:21596;;;20404:29;20444:11;:::i;:::-;:22;;20469:2;507:21596;;;20444:27;20484:28;20365:20;20484:11;;;:::i;20563:27::-;20641:15;507:21596;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;20626:33;;;;;507:21596;;;;;20626:101;;20757:12;507:21596;20745:52;20226:12;507:21596;;;;;20745:52;;;:::i;:::-;;;;19827:1032;:::o;20626:101::-;;;;;;;507:21596;1024:2;507:21596;;1024:2;507:21596;;;;:::o;:::-;-1:-1:-1;;507:21596:13;;;;;;;;:::o;:::-;-1:-1:-1;;507:21596:13;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;8873:10;507:21596;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;8873:10;507:21596;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;507:21596:13;;;;:::o;:::-;-1:-1:-1;;507:21596:13;;;;;;;:::o;5169:219::-;5290:15;;;:::i;:::-;507:21596;;;;5341:26;507:21596;;:::i;5341:26::-;507:21596;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;-1:-1:-1;;;;;;507:21596:13;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12294:481::-;;507:21596;;;12458:12;12469:1;12458:12;;:28;;;;;;12294:481;507:21596;;;;12710:38;:32;507:21596;12710:47;12578:59;12710:57;12578:59;;;;;12556:143;12629:1;12593:32;:21;12603:10;12593:21;:::i;:::-;:32;507:21596;12593:37;;12556:143;:::i;:::-;507:21596;:::i;12710:32::-;:38;;:47;:::i;:::-;:57;507:21596;;;;;;;;;;;;;;;;;;;;;;;;;12578:59;12556:143;12469:1;12556:143;:::i;507:21596::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;;;;12458:28;12485:1;12474:12;;;12458:28;;;507:21596;;;;:::o;:::-;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;14265:499;14365:22;14265:499;14365:22;:::i;:::-;14436:15;;;;507:21596;;14422:10;-1:-1:-1;;;;;507:21596:13;;;14422:32;;:85;;;;14265:499;507:21596;;;;;14613:13;14591:129;14613:13;14748:7;14613:13;;;507:21596;;;;14613:21;;:46;;;;14265:499;14591:129;;:::i;:::-;14748:7;:::i;14613:46::-;507:21596;;;;;;-1:-1:-1;14638:21:13;;14613:46;;;507:21596;;;-1:-1:-1;;;507:21596:13;;;;;;;;;;;;;;;;;-1:-1:-1;;;507:21596:13;;;;;;;14422:85;507:21596;;;;;;;14422:10;14475:32;14422:85;;;;507:21596;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;20901:606::-;21015:7;;21011:50;;21071:14;21021:1;21096:11;21021:1;21118:69;21125:6;;;21217:14;;;;;:::i;:::-;21242:15;21268:202;21275:7;;;21480:19;;;20901:606;:::o;21268:202::-;21303:5;;;:::i;:::-;507:21596;21396:12;21337:31;21342:26;21348:19;21173:2;507:21596;;21353:14;;;;:::i;:::-;21348:19;;:::i;21342:26::-;21337:31;:::i;:::-;507:21596;;-1:-1:-1;;;;;;507:21596:13;;;21396:12;21423;;;;;;:::i;:::-;;21268:202;;;;21118:69;21148:5;;21173:2;21148:5;;:::i;:::-;507:21596;;21118:69;;;21011:50;507:21596;;;;;;:::i;:::-;;;;-1:-1:-1;;;507:21596:13;;;;21039:10;:::o;7004:690:2:-;;;;;;507:21596:13;;;;1478:27;;;;1474:119;;-1:-1:-1;;;;;;;507:21596:13;;;7245:443:2;;7004:690;;;;;;;:::o;7245:443::-;507:21596:13;;7344:1:2;7330:15;7344:1;;4313:82:7;;;;7545:4:2;4313:82:7;;;;;;735:10:8;;7545:4:2;:::i;:::-;7245:443;;;;;;;;7326:352;15154:14;;;;;;;15150:808;;7326:352;;;;;;;;;15150:808;15192:78;507:21596:13;-1:-1:-1;15192:78:2;507:21596:13;;;;;;;;;;;;;15192:78:2;;;;735:10:8;15192:78:2;;;;:::i;:::-;;;;;-1:-1:-1;;15192:78:2;;;15150:808;-1:-1:-1;15188:760:2;;15539:409;;;:::i;:::-;507:21596:13;;;;15589:18:2;;;507:21596:13;;-1:-1:-1;;;15693:26:2;;-1:-1:-1;;;;;507:21596:13;;15192:78:2;15693:26;;507:21596:13;;;4323:42:2;15585:349;15821:95;;15192:78;15821:95;;15188:760;-1:-1:-1;;;;;;507:21596:13;15349:60:2;15345:179;;15188:760;15150:808;;;;;;;;15345:179;507:21596:13;;-1:-1:-1;;;15479:26:2;;-1:-1:-1;;;;;507:21596:13;;;;15192:78:2;15479:26;;507:21596:13;;;4323:42:2;15192:78;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;7577:456:13;1024:2;7577:456;507:21596;;7784:60;;;7801:16;;507:21596;;7819:15;507:21596;;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;7784:60;;;;;;:::i;:::-;507:21596;7756:103;;507:21596;7928:16;;7924:71;;7577:456;:::o;7924:71::-;7961:22;507:21596;7577:456;:::o;10746:346:2:-;-1:-1:-1;;;;;507:21596:13;;;10746:346:2;10842:16;;10838:88;;10985:29;16291:632;;;9013:1:13;16291:632:2;;;;;;;;;;9013:1:13;16291:632:2;;9013:1:13;16291:632:2;;;;;;;;;16080:849;10985:29;507:21596:13;;;;;;1478:27;;;;1474:119;;-1:-1:-1;;507:21596:13;;7249:16:2;7330:15;7249:16;;4313:82:7;;;7545:4:2;4313:82:7;;;;;;735:10:8;;7545:4:2;:::i;7326:352::-;15154:14;;;;;15150:808;;7326:352;;;;;;10746:346::o;15150:808::-;15192:78;507:21596:13;15192:78:2;507:21596:13;-1:-1:-1;507:21596:13;;;;;;;;;;;15192:78:2;;;;735:10:8;15192:78:2;;;;:::i;:::-;;;;;-1:-1:-1;;15192:78:2;;;15150:808;-1:-1:-1;15188:760:2;;15539:409;;;:::i;15188:760::-;-1:-1:-1;;;;;;507:21596:13;15349:60:2;15345:179;;15188:760;15150:808;;;;;;;15192:78;;;;;;;;;;;;;;;:::i;:::-;;;;;507:21596:13;;18037:1;507:21596;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;507:21596:13;;;;;;;;;;;;;;;;;15033:4171;18616:63;19047:47;19058:35;19074:18;;15141:15;15130:30;15141:18;:15;;;;507:21596;;;;;;;;;;15130:30;507:21596;15175:13;;;;507:21596;;;15141:15;;;15216;507:21596;15141:15;;;;;15206:29;;-1:-1:-1;;;;;507:21596:13;;:::i;15206:29::-;:42;507:21596;15141:15;;15327:34;15342:18;15141:15;15263:49;:34;15278:18;15141:15;;;15278;507:21596;;;;;;;;;;15263:34;:49;507:21596;15141:15;;15342;507:21596;-1:-1:-1;;;;;507:21596:13;;;15327:34;:50;507:21596;;;;:::i;:::-;;;;;15114:274;;;507:21596;;;;15263:49;15114:274;;507:21596;15114:274;;;507:21596;15175:13;15114:274;;507:21596;15431:30;15442:18;;15141:15;;;15442;507:21596;;;;15431:30;507:21596;15175:13;15476:16;;15175:13;;;15476;507:21596;;;;15476:16;15141:15;;15507:29;15517:18;;15141:15;;;15517;507:21596;;;;15507:29;:42;507:21596;;15141:15;15628:34;15643:18;;15141:15;15263:49;15564:34;15579:18;;15141:15;;;15579;507:21596;;;;15564:34;:49;507:21596;15141:15;;15643;507:21596;;;;15628:34;:50;507:21596;;;;:::i;:::-;;;;;15114:274;15415;;507:21596;15263:49;15415:274;;507:21596;15415:274;;;507:21596;15175:13;15415:274;;507:21596;;;;:::i;:::-;-1:-1:-1;507:21596:13;;-1:-1:-1;15114:274:13;15738:24;;507:21596;15702:60;507:21596;;15458:1;15779:12;;:28;;;;;15033:4171;15775:2323;;;-1:-1:-1;;;15114:274:13;;507:21596;15263:49;15415:274;;507:21596;-1:-1:-1;15263:49:13;;-1:-1:-1;;15141:15:13;;;15882;507:21596;-1:-1:-1;;;;;;;;;;;18115:27:13;;;15871:39;;15141:15;;-1:-1:-1;;;;;507:21596:13;19557:39;:::i;15871:::-;;15824:565;15263:49;507:21596;18115:27;;;;;:::i;:::-;;;;-1:-1:-1;15175:13:13;;;18184;507:21596;-1:-1:-1;18215:20:13;15175:13;;;18215;507:21596;;;;18215:20;507:21596;18273:7;18259:12;15263:49;18259:12;;;18273:7;:::i;:::-;18695:70;15141:15;;15738:24;18498:47;18509:35;18525:18;18386:101;18458:18;15141:15;;;18458;507:21596;;;;;;;;;;18458:18;18386:101;:::i;:::-;15141:15;;;;18525;507:21596;15141:15;;;;-1:-1:-1;;;;;507:21596:13;;;18525:18;-1:-1:-1;;;;;507:21596:13;;;;;8941:15;507:21596;;;;;;;18509:35;507:21596;18498:47;:::i;:::-;:76;;507:21596;18695:70;:::i;:::-;15141:15;;;18643;507:21596;15141:15;;18616:47;;18627:35;;-1:-1:-1;;;;;507:21596:13;18643:18;507:21596;18616:47;:63;;507:21596;19126:70;15141:15;;15738:24;18929:47;18940:35;18956:18;;18817:101;18889:18;;15141:15;;;18889;507:21596;;;;18817:101;15141:15;;;;18956;507:21596;;;;19126:70;15141:15;;19074;507:21596;;;;19047:47;:63;;507:21596;15033:4171::o;15824:565::-;15415:274;;;507:21596;15263:49;15114:274;;507:21596;15936:22;;15263:49;;15141:15;;;18115:27;-1:-1:-1;;;;;;;;;;;15141:15:13;15979:39;15141:15;15990:18;;15141:15;;;15990;507:21596;;;;15979:39;;15824:565;;15932:457;15738:24;507:21596;;16185:17;507:21596;;;16059:43;507:21596;16059:17;16237;507:21596;;;16059:17;:::i;:::-;:30;;507:21596;;;16059:43;:::i;:::-;507:21596;;15114:274;;;507:21596;16121:43;507:21596;16121:17;507:21596;;16121:17;:::i;:43::-;507:21596;;;16185:17;:::i;:::-;:28;;:33;507:21596;;16185:33;:::i;16237:17::-;:28;;:33;507:21596;;16237:33;:::i;:::-;507:21596;;-1:-1:-1;;;;;;;;;;;18115:27:13;15141:15;;;16358;15824:565;;15775:2323;16410:28;18115:27;16410:28;;;-1:-1:-1;;;;;;;;;;;16410:28:13;;;;;15775:2323;16406:1692;;;15415:274;;16470:22;15263:49;15415:274;;507:21596;15175:13;15415:274;;507:21596;16470:22;;:::i;:::-;15114:274;;;507:21596;15114:274;;507:21596;;16511:17;;;;;15141:15;;;16560;507:21596;16549:39;;15141:15;-1:-1:-1;;;;;;507:21596:13;;-1:-1:-1;16560:18:13;;-1:-1:-1;;;507:21596:13;16507:657;15738:24;16629:25;17115:17;16629:25;;;17063:17;16629:25;15415:274;15175:13;15415:274;;507:21596;16679:22;16675:297;16679:22;;;15415:274;;;;;15263:49;15415:274;;507:21596;16675:297;507:21596;16992:17;507:21596;;16992:17;:::i;:::-;:30;;507:21596;;17063:17;:::i;17115:::-;:28;;:33;507:21596;;17115:33;:::i;:::-;507:21596;;15775:2323;;16675:297;16913:39;16824:16;;16934:18;16824:16;16934:18;16824:16;;:::i;:::-;15141:15;;16934;507:21596;;;;16934:18;-1:-1:-1;;;;;507:21596:13;;;;16913:39;16675:297;;16406:1692;15738:24;;;;17185:12;;;:28;;;;;16406:1692;17181:917;;;15114:274;;17245:22;15263:49;15114:274;;507:21596;15175:13;15114:274;;507:21596;17245:22;;:::i;:::-;15415:274;;;507:21596;15415:274;;507:21596;;17286:17;;;;;15141:15;;;;;;17324:39;15141:15;;17335:18;;15141:15;;;17335;507:21596;;;;17282:657;17890:17;17404:25;;;17838:17;17404:25;15114:274;;15175:13;15114:274;;507:21596;17454:22;17450:297;17454:22;;;15114:274;;;;;15263:49;15114:274;;507:21596;17450:297;507:21596;17767:17;507:21596;;17767:17;:::i;17838:::-;:28;;:33;507:21596;;17838:33;:::i;17890:17::-;:28;;:33;507:21596;;17890:33;:::i;17450:297::-;17599:16;17709:18;17599:16;17688:39;17599:16;;:::i;:::-;15141:15;;17709;507:21596;-1:-1:-1;;;;;507:21596:13;;;17688:39;17450:297;;17181:917;17960:28;-1:-1:-1;17960:28:13;;;17181:917;17956:142;;17181:917;;;;15775:2323;;17956:142;507:21596;18005:17;18053;507:21596;;18005:17;:::i;18053:::-;:28;;:33;507:21596;;18053:33;:::i;:::-;507:21596;;17956:142;;;;;17960:28;15415:274;;15114;15415;;507:21596;17976:12;17960:28;;17185;15415:274;15458:1;15114:274;15415;;507:21596;17201:12;17185:28;;16410;15415:274;15738:24;15114:274;15415;;507:21596;16426:12;16410:28;;15779;15415:274;15458:1;15114:274;15415;;507:21596;15795:12;15779:28;;507:21596;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;507:21596:13;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13761:974:2:-;;;;;;13967:14;;13963:766;;13761:974;;;;;:::o;13963:766::-;14005:71;507:21596:13;14005:71:2;507:21596:13;;;;;;;;;;14005:71:2;;;;;;;;:::i;:::-;;507:21596:13;;-1:-1:-1;;;;;507:21596:13;;14005:71:2;;507:21596:13;;14005:71:2;;;-1:-1:-1;14001:718:2;;14310:409;;;:::i;13761:974::-;;;;;;;13967:14;;13963:766;;13761:974;;;;;;:::o;13963:766::-;14005:71;;507:21596:13;;;;;;;;;;;14005:71:2;;;;;;;;:::i;:::-;;507:21596:13;13984:1:2;-1:-1:-1;;;;;507:21596:13;;14005:71:2;;13984:1;;14005:71;;;13963:766;-1:-1:-1;14001:718:2;;14310:409;;;:::i;14001:718::-;-1:-1:-1;;;;;;507:21596:13;14125:55:2;14121:174;;14001:718;13963:766;;;;;;;;14005:71;;;;;;;;;;;;;;;:::i;:::-;;;;"},"methodIdentifiers":{"CELESTION()":"9e4ecd11","DEVIL()":"d2198cc5","FIREBIRD()":"703730a5","GRIFFIN()":"de96cefc","KAMO()":"0677aa4e","KUKULKAN()":"f1da7339","MAX_ATTACK_DEFEND_STRENGTH()":"0daea2cd","attackOrDefendChoice(uint8,string)":"ba274956","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","baseURI()":"6c0360eb","battles(uint256)":"606d2e96","createBattle(string)":"2ca04522","createRandomGameToken(string)":"9ec40aa3","exists(uint256)":"4f558e79","gameTokens(uint256)":"bf034b69","getAllBattles()":"5c93fc3d","getAllPlayerTokens()":"015a3792","getAllPlayers()":"efa1c482","getBattle(string)":"16801d17","getBattleMoves(string)":"9b09cc87","getPlayer(address)":"5c12cd4b","getPlayerToken(address)":"10898e4c","getTotalSupply()":"c4e41b22","isApprovedForAll(address,address)":"e985e9c5","isBattle(string)":"1107ae3d","isPlayer(address)":"09c95e10","isPlayerToken(address)":"bf103a4d","joinBattle(string)":"a1b4f57c","owner()":"8da5cb5b","players(uint256)":"f71d96cb","quitBattle(string)":"996d7bea","registerPlayer(string,string)":"845f433b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setURI(string)":"02fe5305","supportsInterface(bytes4)":"01ffc9a7","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","totalSupply(uint256)":"bd85b039","totalTokenMinted()":"579b526d","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"battleName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"loser\",\"type\":\"address\"}],\"name\":\"BattleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"battleName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isFirstMove\",\"type\":\"bool\"}],\"name\":\"BattleMove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"battleName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player2\",\"type\":\"address\"}],\"name\":\"NewBattle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"attackStrength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"defenseStrength\",\"type\":\"uint256\"}],\"name\":\"NewGameToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"NewPlayer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"damagedPlayers\",\"type\":\"address[2]\"}],\"name\":\"RoundEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CELESTION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEVIL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FIREBIRD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GRIFFIN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KAMO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"KUKULKAN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_ATTACK_DEFEND_STRENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_choice\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_battleName\",\"type\":\"string\"}],\"name\":\"attackOrDefendChoice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"battles\",\"outputs\":[{\"internalType\":\"enum AVAXGods.BattleStatus\",\"name\":\"battleStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"battleHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createBattle\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AVAXGods.BattleStatus\",\"name\":\"battleStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"battleHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"players\",\"type\":\"address[2]\"},{\"internalType\":\"uint8[2]\",\"name\":\"moves\",\"type\":\"uint8[2]\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct AVAXGods.Battle\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomGameToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gameTokens\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"attackStrength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defenseStrength\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllBattles\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AVAXGods.BattleStatus\",\"name\":\"battleStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"battleHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"players\",\"type\":\"address[2]\"},{\"internalType\":\"uint8[2]\",\"name\":\"moves\",\"type\":\"uint8[2]\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct AVAXGods.Battle[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPlayerTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"attackStrength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defenseStrength\",\"type\":\"uint256\"}],\"internalType\":\"struct AVAXGods.GameToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPlayers\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"playerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"playerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"playerMana\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"playerHealth\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inBattle\",\"type\":\"bool\"}],\"internalType\":\"struct AVAXGods.Player[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getBattle\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AVAXGods.BattleStatus\",\"name\":\"battleStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"battleHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"players\",\"type\":\"address[2]\"},{\"internalType\":\"uint8[2]\",\"name\":\"moves\",\"type\":\"uint8[2]\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct AVAXGods.Battle\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_battleName\",\"type\":\"string\"}],\"name\":\"getBattleMoves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"P1Move\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"P2Move\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getPlayer\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"playerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"playerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"playerMana\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"playerHealth\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inBattle\",\"type\":\"bool\"}],\"internalType\":\"struct AVAXGods.Player\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getPlayerToken\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"attackStrength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defenseStrength\",\"type\":\"uint256\"}],\"internalType\":\"struct AVAXGods.GameToken\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"isBattle\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isPlayer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isPlayerToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"joinBattle\",\"outputs\":[{\"components\":[{\"internalType\":\"enum AVAXGods.BattleStatus\",\"name\":\"battleStatus\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"battleHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"players\",\"type\":\"address[2]\"},{\"internalType\":\"uint8[2]\",\"name\":\"moves\",\"type\":\"uint8[2]\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct AVAXGods.Battle\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"playerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"playerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"playerMana\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"playerHealth\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inBattle\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_battleName\",\"type\":\"string\"}],\"name\":\"quitBattle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_gameTokenName\",\"type\":\"string\"}],\"name\":\"registerPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokenMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Ava-LabsJulian MartinezGabriel CardonaRaj Ranjan\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `metadataURI` to the token collection\",\"params\":{\"_metadataURI\":\"baseURI where token metadata is stored\"}},\"createBattle(string)\":{\"details\":\"Creates a new battle\",\"params\":{\"_name\":\"battle name; set by player\"}},\"createRandomGameToken(string)\":{\"details\":\"Creates a new game token\",\"params\":{\"_name\":\"game token name; set by player\"}},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"joinBattle(string)\":{\"details\":\"Player joins battle\",\"params\":{\"_name\":\"battle name; name of battle player wants to join\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerPlayer(string,string)\":{\"details\":\"Registers a player\",\"params\":{\"_name\":\"player name; set by player\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"title\":\"AVAXGods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract handles the token management and battle logic for the AVAXGods gameVersion 1.0.0\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AvaxGods.sol\":\"AVAXGods\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0x1cebc792116430641b9ec887f245ce5dde0ace17a8d5fc38e03fd087e061b537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21fea8da292377bdc2930254fd5536c1d2be84a1fcb6268527ab8dd1142b23ee\",\"dweb:/ipfs/QmS5AwrNHbvcFB7TmwcXZNXPgMXZxRxmmcey4eP8YTvBgX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/AvaxGods.sol\":{\"keccak256\":\"0x92c6cbeb01b82037145d773a5e1a2626988baa87fee6a69364637fda978dd940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e875e446921a8148b9a4675e3b77dc6860e2a43a9cfc49600cb6b730cac8c67\",\"dweb:/ipfs/QmeAoDQE9qDbhd2rqGfTqSXkfk81mdeGDYyp4H5KzGrCKy\"]}},\"version\":1}"}}}}}